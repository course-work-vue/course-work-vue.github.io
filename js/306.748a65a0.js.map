{"version":3,"file":"js/306.748a65a0.js","mappings":"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","sources":["webpack://vue-3-authentication-jwt/./src/components/xlparse.vue","webpack://vue-3-authentication-jwt/../../source/xml/xmlBrowser.js","webpack://vue-3-authentication-jwt/./node_modules/fflate/esm/browser.js","webpack://vue-3-authentication-jwt/../../source/read/unpackXlsxFileBrowser.js","webpack://vue-3-authentication-jwt/../../source/xml/dom.js","webpack://vue-3-authentication-jwt/../../source/xml/xlsx.js","webpack://vue-3-authentication-jwt/../../source/read/parseProperties.js","webpack://vue-3-authentication-jwt/../../source/read/parseFilePaths.js","webpack://vue-3-authentication-jwt/../../source/read/parseStyles.js","webpack://vue-3-authentication-jwt/../../source/read/parseSharedStrings.js","webpack://vue-3-authentication-jwt/../../source/read/parseDate.js","webpack://vue-3-authentication-jwt/../../source/read/isDateTimestamp.js","webpack://vue-3-authentication-jwt/../../source/read/parseCellValue.js","webpack://vue-3-authentication-jwt/../../source/read/coordinates.js","webpack://vue-3-authentication-jwt/../../source/read/parseCell.js","webpack://vue-3-authentication-jwt/../../source/read/parseCells.js","webpack://vue-3-authentication-jwt/../../source/read/parseDimensions.js","webpack://vue-3-authentication-jwt/../../source/read/parseSheet.js","webpack://vue-3-authentication-jwt/../../source/read/dropEmptyRows.js","webpack://vue-3-authentication-jwt/../../source/read/dropEmptyColumns.js","webpack://vue-3-authentication-jwt/../../source/read/getData.js","webpack://vue-3-authentication-jwt/../../source/read/readXlsx.js","webpack://vue-3-authentication-jwt/../../source/types/InvalidError.js","webpack://vue-3-authentication-jwt/../../source/types/Number.js","webpack://vue-3-authentication-jwt/../../source/types/String.js","webpack://vue-3-authentication-jwt/../../source/types/Boolean.js","webpack://vue-3-authentication-jwt/../../source/types/Date.js","webpack://vue-3-authentication-jwt/../../../source/read/schema/convertToJson.js","webpack://vue-3-authentication-jwt/../../../source/read/schema/convertToJson.legacy.js","webpack://vue-3-authentication-jwt/../../../source/read/schema/convertToJson.spreadsheet.js","webpack://vue-3-authentication-jwt/../../../source/read/schema/convertMapToSchema.js","webpack://vue-3-authentication-jwt/../../source/read/readXlsxFileContents.js","webpack://vue-3-authentication-jwt/../../source/read/readXlsxFileBrowser.js","webpack://vue-3-authentication-jwt/../../source/read/readSheetNamesBrowser.js","webpack://vue-3-authentication-jwt/./src/components/xlparse.vue?b5b6"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <p>\r\n      <input type=\"file\" @change=\"onFileChange\" style=\"margin-left: 15vh;margin-top: 10vh;\">\r\n    </p>\r\n    <video ref=\"video\" width=\"150\" height=\"150\" style=\"display: none; position: absolute; top: 15vh; left: 45vh; transform: translateY(-50%); z-index: 1000; border-radius: 50%; object-fit: cover;\" autoplay muted>\r\n      <source src=\"/raccoon-dance.mp4\" type=\"video/mp4\">\r\n    </video>\r\n    <p>\r\n      <button @click=\"navExcManage\" style=\"margin-left: 15vh;margin-top: 10vh; width:200px; height:60px;\" :style=\"buttonStyle1\" class=\"btn btn-primary float-start\" type=\"button\"><i class=\"material-icons-outlined\"></i>Нагрузка по преподавателям</button>\r\n    </p>\r\n    <p>\r\n      <button @click=\"navExcManage2\" style=\"margin-left: 5vh;margin-top: 10vh; width:200px; height:60px;\" :style=\"buttonStyle2\" class=\"btn btn-primary float-start\" type=\"button\"><i class=\"material-icons-outlined\"></i>Состав</button>\r\n    </p>\r\n    <p>\r\n      <button @click=\"navExcManage3\" style=\"margin-left: 5vh;margin-top: 10vh; width:200px; height:60px;\" :style=\"buttonStyle3\" class=\"btn btn-primary float-start\" type=\"button\"><i class=\"material-icons-outlined\"></i>Факультеты</button>\r\n    </p>\r\n    <p>\r\n      <button @click=\"navExcManage4\" style=\"margin-left: 5vh;margin-top: 10vh; width:200px; height:60px;\" :style=\"buttonStyle4\" class=\"btn btn-primary float-start\" type=\"button\"><i class=\"material-icons-outlined\"></i>Кафедры</button>\r\n    </p>\r\n    <p>\r\n      <button @click=\"navExcManage5\" style=\"margin-left: 15vh;margin-top: 5vh; width:200px; height:60px;\" :style=\"buttonStyle5\" class=\"btn btn-primary float-start\" type=\"button\"><i class=\"material-icons-outlined\"></i>Итог ВО</button>\r\n    </p>\r\n    <p>\r\n      <button @click=\"navExcManage6\" style=\"margin-left: 5vh;margin-top: 5vh; width:200px; height:60px;\" :style=\"buttonStyle6\" class=\"btn btn-primary float-start\" type=\"button\"><i class=\"material-icons-outlined\"></i>Распределение</button>\r\n    </p>\r\n    <p>\r\n      <button @click=\"navExcManage7\" style=\"margin-left: 5vh;margin-top: 5vh; width:200px; height:60px;\" :style=\"buttonStyle7\" class=\"btn btn-primary float-start\" type=\"button\"><i class=\"material-icons-outlined\"></i>ОФО ВО</button>\r\n    </p>\r\n    <p>\r\n      <button @click=\"navExcManage8\" style=\"margin-left: 5vh;margin-top: 5vh; width:200px; height:60px;\" :style=\"buttonStyle81\" class=\"btn btn-primary float-start\" type=\"button\"><i class=\"material-icons-outlined\"></i>Для расписания (лекции)</button>\r\n    </p>\r\n    <p>\r\n      <button @click=\"navExcManage9\" style=\"margin-left: 15vh;margin-top: 5vh; width:200px; height:60px;\" :style=\"buttonStyle82\" class=\"btn btn-primary float-start\" type=\"button\"><i class=\"material-icons-outlined\"></i>Для расписания (практики)</button>\r\n    </p>\r\n    <p>\r\n      <button @click=\"navExcManage10\" style=\"margin-left: 5vh;margin-top: 5vh; width:200px; height:60px;\" :style=\"buttonStyle9\" class=\"btn btn-primary float-start\" type=\"button\"><i class=\"material-icons-outlined\"></i>Курсовые</button>\r\n    </p>\r\n    <p>\r\n      <button @click=\"navExcManage11\" style=\"margin-left: 5vh;margin-top: 5vh; width:200px; height:60px;\" :style=\"buttonStyle10\" class=\"btn btn-primary float-start\" type=\"button\"><i class=\"material-icons-outlined\"></i>ПланСвод</button>\r\n    </p>\r\n    <!--\r\n    <p>\r\n      <button @click=\"navExcManage12\" style=\"margin-left: 5vh;margin-top: 5vh; width:200px; height:60px;\" :style=\"buttonStyle11\" class=\"btn btn-primary float-start\" type=\"button\"><i class=\"material-icons-outlined\"></i>Компетенции</button>\r\n    </p>\r\n    <p>\r\n      <button @click=\"navExcManage13\" style=\"margin-left: 15vh;margin-top: 5vh; width:200px; height:60px;\" :style=\"buttonStyle12\" class=\"btn btn-primary float-start\" type=\"button\"><i class=\"material-icons-outlined\"></i>Нагрузка по курсам</button>\r\n    </p>\r\n    <p>\r\n      <button @click=\"navExcManage14\" style=\"margin-left: 5vh;margin-top: 5vh; width:200px; height:60px;\" :style=\"buttonStyle13\" class=\"btn btn-primary float-start\" type=\"button\"><i class=\"material-icons-outlined\"></i>Диаграмма курсов</button>\r\n    </p>\r\n    <p>\r\n      <button @click=\"navExcManage15\" style=\"margin-left: 5vh;margin-top: 5vh; width:200px; height:60px;\" :style=\"buttonStyle14\" class=\"btn btn-primary float-start\" type=\"button\"><i class=\"material-icons-outlined\"></i>Практики</button>\r\n    </p>\r\n    -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport readXlsxFile from 'read-excel-file'\r\nimport { readSheetNames } from 'read-excel-file';\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport userService from '../services/user.service';\r\n\r\nlet kaf_global = \"\"\r\nlet fac_global = \"\"\r\n\r\nexport default {\r\n  name: 'Profile',\r\n  data() {\r\n    return {\r\n      buttonStyle1: {\r\n        backgroundColor: 'blue',\r\n      },\r\n      buttonStyle2: {\r\n        backgroundColor: 'blue',\r\n      },\r\n      buttonStyle3: {\r\n        backgroundColor: 'blue',\r\n      },\r\n      buttonStyle4: {\r\n        backgroundColor: 'blue',\r\n      },\r\n      buttonStyle5: {\r\n        backgroundColor: 'blue',\r\n      },\r\n      buttonStyle6: {\r\n        backgroundColor: 'blue',\r\n      },\r\n      buttonStyle7: {\r\n        backgroundColor: 'blue',\r\n      },\r\n      buttonStyle81: {\r\n        backgroundColor: 'blue',\r\n      },\r\n      buttonStyle82: {\r\n        backgroundColor: 'blue',\r\n      },\r\n      buttonStyle9: {\r\n        backgroundColor: 'blue',\r\n      },\r\n      buttonStyle10: {\r\n        backgroundColor: 'blue',\r\n      },\r\n      buttonStyle11: {\r\n        backgroundColor: 'blue',\r\n      },\r\n      buttonStyle12: {\r\n        backgroundColor: 'blue',\r\n      },\r\n      buttonStyle13: {\r\n        backgroundColor: 'blue',\r\n      },\r\n      buttonStyle14: {\r\n        backgroundColor: 'blue',\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    currentUser() {\r\n      return this.$store.state.auth.user;\r\n    }\r\n  },\r\n  mounted() {\r\n\r\n    this.updateButtonColor1();\r\n    this.updateButtonColor2();\r\n    this.updateButtonColor3();\r\n    this.updateButtonColor4();\r\n    this.updateButtonColor5();\r\n    this.updateButtonColor6();\r\n    this.updateButtonColor7();\r\n    this.updateButtonColor81();\r\n    this.updateButtonColor82();\r\n    this.updateButtonColor9();\r\n    this.updateButtonColor10();\r\n    this.updateButtonColor11();\r\n    this.updateButtonColor12();\r\n    this.updateButtonColor13();\r\n    this.updateButtonColor14();\r\n\r\n    if (!this.currentUser) {\r\n      this.$router.push('/login');\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    async onFileChange(event) {\r\n\r\n      const video = this.$refs.video;\r\n      if (video) {\r\n        video.load(); // Загружаем видео перед воспроизведением\r\n        video.style.display = 'block';\r\n        video.muted = false;\r\n        \r\n        try {\r\n          await video.play();\r\n          setTimeout(async () => {\r\n            try {\r\n              await video.pause();\r\n              video.style.display = 'none';\r\n              this.updateButtonColor1();\r\n              this.updateButtonColor2();\r\n              this.updateButtonColor3();\r\n              this.updateButtonColor4();\r\n              this.updateButtonColor5();\r\n              this.updateButtonColor6();\r\n              this.updateButtonColor7();\r\n              this.updateButtonColor81();\r\n              this.updateButtonColor82();\r\n              this.updateButtonColor9();\r\n              this.updateButtonColor10();\r\n              this.updateButtonColor11();\r\n              this.updateButtonColor12();\r\n              this.updateButtonColor13();\r\n              this.updateButtonColor14();\r\n            } catch (pauseError) {\r\n              console.error('Ошибка при остановке видео:', pauseError);\r\n            }\r\n          }, 10000); // 10000 миллисекунд = 10 секунд\r\n        } catch (playError) {\r\n          console.error('Ошибка при воспроизведении видео:', playError);\r\n        }\r\n      } else {\r\n        console.error('Видео элемент не найден');\r\n      }\r\n\r\n      var last_hope = \"\"\r\n\r\n      async function fd(rows,name) {\r\n        let a = []\r\n        \r\n        for (var i = 10; i< 230;i++) {\r\n          let str_gruz = \"('\" + name + \"','\" + fac_global + \"','\" + kaf_global +\"',\" \r\n          str_gruz = str_gruz + \"'\" + rows[i][1] + \"',\"\r\n\r\n          str_gruz = str_gruz + \"'\" + rows[i][2] + \"',\"\r\n          str_gruz = str_gruz + \"'\" + rows[i][4] + \"',\"\r\n\r\n          if (i<=130) {\r\n            str_gruz = str_gruz + \"'1\" + \"',\" // семестр\r\n          }\r\n          else {\r\n            str_gruz = str_gruz + \"'2\" + \"',\" // семестр\r\n          }\r\n\r\n          str_gruz = str_gruz + \"'\" + rows[i][5] + \"',\"\r\n          str_gruz = str_gruz + \"'\" + rows[i][6] + \"',\"\r\n\r\n          if (rows[i][8]!=\"-\") {\r\n              str_gruz = str_gruz + \"'\" + rows[i][8] + \"',\"\r\n            }\r\n            else {\r\n              str_gruz = str_gruz + \"\" + rows[i][8] + \",\"\r\n            }\r\n            if (rows[i][9]!=\"-\") {\r\n              str_gruz = str_gruz + \"'\" + rows[i][9] + \"',\"\r\n            }\r\n            else {\r\n              str_gruz = str_gruz + \"\" + rows[i][9] + \"\"\r\n            }\r\n            if (rows[i][10]!=\"-\") {\r\n              str_gruz = str_gruz + \"'\" + rows[i][10] + \"',\"\r\n            }\r\n            else {\r\n              str_gruz = str_gruz + \"\" + rows[i][j=10] + \",\"\r\n            }\r\n\r\n          for (var j = 50;j<=62;j++)\r\n          {\r\n            if (rows[i][j]!=null) {\r\n              str_gruz = str_gruz + \"'\" + rows[i][j] + \"',\"\r\n            }\r\n            else {\r\n              str_gruz = str_gruz + \"\" + rows[i][j] + \",\"\r\n            }\r\n          }\r\n          if (rows[i][63]!=null) {\r\n              str_gruz = str_gruz + \"'\" + rows[i][63] + \"')\"\r\n            }\r\n            else {\r\n              str_gruz = str_gruz + \"\" + rows[i][63] + \")\"\r\n            }\r\n\r\n          let flag2 = false\r\n          let flag21 = false\r\n          if (rows[i][2]!='0.0.0'&&rows[i][2]!=null) {\r\n            if (i>9&&i<25) {\r\n                if (rows[i][58]!=\"0\") {  //ВКР\r\n                  flag2 = true\r\n                }\r\n            }\r\n            else {\r\n              flag2 = true\r\n            }\r\n            if (i>52&&i<64) {\r\n                if (rows[i][58]!=null) {  //ВКР\r\n                  flag21 = true\r\n                }\r\n            }\r\n            else {\r\n              flag21 = true\r\n            }\r\n            if (i>63&&i<69) {\r\n              flag2 = false;\r\n            }\r\n          }\r\n          let flag3 = false\r\n          if (i>24&&i<53) {\r\n            if (rows[i][60]!=\"0\") {   //Работа в ГЭК\r\n              flag3 = true\r\n            }\r\n          }\r\n          else {\r\n            flag3=true\r\n          }\r\n          let flag4 = false;\r\n          if (i>68&&i<111) {\r\n            if (rows[i][50]!=\"0\"||rows[i][51]!=\"0\"||rows[i][52]!=\"0\"||rows[i][53]!=\"0\"||rows[i][54]!=\"0\"||rows[i][55]!=\"0\"){   //семестры\r\n              flag4 = true \r\n            }\r\n          }\r\n          else {\r\n            flag4=true\r\n          }\r\n          let flag5 = false;\r\n          if (i>110&&i<118) {\r\n            if (rows[i][56]!=\"0\"){   //семестры\r\n              flag5 = true \r\n            }\r\n          }\r\n          else {\r\n            flag5=true\r\n          }\r\n          let flag6 = false;\r\n  \r\n          if (i>117&&i<130) {\r\n            if (rows[i][61]!=\"0\"){   //семестры\r\n              flag6 = true \r\n            }\r\n          }\r\n          else {\r\n            flag6=true\r\n          }\r\n          let flag4n\r\n          if (i>130) {\r\n            if (rows[i][50]!=\"0\"||rows[i][51]!=\"0\"||rows[i][52]!=\"0\"||rows[i][53]!=\"0\"||rows[i][54]!=\"0\"||rows[i][55]!=\"0\"){   //семестры\r\n              flag4n = true \r\n            }\r\n          }\r\n          else {\r\n            flag4n=true\r\n          }\r\n          let flag5n = false;\r\n          if (i>162&&i<171) {\r\n            if (rows[i][56]!=\"0\"){   //семестры\r\n              flag5n = true \r\n            }\r\n          }\r\n          else {\r\n            flag5n=true\r\n          }\r\n\r\n          let flag6n = false;\r\n  \r\n          if (i>170&&i<200) {\r\n            if (rows[i][61]!=\"0\"){   //семестры\r\n              flag6n = true \r\n            }\r\n          }\r\n          else {\r\n            flag6n=true\r\n          }\r\n          \r\n          let flag7 = false;\r\n  \r\n          if (i>199&&i<222) {\r\n            if (rows[i][63]!=\"0\"){   //семестры\r\n              flag7 = true \r\n            }\r\n          }\r\n          else {\r\n            flag7=true\r\n          }\r\n          \r\n          let flag8 = false\r\n          if (i==222) {\r\n            if (rows[i][63]!=\"0\"){   //семестры\r\n              flag8 = true \r\n            }\r\n          }\r\n          else {\r\n            flag8=true\r\n          }\r\n          let flag9 = false\r\n          if (i==227) {\r\n            if (rows[i][62]!=\"0\"){   //семестры\r\n              flag9 = true \r\n            }\r\n          }\r\n          else {\r\n            flag9=true\r\n          }\r\n\r\n          if (flag2&&flag21&&flag3&&flag4&&flag5&&flag6&&flag4n&&flag5n&&flag6n&&flag7&&flag8&&flag9) {\r\n            if (last_hope == \"\")\r\n            {\r\n              last_hope = str_gruz\r\n            }\r\n            else {\r\n              last_hope = last_hope + \",\" + str_gruz\r\n            }\r\n            UserService.insertTempTeachNagr(str_gruz) \r\n            console.log(str_gruz)\r\n            a.push(str_gruz)\r\n          }\r\n        }\r\n\r\n        return a\r\n      }\r\n\r\n      async function for_dis(sheet_names) {\r\n        let result = []\r\n        let i = 0\r\n        for (let sheet_name of sheet_names) {\r\n          readXlsxFile(xlsxfile, {sheet: sheet_name}).then(async(rowsS) => {\r\n            result[i] = await setTimeout(fd, 10000, rowsS, sheet_name); \r\n            i=i+1\r\n            if (i==sheet_names.length-1){\r\n              alert(\"Данные успешно загружены!\")\r\n            }\r\n          })\r\n        }\r\n\r\n        return result\r\n      }\r\n\r\n\r\n    let xlsxfile = event.target.files ? event.target.files[0] : null;       // самый старт\r\n    \r\n    //console.log(xlsxfile)\r\n    \r\n    let flagSostav = false    //Наличие листов  Список флагов\r\n    let flagRaspr = false\r\n    let flagFac = false\r\n    let flagDep = false\r\n    let flagVO = false\r\n    let flagPractice = false\r\n    let flagShed = false;\r\n    let flagOfoVO=false\r\n    let flagKursVKR=false;\r\n\r\n    let flagTitul=false;\r\n\r\n    const p = new Promise(function(resolve) {\r\n      readSheetNames(xlsxfile).then((sheetNames) => {\r\n        for(let i = 0;i<sheetNames.length;i++) {\r\n          //fix исправить все false на true\r\n          if (sheetNames[i]==\"ИТОГ АСПИРАНТУРА\") {\r\n            readXlsxFile(xlsxfile, {sheet: \"ИТОГ АСПИРАНТУРА\"}).then((rowsG) => {\r\n\r\n              let arr_kaf = rowsG[1][0].split(\" \")\r\n              let arr_fac = rowsG[2][0].split(\" \")\r\n\r\n              kaf_global = arr_kaf.join(\" \")\r\n              fac_global = arr_fac.join(\" \")\r\n\r\n            })\r\n          }                               //Выставление флагов\r\n          if (sheetNames[i]==\"Состав КИТ\"){\r\n            flagSostav=false      \r\n         }\r\n         if (sheetNames[i]==\"факультет\"){\r\n           flagFac=false\r\n         }\r\n         if (sheetNames[i]==\"Распределение\"){\r\n           flagRaspr = true  // Исправить на true\r\n         }\r\n         if (sheetNames[i]==\"ИТОГ ВО\"){\r\n            flagVO = true\r\n         }\r\n         if (sheetNames[i]==\"Практики\"){\r\n            flagPractice=true\r\n         }\r\n         if (sheetNames[i]==\"Для расписания\"){\r\n            flagShed=true\r\n         }\r\n         if (sheetNames[i]==\"ОФО ВО\"){\r\n            flagOfoVO=true\r\n         }\r\n         if (sheetNames[i]==\"Курсовые\"){\r\n            flagKursVKR=true\r\n         }\r\n\r\n         // По направлениям\r\n         if (sheetNames[i]==\"Кафедры\"){\r\n           flagDep=true\r\n         }\r\n\r\n         if (sheetNames[i]==\"Титул\"){\r\n           flagTitul=true\r\n         }\r\n\r\n         if (i==sheetNames.length-1)\r\n          resolve()\r\n        }\r\n      })\r\n    })\r\n\r\n    let name1 = []\r\n    let name2 = []\r\n    let name3 = []\r\n    let dolj = []\r\n    let deg = []\r\n    let status = []\r\n    let dolj_id, deg_id, status_id, insFlag1, insFlag2, insFlag3\r\n    let temp = []\r\n    let k = 0\r\n    let mainStr = \"\"\r\n    let startStr = 0\r\n\r\n    p.then(() => {\r\n\r\n\r\n        if (flagSostav==true) {\r\n          UserService.clearTempSostav()\r\n          UserService.clearTempTeachGruz()\r\n\r\n          readXlsxFile(xlsxfile, {sheet: \"Состав КИТ\"}).then((rows1) => {\r\n\r\n          const p1 = new Promise(function(resolve1){\r\n            k = 1\r\n            while (rows1[k][9]!=null){\r\n              dolj.push(rows1[k][9])\r\n              k+=1\r\n            }\r\n          if (rows1[k][9]==null) {\r\n            resolve1()\r\n          }\r\n          })\r\n      \r\n          p1.then(() => {\r\n            console.log(\"p1\")\r\n          })\r\n\r\n          const p2 = new Promise(function(resolve2){\r\n            k = 1\r\n            while (rows1[k][10]!=null){\r\n              deg.push(rows1[k][10])\r\n              k+=1\r\n            }\r\n\r\n            if (rows1[k][10]==null) {\r\n              resolve2()\r\n            }\r\n          })\r\n      \r\n          p2.then(() => {\r\n            console.log(\"p2\")\r\n          })\r\n\r\n          const p3 = new Promise(function(resolve3){\r\n            k = 1\r\n            while (rows1[k][11]!=null){\r\n              status.push(rows1[k][11])\r\n              k+=1\r\n            }\r\n            \r\n\r\n          if (rows1[k][11]==null) {\r\n            resolve3()\r\n          }\r\n          })\r\n      \r\n          p3.then(() => {\r\n            console.log(\"p3\")\r\n          })\r\n\r\n          const pf = new Promise(function(resolveF){\r\n            for (let i = 1;i<rows1.length; i++) {\r\n            if (rows1[i][0]!=null){\r\n              temp = rows1[i][0].split(' ')\r\n              name1.push(temp[0])\r\n              name2.push(temp[1])\r\n              name3.push(temp[2])        \r\n            }\r\n            else \r\n              i = rows1.length\r\n\r\n          }\r\n\r\n            for (let i = 0;i<name1.length; i++) {\r\n              \r\n              insFlag1 = false\r\n              insFlag2 = false\r\n              insFlag3 = false\r\n              for (let j = 0;j<dolj.length;j++){\r\n                if (rows1[i+1][1]==dolj[j]){\r\n                  dolj_id = j\r\n                  insFlag1 = true\r\n                }\r\n              }\r\n              for (let j = 0;j<deg.length;j++){\r\n                if (rows1[i+1][2]==deg[j]){\r\n                  deg_id = j\r\n                  insFlag2 = true\r\n                }\r\n              }\r\n              for (let j = 0;j<status.length;j++){\r\n                if (rows1[i+1][3]==status[j]){\r\n                  status_id = j\r\n                  insFlag3 = true\r\n                }\r\n              }\r\n\r\n              if (insFlag1&&insFlag2&&insFlag3){\r\n                if (startStr == 0) {\r\n                  mainStr = mainStr + \"('\" + name1[i] +\"','\" + name2[i] +\"','\" + name3[i] + \"','\" + fac_global + \"','\" + kaf_global +\"','\" + dolj[dolj_id] +\"','\" + deg[deg_id] +\"','\" + status[status_id] + \"')\"\r\n                  startStr = 1\r\n                }\r\n                else {\r\n                  mainStr = mainStr + \",('\" + name1[i] +\"','\" + name2[i] +\"','\" + name3[i] + \"','\" + fac_global + \"','\" + kaf_global +\"','\" + dolj[dolj_id] +\"','\" + deg[deg_id] +\"','\" + status[status_id] + \"')\"\r\n                }\r\n              }\r\n\r\n              \r\n            if (i==name1.length-1){\r\n              setTimeout(resolveF, 1000);\r\n            }\r\n            }   \r\n          })\r\n          pf.then(() => {\r\n            UserService.insertTempSostav(mainStr)\r\n            for_dis(name1).then(result => {\r\n            console.log(result)\r\n            })\r\n\r\n          })\r\n\r\n          })\r\n\r\n        }\r\n\r\n        if (flagFac==true) {\r\n\r\n          readXlsxFile(xlsxfile, {sheet: \"факультет\"}).then((rows3) => {\r\n\r\n            UserService.clearTempFac()\r\n\r\n            let facStr = \"\"\r\n\r\n          const pfl1 = new Promise(function(resolvefl1){\r\n            k = 0\r\n            while (k<rows3.length){\r\n\r\n              if (k==rows3.length-1) {\r\n                facStr = facStr + \"('\" + rows3[k][0] + \"',\" + \"'\" + rows3[k][1] + \"')\"\r\n                resolvefl1()\r\n              }\r\n              else{\r\n                facStr = facStr + \"('\" + rows3[k][0] + \"',\" + \"'\" + rows3[k][1] + \"'),\"\r\n              }\r\n\r\n              k+=1\r\n            }\r\n          })\r\n      \r\n          pfl1.then(() => {\r\n            UserService.insertTempFac(facStr)\r\n          })\r\n\r\n\r\n      })\r\n      }\r\n\r\n\r\n      if (flagRaspr == true) {\r\n  readXlsxFile(xlsxfile, { sheet: \"Распределение\" }).then((rows2) => {\r\n    rows2 = rows2.slice(8);\r\n\r\n    const insertQueries = [];\r\n\r\n    for (const row of rows2) {\r\n      // Проверка на полностью пустую строку\r\n      if (row.every(cell => cell === null || cell === undefined || cell === '')) {\r\n        break;\r\n      }\r\n\r\n      const fio = row[0] ? row[0].split('\\n')[0] : null;\r\n      //const position = row[1] ? row[1].split('\\n').join(' ') : null;\r\n      const sem1 = row[2] || 0;\r\n      const sem2 = row[3] || 0;\r\n      const lec = row[4] || 0;\r\n      const sem = row[5] || 0;\r\n      const lab = row[6] || 0;\r\n      const practice = row[7] || 0;\r\n      const VKR = row[8] || 0;\r\n      const GEK = row[9] || 0;\r\n      insertQueries.push(`('${fac_global}', '${kaf_global}', '${fio}', ${sem1}, ${sem2}, ${lec}, ${sem}, ${lab}, ${practice}, ${VKR}, ${GEK})`);\r\n    }\r\n    insertQueries.forEach(query => {\r\n      console.log(query);\r\n      userService.insertTempRaspr(query);\r\n    });\r\n  });\r\n}\r\n\r\n\r\n      if (flagVO==true) {\r\n          UserService.clearTempItogVO()\r\n          readXlsxFile(xlsxfile, {sheet: \"ИТОГ ВО\"}).then((rowsVO) => {\r\n            let itogVO_str = \"('\" + fac_global + \"','\" + kaf_global + \"',\"\r\n            let VOyears = rowsVO[2][0].split(\" \")\r\n            itogVO_str = itogVO_str + \"'\" + VOyears[3] + \"','\" \r\n            + rowsVO[10][11].toFixed(2) + \"','\" + rowsVO[10][12].toFixed(2) + \"','\" + rowsVO[10][14] + \"','\" + rowsVO[10][15].toFixed(2) + \"','\" + rowsVO[10][17].toFixed(2) + \"','\"\r\n            + rowsVO[10][18].toFixed(2) + \"','\" + rowsVO[10][19] + \"','\" + rowsVO[10][20] + \"','\" + rowsVO[10][21] + \"','\" + rowsVO[10][22] + \"','\"\r\n            + rowsVO[10][23] + \"','\" + rowsVO[10][24] + \"','\" + rowsVO[10][26] + \"','\" + rowsVO[10][27] + \"','\" + rowsVO[10][28] + \"','\"\r\n            + rowsVO[10][29] + \"','\" + rowsVO[10][30] + \"','\" + rowsVO[10][31] + \"','\" + rowsVO[10][32] + \"','\" + rowsVO[10][33] + \"')\"\r\n            UserService.insertTempItogVO(itogVO_str)\r\n      })\r\n      }\r\n\r\n      if (flagOfoVO == true) {\r\n  readXlsxFile(xlsxfile, { sheet: \"ОФО ВО\" }).then((rows) => {\r\n    console.log(rows)\r\n    rows=rows.slice(7)\r\n    const insertQueries = [];\r\n\r\n    for (const row of rows) {\r\n      if (row[0] && row[0].toString().includes(\"ВСЕГО ЧАСОВ\")) {\r\n        break;\r\n      }\r\n\r\n      const dis_name = row[1] || null;\r\n      const code_napr = row[2] || null;\r\n      const kurs = Math.round(row[4]) || 0;\r\n      const kont_budg = Math.round(row[5]) || 0;\r\n      const kont_dog = Math.round(row[6]) || 0;\r\n      const number_of_streams = Math.round(row[7]) || 0;\r\n      const number_of_groups = Math.round(row[8]) || 0;\r\n      const number_of_subgroups = Math.round(row[9]) || 0;\r\n      const lek_budj = Math.round(row[10]) || 0;\r\n      const lek_dogovor = Math.round(row[11]) || 0;\r\n      const p_budg = Math.round(row[12]) || 0;\r\n      const p_dogovor = Math.round(row[13]) || 0;\r\n      const lab_budj = Math.round(row[14]) || 0;\r\n      const lab_dogovor = Math.round(row[15]) || 0;\r\n      const cons_ex = Math.round(row[16]) || 0;\r\n      const zachet_h = Math.round(row[17]) || 0;\r\n      const ex_speak = Math.round(row[18]) || 0;\r\n      const ex_wr = Math.round(row[19]) || 0;\r\n      const practice = Math.round(row[20]) || 0;\r\n\r\n      if (code_napr === \"0.0.0\" || !code_napr || !dis_name || \r\n          (kurs === 0 && kont_budg === 0 && kont_dog === 0 && number_of_streams === 0 &&\r\n          number_of_groups === 0 && number_of_subgroups === 0 && lek_budj === 0 &&\r\n          lek_dogovor === 0 && p_budg === 0 && p_dogovor === 0 && lab_budj === 0 &&\r\n          lab_dogovor === 0 && cons_ex === 0 && zachet_h === 0 && ex_speak === 0 &&\r\n          ex_wr === 0 && practice === 0)) {\r\n        continue;\r\n      }\r\n\r\n      insertQueries.push(`('${fac_global}', '${kaf_global}', '${dis_name}', '${code_napr}', ${kurs}, ${kont_budg}, ${kont_dog}, ${number_of_streams}, ${number_of_groups}, ${number_of_subgroups}, ${lek_budj}, ${lek_dogovor}, ${p_budg}, ${p_dogovor}, ${lab_budj}, ${lab_dogovor}, ${cons_ex}, ${zachet_h}, ${ex_speak}, ${ex_wr}, ${practice})`);\r\n      }\r\n\r\n    insertQueries.forEach(query => {\r\n      userService.insertTempOfoVO(query);\r\n      console.log(query);\r\n    });\r\n\r\n  });\r\n}\r\n\r\nif (flagKursVKR == true) {\r\n  readXlsxFile(xlsxfile, { sheet: \"Курсовые\" }).then((rows) => {\r\n\r\n    const insertQueries = [];\r\n\r\n    let currentYears = '';\r\n    if (rows[0][0] && typeof rows[0][0] === 'string') {\r\n      const match = rows[0][0].match(/\\d{4}\\/\\d{4}/);\r\n      if (match) {\r\n        currentYears = match[0];\r\n      }\r\n    }\r\n    let currentType = '';\r\n    let currentCourse = '';\r\n    let currentForm = '';\r\n    let currentTeachFio = [];\r\n    let currentNapr = '';\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n      const row = rows[i];\r\n\r\n      // Identify rows with the structure for currentType, currentCourse, currentForm\r\n      if (row[0] && typeof row[0] === 'string') {\r\n        const words = row[0].split(' ');\r\n        if (words.length === 4 && words[2] === 'курс') {\r\n          currentType = words[0];\r\n          currentCourse = words[1];\r\n          currentForm = words[3];\r\n          currentTeachFio = rows[i + 1];\r\n        }\r\n      }\r\n      const isEmptyRow = row.every(cell => !cell);\r\n      if (isEmptyRow) {\r\n        currentNapr = '';\r\n      } else if (i >= 4) { // Start processing actual data rows from the 5th row (index 4)\r\n        const napr = row[0];\r\n        if (napr && napr.match(/^\\d{2}\\.\\d{2}\\.\\d{2}$/)) {\r\n          currentNapr = napr;\r\n        }\r\n        if (currentNapr) {\r\n          for (let j = 1; j < row.length; j++) {\r\n            const stFio = row[j];\r\n            if (stFio && typeof stFio === 'string') {\r\n              const insertQuery = `\r\n                (\r\n                  '${fac_global}',\r\n                  '${kaf_global}',\r\n                  '${currentYears}',\r\n                  '${currentType}',\r\n                  ${currentCourse},\r\n                  '${currentForm}',\r\n                  '${currentTeachFio[j]}',\r\n                  '${currentNapr}',\r\n                  '${stFio}'\r\n                )\r\n              `;\r\n              insertQueries.push(insertQuery);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    insertQueries.forEach(query => {\r\n      UserService.insertTempKursVKR(query)\r\n      console.log(query);\r\n    });\r\n  });\r\n}\r\n\r\nif (flagTitul == true) {\r\n  readXlsxFile(xlsxfile, { sheet: \"Титул\" }).then((rows) => {\r\n    const fac = \"Факультет \" + rows[26][1]; // B27\r\n    const dep = \"Кафедра \" + rows[25][1]; // B26\r\n    let napr = rows[17][1]; // B18\r\n    let profile = rows[18][1]; // B19\r\n    let kval = rows[28][0]; // A29\r\n    let srok = rows[31][0]; // A32\r\n\r\n    napr = napr.replace('Направление подготовки ', '');\r\n    kval = kval.replace('Квалификация: ', '');\r\n    srok = srok.match(/\\d+/)[0]; // Извлечение только цифр из строки\r\n\r\n    const proffesions = [];\r\n    for (let i = 35; i <= 40; i++) {\r\n      proffesions.push(rows[i][1]); // B36-B41\r\n    }\r\n    const values = proffesions.map(profession => {\r\n    return `('${fac}', '${dep}', '${napr}', '${profile}', '${kval}', ${srok}, '${profession}')`;\r\n  }).join(', ');\r\n\r\n    userService.insertTempProffesions(values)\r\n    console.log(values)\r\n  });\r\n\r\n}\r\n\r\n      if (flagPractice==true) {\r\n          readXlsxFile(xlsxfile, {sheet: \"Практики\"}).then((rowsP) => {\r\n            this.ParsePractice(rowsP)\r\n      })\r\n      }\r\n\r\n      if (flagShed==true) {\r\n          readXlsxFile(xlsxfile, {sheet: \"Для расписания\"}).then((rowsShed) => {\r\n            //UserService.clearForShedLec()\r\n            //UserService.clearForShedPrac()\r\n            this.ParseShedLec(rowsShed, fac_global)\r\n            this.ParseShedPrac(rowsShed, fac_global)\r\n      })\r\n      }\r\n\r\n\r\n      if (flagDep==true) {\r\n          readXlsxFile(xlsxfile, {sheet: \"Кафедры\"}).then((rowsl1) => {\r\n\r\n            UserService.clearTempDep()\r\n\r\n            let depStr = \"\"\r\n\r\n            const pd = new Promise(function(resolveD){\r\n            k = 0\r\n            while (k<rowsl1.length){\r\n\r\n              if (k==rowsl1.length-1) {\r\n                depStr = depStr + \"('Кафедра \" + rowsl1[k][2] + \"',\" + \"null)\"\r\n                resolveD()\r\n              }\r\n              else{\r\n                depStr = depStr + \"('Кафедра \" + rowsl1[k][2] + \"',null),\"\r\n              }\r\n\r\n              k+=1\r\n            }\r\n            })\r\n\r\n            pd.then(() => {\r\n              UserService.insertTempDep(depStr)\r\n            })\r\n      })\r\n      }\r\n    })\r\n\r\n    setTimeout(this.updateButtonColor4, 2000);\r\n  },\r\n  navExcManage() {\r\n    this.$router.push(`/ManageExcel`); // Navigate to the AddStudent route\r\n},\r\n  navExcManage2() {\r\n    this.$router.push(`/ManageExcel2`); // Navigate to the AddStudent route\r\n},\r\n  navExcManage3() {\r\n    this.$router.push(`/ManageExcel3`); // Navigate to the AddStudent route\r\n},\r\n  navExcManage4() {\r\n    this.$router.push(`/ManageExcel4`); // Navigate to the AddStudent route\r\n},\r\n  navExcManage5() {\r\n    this.$router.push(`/ManageExcel5`); // Navigate to the AddStudent route\r\n},\r\n  navExcManage6() {\r\n    this.$router.push(`/ManageExcel6`); // Navigate to the AddStudent route\r\n},\r\n  navExcManage7() {\r\n    this.$router.push(`/ManageExcel7`); // Navigate to the AddStudent route\r\n},\r\n  navExcManage8() {\r\n    this.$router.push(`/ManageExcel8`); // Navigate to the AddStudent route\r\n},\r\n  navExcManage9() {\r\n    this.$router.push(`/ManageExcel9`); // Navigate to the AddStudent route\r\n},\r\n  navExcManage10() {\r\n    this.$router.push(`/ManageExcel10`); // Navigate to the AddStudent route\r\n},\r\n  navExcManage11() {\r\n    this.$router.push(`/ManageExcel11`); // Navigate to the AddStudent route\r\n},\r\n  navExcManage12() {\r\n    this.$router.push(`/ManageExcel12`); // Navigate to the AddStudent route\r\n},\r\n  navExcManage13() {\r\n    this.$router.push(`/ManageExcel13`); // Navigate to the AddStudent route\r\n},\r\nnavExcManage14() {\r\n    this.$router.push(`/ManageExcel14`); // Navigate to the AddStudent route\r\n},\r\nnavExcManage15() {\r\n    this.$router.push(`/ManageExcel15`); // Navigate to the AddStudent route\r\n},\r\n\r\n\r\nasync updateButtonColor1() {\r\n  let response;\r\n  try{\r\n    response = await UserService.getTempTeachGruzCount()\r\n      if (response.data.count==0) {\r\n        this.buttonStyle1.backgroundColor = 'red';\r\n      }\r\n      else {\r\n        this.buttonStyle1.backgroundColor = 'blue';\r\n      }\r\n  } \r\n  catch (error) {\r\n    console.error('Error loading data:', error);\r\n  }\r\n  finally {\r\n    response = null;\r\n  }\r\n},\r\n\r\nasync updateButtonColor2() {\r\n  let response;\r\n  try{\r\n    response = await UserService.getTempSostavCount()\r\n      if (response.data.count==0) {\r\n        this.buttonStyle2.backgroundColor = 'red';\r\n      }\r\n      else {\r\n        this.buttonStyle2.backgroundColor = 'blue';\r\n      }\r\n  } \r\n  catch (error) {\r\n    console.error('Error loading data:', error);\r\n  }\r\n  finally {\r\n    response = null;\r\n  }\r\n},\r\n\r\nasync updateButtonColor3() {\r\n  let response;\r\n  try{\r\n    response = await UserService.getTempFacCount()\r\n      if (response.data.count==0) {\r\n        this.buttonStyle3.backgroundColor = 'red';\r\n      }\r\n      else {\r\n        this.buttonStyle3.backgroundColor = 'blue';\r\n      }\r\n  } \r\n  catch (error) {\r\n    console.error('Error loading data:', error);\r\n  }\r\n  finally {\r\n    response = null;\r\n  }\r\n},\r\n\r\nasync updateButtonColor4() {\r\n  let response;\r\n  try{\r\n    response = await UserService.getTempDepCount()\r\n      if (response.data.count==0) {\r\n        console.log(\"AAAA\")\r\n        this.buttonStyle4.backgroundColor = 'red';\r\n      }\r\n      else {\r\n        this.buttonStyle4.backgroundColor = 'blue';\r\n      }\r\n  } \r\n  catch (error) {\r\n    console.error('Error loading data:', error);\r\n  }\r\n  finally {\r\n    response = null;\r\n  }\r\n},\r\n\r\nasync updateButtonColor5() {\r\n  let response;\r\n  try{\r\n    response = await UserService.getTempItogVOcount()\r\n      if (response.data.count==0) {\r\n        this.buttonStyle5.backgroundColor = 'red';\r\n      }\r\n      else {\r\n        this.buttonStyle5.backgroundColor = 'blue';\r\n      }\r\n  } \r\n  catch (error) {\r\n    console.error('Error loading data:', error);\r\n  }\r\n  finally {\r\n    response = null;\r\n  }\r\n},\r\n\r\nasync updateButtonColor6() {\r\n  let response;\r\n  try{\r\n    response = await UserService.getTempRasprСount()\r\n      if (response.data.count==0) {\r\n        this.buttonStyle6.backgroundColor = 'red';\r\n      }\r\n      else {\r\n        this.buttonStyle6.backgroundColor = 'blue';\r\n      }\r\n  } \r\n  catch (error) {\r\n    console.error('Error loading data:', error);\r\n  }\r\n  finally {\r\n    response = null;\r\n  }\r\n},\r\n\r\nasync updateButtonColor7() {\r\n  let response;\r\n  try{\r\n    response = await UserService.getTempOFOVOcount()\r\n      if (response.data.count==0) {\r\n        this.buttonStyle7.backgroundColor = 'red';\r\n      }\r\n      else {\r\n        this.buttonStyle7.backgroundColor = 'blue';\r\n      }\r\n  } \r\n  catch (error) {\r\n    console.error('Error loading data:', error);\r\n  }\r\n  finally {\r\n    response = null;\r\n  }\r\n},\r\n\r\nasync updateButtonColor82() {\r\n  let response;\r\n  try{\r\n    response = await UserService.getForShedLecOcount()\r\n      if (response.data.count==0) {\r\n        this.buttonStyle81.backgroundColor = 'red';\r\n      }\r\n      else {\r\n        this.buttonStyle81.backgroundColor = 'blue';\r\n      }\r\n  } \r\n  catch (error) {\r\n    console.error('Error loading data:', error);\r\n  }\r\n  finally {\r\n    response = null;\r\n  }\r\n},\r\n\r\nasync updateButtonColor81() {\r\n  let response;\r\n  try{\r\n    response = await UserService.getForShedPraccount()\r\n      if (response.data.count==0) {\r\n        this.buttonStyle82.backgroundColor = 'red';\r\n      }\r\n      else {\r\n        this.buttonStyle82.backgroundColor = 'blue';\r\n      }\r\n  } \r\n  catch (error) {\r\n    console.error('Error loading data:', error);\r\n  }\r\n  finally {\r\n    response = null;\r\n  }\r\n},\r\n\r\nasync updateButtonColor9() {\r\n  let response;\r\n  try{\r\n    response = await UserService.getTempKurscount()\r\n      if (response.data.count==0) {\r\n        this.buttonStyle9.backgroundColor = 'red';\r\n      }\r\n      else {\r\n        this.buttonStyle9.backgroundColor = 'blue';\r\n      }\r\n  } \r\n  catch (error) {\r\n    console.error('Error loading data:', error);\r\n  }\r\n  finally {\r\n    response = null;\r\n  }\r\n},\r\n\r\nasync updateButtonColor10() {\r\n  let response;\r\n  try{\r\n    response = await UserService.getTempPlanSvodcount()\r\n      if (response.data.count==0) {\r\n        this.buttonStyle10.backgroundColor = 'red';\r\n      }\r\n      else {\r\n        this.buttonStyle10.backgroundColor = 'blue';\r\n      }\r\n  } \r\n  catch (error) {\r\n    console.error('Error loading data:', error);\r\n  }\r\n  finally {\r\n    response = null;\r\n  }\r\n},\r\n\r\nasync updateButtonColor11() {\r\n  let response;\r\n  try{\r\n    response = await UserService.getTempKompetcount()\r\n      if (response.data.count==0) {\r\n        this.buttonStyle11.backgroundColor = 'red';\r\n      }\r\n      else {\r\n        this.buttonStyle11.backgroundColor = 'blue';\r\n      }\r\n  } \r\n  catch (error) {\r\n    console.error('Error loading data:', error);\r\n  }\r\n  finally {\r\n    response = null;\r\n  }\r\n},\r\n\r\nasync updateButtonColor12() {\r\n  let response;\r\n  try{\r\n    response = await UserService.getTempGruzKurscount()\r\n      if (response.data.count==0) {\r\n        this.buttonStyle12.backgroundColor = 'red';\r\n      }\r\n      else {\r\n        this.buttonStyle12.backgroundColor = 'blue';\r\n      }\r\n  } \r\n  catch (error) {\r\n    console.error('Error loading data:', error);\r\n  }\r\n  finally {\r\n    response = null;\r\n  }\r\n},\r\n\r\nasync updateButtonColor13() {\r\n  let response;\r\n  try{\r\n    response = await UserService.getTempKursDiagcount()\r\n      if (response.data.count==0) {\r\n        this.buttonStyle13.backgroundColor = 'red';\r\n      }\r\n      else {\r\n        this.buttonStyle13.backgroundColor = 'blue';\r\n      }\r\n  } \r\n  catch (error) {\r\n    console.error('Error loading data:', error);\r\n  }\r\n  finally {\r\n    response = null;\r\n  }\r\n},\r\n\r\nasync updateButtonColor14() {\r\n  let response;\r\n  try{\r\n    response = await UserService.getPracticecount()\r\n      if (response.data.count==0) {\r\n        this.buttonStyle14.backgroundColor = 'red';\r\n      }\r\n      else {\r\n        this.buttonStyle14.backgroundColor = 'blue';\r\n      }\r\n  } \r\n  catch (error) {\r\n    console.error('Error loading data:', error);\r\n  }\r\n  finally {\r\n    response = null;\r\n  }\r\n},\r\n\r\nasync ParsePractice(rowsP) {\r\n  let Pyears = rowsP[2][0].split(\" \")\r\n  let detRowP, napr\r\n\r\n  let pstr = \"\"\r\n  let falgParseP = false\r\n  let k = 5\r\n  let prof\r\n  while (k<rowsP.length){\r\n\r\n    if (rowsP[k][0] != null) {\r\n\r\n      detRowP =  rowsP[k][0].split(\" \")\r\n\r\n      await new Promise(resolve => {\r\n\r\n        if (detRowP[0].includes(\"Направление\")) {\r\n          falgParseP = true\r\n\r\n          if (detRowP[3].includes(\".\")) {\r\n            napr = detRowP[3]\r\n          }\r\n          else {\r\n            napr = detRowP[1]\r\n          }\r\n\r\n          let parts = rowsP[k+1][0].split(':')\r\n          prof = parts[1].replace(/\"/g, '').trim()\r\n\r\n          k = k+4\r\n        }\r\n        if (detRowP[0].includes(\"ИТОГО\")) {\r\n          falgParseP = false\r\n        }\r\n\r\n        if (falgParseP==true) {\r\n          let parsePDog = (rowsP[k][7] !== null) ? rowsP[k][7] : 0;\r\n          pstr = pstr + \"('\" + fac_global + \"',\" + \"'\" + kaf_global + \"',\" + \"'\" + Pyears[0] + \"',\" + \"'\" + napr + \"',\" + \"'\" + prof + \"',\"\r\n                      + \"'\" + rowsP[k][0] + \"',\" + \"'\" + rowsP[k][1] + \"',\" + \"'\" + rowsP[k][2] + \"',\" + \"'\" + rowsP[k][3] + \"',\" + \"'\" + rowsP[k][4] + \"',\"\r\n                      + \"'\" + rowsP[k][5] + \"',\" + \"'\" + rowsP[k][6] + \"',\" + \"'\" + parsePDog + \"',\" + \"'\" + rowsP[k][8] + \"',\" + \"'\" + rowsP[k][9] + \"',\"\r\n                      + \"'\" + rowsP[k][10] + \"',\" + \"'\" + rowsP[k][11] + \"'),\" \r\n        }\r\n\r\n        resolve()\r\n      })\r\n               \r\n    }\r\n\r\n    k++ \r\n\r\n  }\r\n\r\n  //console.log(pstr.slice(0, -1))\r\n  UserService.insertTempPractice(pstr.slice(0, -1))\r\n},\r\n\r\nasync ParseShedLec(rowsShed, fac_global) {\r\n\r\n  let shedLecStr = \"\"\r\n\r\n  let k = 2\r\n  while (k<rowsShed.length-1){\r\n\r\n    if (rowsShed[k][0] != null) {\r\n\r\n      await new Promise(resolveShed => {\r\n        if (rowsShed[k][0]==rowsShed[k+1][0]) {\r\n          k++\r\n        }\r\n        else{\r\n          if(rowsShed[k][7]!=null) {\r\n            shedLecStr = shedLecStr + \"('\" + fac_global + \"',\" + \"'\" + kaf_global + \"',\" + \"'\" + rowsShed[k][0] + \"',\" + \"'\" + rowsShed[k][1] + \"',\" + \"'\" + rowsShed[k][2] + \"',\"\r\n                                   + \"'\" + rowsShed[k][3] + \"',\" + \"'\" + rowsShed[k][4] + \"',\" + \"'\" + rowsShed[k][5] + \"',\" + \"'\" + rowsShed[k][6] + \"',\" + \"'\" + rowsShed[k][7] + \"'),\"\r\n          }\r\n        }\r\n          resolveShed()\r\n      })\r\n               \r\n    }\r\n\r\n    k++ \r\n\r\n  }\r\n  UserService.insertForShedLec(shedLecStr.slice(0, -1))\r\n},\r\n\r\nasync ParseShedPrac(rowsShed, fac_global) {\r\n\r\nlet shedPracStr = \"\"\r\n\r\nlet k = 2\r\nwhile (k<rowsShed.length-1){\r\n\r\n  if (rowsShed[k][0] != null) {\r\n\r\n    //Рассинхрон по k \r\n    \r\n    await new Promise(resolveShed => {\r\n      //console.log(k)\r\n      if (rowsShed[k][13]==rowsShed[k+1][13]) {\r\n        k++\r\n      }\r\n      else{\r\n        if(rowsShed[k][12]!=null) {\r\n          shedPracStr = shedPracStr + \"('\" + fac_global + \"',\" + \"'\" + kaf_global + \"',\" + \"'\" + rowsShed[k][0] + \"',\" + \"'\" + rowsShed[k][1] + \"',\" + \"'\" + rowsShed[k][2] + \"',\"\r\n                                 + \"'\" + rowsShed[k][8] + \"',\" + \"'\" + rowsShed[k][12] + \"',\" + \"'\" + rowsShed[k][13] + \"'),\"\r\n        }\r\n      }\r\n        resolveShed()\r\n    })\r\n             \r\n  }\r\n\r\n  k++ \r\n\r\n}\r\n  //console.log(shedPracStr.slice(0, -1))\r\n  UserService.insertForShedPrac(shedPracStr.slice(0, -1))\r\n},\r\n\r\n\r\n\r\n}\r\n}\r\n</script>","export default {\r\n\tcreateDocument(content) {\r\n\t\t// if (!content) {\r\n\t\t// \tthrow new Error('No *.xml content')\r\n\t\t// }\r\n\t\t// A weird bug: it won't parse XML unless it's trimmed.\r\n\t\t// https://github.com/catamphetamine/read-excel-file/issues/21\r\n\t\treturn new DOMParser().parseFromString(content.trim(), 'text/xml')\r\n\t}\r\n}","// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new u32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 0; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >>> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    var n = new (v.BYTES_PER_ELEMENT == 2 ? u16 : v.BYTES_PER_ELEMENT == 4 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n    // source length\n    var sl = dat.length;\n    if (!sl || (st && st.f && !st.l))\n        return buf || new u8(0);\n    // have to estimate size\n    var noBuf = !buf || st;\n    // no state\n    var noSt = !st || st.i;\n    if (!st)\n        st = {};\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (noBuf)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n    d[o + 2] |= v >>> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return [et, 0];\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return [v, 1];\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return [new u8(tr), mbt];\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return [cl.subarray(0, cli), s];\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >>> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];\n    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];\n    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];\n    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        lcfreq[lclt[i] & 31]++;\n    for (var i = 0; i < lcdt.length; ++i)\n        lcfreq[lcdt[i] & 31]++;\n    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\n    if (flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >>> 5) & 127), p += clct[i] >>> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        if (syms[i] > 255) {\n            var len = (syms[i] >>> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (syms[i] >>> 23) & 31), p += fleb[len];\n            var dst = syms[i] & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (syms[i] >>> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\n    var s = dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var pos = 0;\n    if (!lvl || s < 8) {\n        for (var i = 0; i <= s; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[pos >> 3] = lst;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n    }\n    else {\n        var opt = deo[lvl - 1];\n        var n = opt >>> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = new u16(32768), head = new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new u32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\n        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;\n        for (; i < s; ++i) {\n            // hash value\n            // deopt when i > s - 3 - at end, deopt acceptable\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && rem > 423) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = (imod - pimod) & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = (i - dif + j + 32768) & 32767;\n                                    var pti = prev[ti];\n                                    var cd = (ti - pti + 32768) & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += (imod - pimod + 32768) & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one Uint32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        // this is the easiest way to avoid needing to maintain state\n        if (!lst && pos & 7)\n            pos = wfblk(w, pos + 1, et);\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Alder32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a >>> 8) << 16 | (b & 255) << 8 | (b >>> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, !st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return [fnStr, td];\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    var _a;\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\n        ch[id] = wcln(fns[m], fnStr, td_1);\n    }\n    var td = mrg({}, ch[id][1]);\n    return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gu8]; };\nvar bDflt = function () { return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zlv]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get u8\nvar gu8 = function (o) { return o && o.size && new u8(o.size); };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += d[10] | (d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return ((d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) | (d[l - 1] << 24)) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + ((o.filename && (o.filename.length + 1)) || 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (fl ? (32 - 2 * fl) : 1);\n};\n// zlib valid\nvar zlv = function (d) {\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if (d[1] & 32)\n        err(6, 'invalid zlib data: preset dictionaries not supported');\n};\nfunction AsyncCmpStrm(opts, cb) {\n    if (!cb && typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n// zlib footer: -4 to -0 is Adler32\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (!cb && typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, !f), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.d = final;\n        this.p(chunk, final || false);\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an inflation stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Inflate(cb) {\n        this.s = {};\n        this.p = new u8(0);\n        this.ondata = cb;\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        var l = this.p.length;\n        var n = new u8(l + c.length);\n        n.set(this.p), n.set(c, l), this.p = n;\n    };\n    Inflate.prototype.c = function (final) {\n        this.d = this.s.i = final || false;\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.o, this.s);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous inflation stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncInflate(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, 0, function () {\n            var strm = new Inflate();\n            onmessage = astrm(strm);\n        }, 7);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gu8(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, out) {\n    return inflt(data, out);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        this.c.p(c);\n        this.l += c.length;\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a GUNZIP stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Gunzip(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            var s = this.p.length > 3 ? gzs(this.p) : 4;\n            if (s >= this.p.length && !final)\n                return;\n            this.p = this.p.subarray(s), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 8)\n                err(6, 'invalid gzip data');\n            this.p = this.p.subarray(0, -8);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous GUNZIP stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncGunzip(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, 0, function () {\n            var strm = new Gunzip();\n            onmessage = astrm(strm);\n        }, 9);\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, out) {\n    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        this.c.p(c);\n        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates a Zlib decompression stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Unzlib(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 2 && !final)\n                return;\n            this.p = this.p.subarray(2), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous Zlib decompression stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncUnzlib(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, 0, function () {\n            var strm = new Unzlib();\n            onmessage = astrm(strm);\n        }, 11);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gu8(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, out) {\n    return inflt((zlv(data), data.subarray(2, -4)), out);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    /**\n     * Creates a decompression stream\n     * @param cb The callback to call whenever data is decompressed\n     */\n    function Decompress(cb) {\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                var _this_1 = this;\n                var cb = function () { _this_1.ondata.apply(_this_1, arguments); };\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(cb)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(cb)\n                        : new this.Z(cb);\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    /**\n   * Creates an asynchronous decompression stream\n   * @param cb The callback to call whenever data is decompressed\n   */\n    function AsyncDecompress(cb) {\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, out) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, out)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, out)\n            : unzlibSync(data, out);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return [r, slc(d, i - 1)];\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), ch = _a[0], np = _a[1];\n        if (final) {\n            if (np.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = np;\n        this.ondata(ch, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td)\n        return td.decode(dat);\n    else {\n        var _a = dutf8(dat), out = _a[0], ext = _a[1];\n        if (ext.length)\n            err(8);\n        return out;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this_1.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this_1 = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this_1.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this_1.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this_1.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this_1.ondata(err, dat, final);\n                    _this_1.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this_1 = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this_1.d & 1))\n                        return;\n                    _this_1.u.splice(-1, 1);\n                    _this_1.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this_1 = this;\n        this.i = new Inflate(function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this_1 = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this_1.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this_1.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this_1 = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this_1.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this_1.k[0] == chks_3 && _this_1.c)\n                                        _this_1.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    if (sc < 320000) {\n                        try {\n                            cbl(null, inflateSync(infl, new u8(su)));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n","import { unzipSync, strFromU8 } from 'fflate'\r\n\r\n/**\r\n * Reads XLSX file in a browser.\r\n * @param  {(File|Blob|ArrayBuffer)} input - A `File` or an `ArrayBuffer`.\r\n * @return {Promise} Resolves to an object holding XLSX file entries.\r\n */\r\nexport default function unpackXlsxFile(input) {\r\n\tif (input instanceof File) {\r\n\t\treturn input.arrayBuffer().then(unpackXlsxArrayBuffer)\r\n\t}\r\n\tif (input instanceof Blob) {\r\n\t\treturn input.arrayBuffer().then(unpackXlsxArrayBuffer)\r\n\t}\r\n\treturn unpackXlsxArrayBuffer(input)\r\n}\r\n\r\n/**\r\n * Reads XLSX file in a browser from an `ArrayBuffer`.\r\n * @param  {ArrayBuffer} input\r\n * @return {Promise} Resolves to an object holding XLSX file entries.\r\n */\r\nfunction unpackXlsxArrayBuffer(arrayBuffer) {\r\n\tconst archive = new Uint8Array(arrayBuffer)\r\n\tconst contents = unzipSync(archive)\r\n\treturn Promise.resolve(getContents(contents))\r\n\t// return new Promise((resolve, reject) => {\r\n\t// \tunzip(archive, (error, contents) => {\r\n\t// \t\tif (error) {\r\n\t// \t\t\treturn reject(error)\r\n\t// \t\t}\r\n\t// \t\treturn resolve(getContents(contents))\r\n\t// \t})\r\n\t// })\r\n}\r\n\r\nfunction getContents(contents) {\r\n\tconst unzippedFiles = []\r\n\tfor (const key of Object.keys(contents)) {\r\n\t\tunzippedFiles[key] = strFromU8(contents[key])\r\n\t}\r\n\treturn unzippedFiles\r\n}","export function findChild(node, tagName) {\r\n\tlet i = 0\r\n\twhile (i < node.childNodes.length) {\r\n\t\tconst childNode = node.childNodes[i]\r\n\t\t// `nodeType: 1` means \"Element\".\r\n\t\t// https://www.w3schools.com/xml/prop_element_nodetype.asp\r\n\t\tif (childNode.nodeType === 1 && getTagName(childNode) === tagName) {\r\n\t\t\treturn childNode\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n}\r\n\r\nexport function findChildren(node, tagName) {\r\n\tconst results = []\r\n\tlet i = 0\r\n\twhile (i < node.childNodes.length) {\r\n\t\tconst childNode = node.childNodes[i]\r\n\t\t// `nodeType: 1` means \"Element\".\r\n\t\t// https://www.w3schools.com/xml/prop_element_nodetype.asp\r\n\t\tif (childNode.nodeType === 1 && getTagName(childNode) === tagName) {\r\n\t\t\tresults.push(childNode)\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\treturn results\r\n}\r\n\r\nexport function forEach(node, tagName, func) {\r\n\t// if (typeof tagName === 'function') {\r\n\t// \tfunc = tagName\r\n\t// \ttagName = undefined\r\n\t// }\r\n\tlet i = 0\r\n\twhile (i < node.childNodes.length) {\r\n\t\tconst childNode = node.childNodes[i]\r\n\t\tif (tagName) {\r\n\t\t\t// `nodeType: 1` means \"Element\".\r\n\t\t\t// https://www.w3schools.com/xml/prop_element_nodetype.asp\r\n\t\t\tif (childNode.nodeType === 1 && getTagName(childNode) === tagName) {\r\n\t\t\t\tfunc(childNode, i)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfunc(childNode, i)\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n}\r\n\r\nexport function map(node, tagName, func) {\r\n\tconst results = []\r\n\tforEach(node, tagName, (node, i) => {\r\n\t\tresults.push(func(node, i))\r\n\t})\r\n\treturn results\r\n}\r\n\r\nconst NAMESPACE_REG_EXP = /.+\\:/\r\nexport function getTagName(element) {\r\n\t// For some weird reason, if an element is declared as,\r\n\t// for example, `<x:sheets/>`, then its `.tagName` will be\r\n\t// \"x:sheets\" instead of just \"sheets\".\r\n\t// https://gitlab.com/catamphetamine/read-excel-file/-/issues/25\r\n\t// Its not clear how to tell it to ignore any namespaces\r\n\t// when getting `.tagName`, so just replacing anything\r\n\t// before a colon, if any.\r\n\treturn element.tagName.replace(NAMESPACE_REG_EXP, '')\r\n}\r\n\r\n// This function is only used for occasional debug messages.\r\nexport function getOuterXml(node) {\r\n\t// `nodeType: 1` means \"Element\".\r\n\t// https://www.w3schools.com/xml/prop_element_nodetype.asp\r\n\tif (node.nodeType !== 1) {\r\n\t\treturn node.textContent\r\n\t}\r\n\r\n  let xml = '<' + getTagName(node)\r\n\r\n  let j = 0\r\n  while (j < node.attributes.length) {\r\n    xml += ' ' + node.attributes[j].name + '=' + '\"' + node.attributes[j].value + '\"'\r\n    j++\r\n  }\r\n\r\n  xml += '>'\r\n\r\n  let i = 0\r\n  while (i < node.childNodes.length) {\r\n  \txml += getOuterXml(node.childNodes[i])\r\n    i++\r\n  }\r\n\r\n  xml += '</' + getTagName(node) + '>'\r\n\r\n  return xml\r\n}","import { findChild, findChildren, forEach, map, getTagName } from './dom.js'\r\n\r\n// Returns an array of cells,\r\n// each element being an XML DOM element representing a cell.\r\nexport function getCells(document) {\r\n  const worksheet = document.documentElement\r\n  const sheetData = findChild(worksheet, 'sheetData')\r\n\r\n  const cells = []\r\n  forEach(sheetData, 'row', (row) => {\r\n    forEach(row, 'c', (cell) => {\r\n      cells.push(cell)\r\n    })\r\n  })\r\n  return cells\r\n}\r\n\r\nexport function getMergedCells(document) {\r\n  const worksheet = document.documentElement\r\n  const mergedCells = findChild(worksheet, 'mergeCells')\r\n  const mergedCellsInfo = []\r\n  if (mergedCells) {\r\n    forEach(mergedCells, 'mergeCell', (mergedCell) => {\r\n      mergedCellsInfo.push(mergedCell.getAttribute('ref'))\r\n    })\r\n  }\r\n  return mergedCellsInfo\r\n}\r\n\r\nexport function getCellValue(document, node) {\r\n  return findChild(node, 'v')\r\n}\r\n\r\nexport function getCellInlineStringValue(document, node) {\r\n  if (\r\n    node.firstChild &&\r\n    getTagName(node.firstChild) === 'is' &&\r\n    node.firstChild.firstChild &&\r\n    getTagName(node.firstChild.firstChild) === 't'\r\n  ) {\r\n    return node.firstChild.firstChild.textContent\r\n  }\r\n}\r\n\r\nexport function getDimensions(document) {\r\n  const worksheet = document.documentElement\r\n  const dimensions = findChild(worksheet, 'dimension')\r\n  if (dimensions) {\r\n    return dimensions.getAttribute('ref')\r\n  }\r\n}\r\n\r\nexport function getBaseStyles(document) {\r\n  const styleSheet = document.documentElement\r\n  const cellStyleXfs = findChild(styleSheet, 'cellStyleXfs')\r\n  if (cellStyleXfs) {\r\n    return findChildren(cellStyleXfs, 'xf')\r\n  }\r\n  return []\r\n}\r\n\r\nexport function getCellStyles(document) {\r\n  const styleSheet = document.documentElement\r\n  const cellXfs = findChild(styleSheet, 'cellXfs')\r\n  if (!cellXfs) {\r\n    return []\r\n  }\r\n  return findChildren(cellXfs, 'xf')\r\n}\r\n\r\nexport function getNumberFormats(document) {\r\n  const styleSheet = document.documentElement\r\n  let numberFormats = []\r\n  const numFmts = findChild(styleSheet, 'numFmts')\r\n  if (numFmts) {\r\n    return findChildren(numFmts, 'numFmt')\r\n  }\r\n  return []\r\n}\r\n\r\nexport function getSharedStrings(document) {\r\n\t// An `<si/>` element can contain a `<t/>` (simplest case) or a set of `<r/>` (\"rich formatting\") elements having `<t/>`.\r\n\t// https://docs.microsoft.com/en-us/dotnet/api/documentformat.openxml.spreadsheet.sharedstringitem?redirectedfrom=MSDN&view=openxml-2.8.1\r\n\t// http://www.datypic.com/sc/ooxml/e-ssml_si-1.html\r\n\r\n  const sst = document.documentElement\r\n  return map(sst, 'si', string => {\r\n    const t = findChild(string, 't')\r\n    if (t) {\r\n      return t.textContent\r\n    }\r\n    let value = ''\r\n    forEach(string, 'r', (r) => {\r\n      value += findChild(r, 't').textContent\r\n    })\r\n    return value\r\n  })\r\n}\r\n\r\nexport function getWorkbookProperties(document) {\r\n  const workbook = document.documentElement\r\n  return findChild(workbook, 'workbookPr')\r\n}\r\n\r\nexport function getRelationships(document) {\r\n  const relationships = document.documentElement\r\n  return findChildren(relationships, 'Relationship')\r\n}\r\n\r\nexport function getSheets(document) {\r\n  const workbook = document.documentElement\r\n  const sheets = findChild(workbook, 'sheets')\r\n  return findChildren(sheets, 'sheet')\r\n}","import {\r\n  getWorkbookProperties,\r\n  getSheets\r\n} from '../xml/xlsx.js'\r\n\r\n// I guess `xl/workbook.xml` file should always be present inside the *.xlsx archive.\r\nexport default function parseProperties(content, xml) {\r\n  const book = xml.createDocument(content)\r\n\r\n  const properties = {};\r\n\r\n  // Read `<workbookPr/>` element to detect whether dates are 1900-based or 1904-based.\r\n  // https://support.microsoft.com/en-gb/help/214330/differences-between-the-1900-and-the-1904-date-system-in-excel\r\n  // http://webapp.docx4java.org/OnlineDemo/ecma376/SpreadsheetML/workbookPr.html\r\n\r\n  const workbookProperties = getWorkbookProperties(book)\r\n\r\n  if (workbookProperties && workbookProperties.getAttribute('date1904') === '1') {\r\n    properties.epoch1904 = true\r\n  }\r\n\r\n  // Get sheets info (indexes, names, if they're available).\r\n  // Example:\r\n  // <sheets>\r\n  //   <sheet\r\n  //     xmlns:ns=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\"\r\n  //     name=\"Sheet1\"\r\n  //     sheetId=\"1\"\r\n  //     ns:id=\"rId3\"/>\r\n  // </sheets>\r\n  // http://www.datypic.com/sc/ooxml/e-ssml_sheet-1.html\r\n\r\n  properties.sheets = []\r\n\r\n  const addSheetInfo = (sheet) => {\r\n    if (sheet.getAttribute('name')) {\r\n      properties.sheets.push({\r\n        id: sheet.getAttribute('sheetId'),\r\n        name: sheet.getAttribute('name'),\r\n        relationId: sheet.getAttribute('r:id')\r\n      })\r\n    }\r\n  }\r\n\r\n  getSheets(book).forEach(addSheetInfo)\r\n\r\n  return properties;\r\n}","import {\r\n  getRelationships\r\n} from '../xml/xlsx.js'\r\n\r\n/**\r\n * Returns sheet file paths.\r\n * Seems that the correct place to look for the `sheetId` -> `filename` mapping\r\n * is `xl/_rels/workbook.xml.rels` file.\r\n * https://github.com/tidyverse/readxl/issues/104\r\n * @param  {string} content — `xl/_rels/workbook.xml.rels` file contents.\r\n * @param  {object} xml\r\n * @return {object}\r\n */\r\nexport default function parseFilePaths(content, xml) {\r\n  // Example:\r\n  // <Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\r\n  //   ...\r\n  //   <Relationship\r\n  //     Id=\"rId3\"\r\n  //     Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\"\r\n  //     Target=\"worksheets/sheet1.xml\"/>\r\n  // </Relationships>\r\n  const document = xml.createDocument(content)\r\n\r\n  const filePaths = {\r\n    sheets: {},\r\n    sharedStrings: undefined,\r\n    styles: undefined\r\n  }\r\n\r\n  const addFilePathInfo = (relationship) => {\r\n    const filePath = relationship.getAttribute('Target')\r\n    const fileType = relationship.getAttribute('Type')\r\n    switch (fileType) {\r\n      case 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles':\r\n        filePaths.styles = getFilePath(filePath)\r\n        break\r\n      case 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings':\r\n        filePaths.sharedStrings = getFilePath(filePath)\r\n        break\r\n      case 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet':\r\n        filePaths.sheets[relationship.getAttribute('Id')] = getFilePath(filePath)\r\n        break\r\n    }\r\n  }\r\n\r\n  getRelationships(document).forEach(addFilePathInfo)\r\n\r\n  // Seems like \"sharedStrings.xml\" is not required to exist.\r\n  // For example, when the spreadsheet doesn't contain any strings.\r\n  // https://github.com/catamphetamine/read-excel-file/issues/85\r\n  // if (!filePaths.sharedStrings) {\r\n  //   throw new Error('\"sharedStrings.xml\" file not found in the *.xlsx file')\r\n  // }\r\n\r\n  return filePaths\r\n}\r\n\r\nfunction getFilePath(path) {\r\n  // Normally, `path` is a relative path inside the ZIP archive,\r\n  // like \"worksheets/sheet1.xml\", or \"sharedStrings.xml\", or \"styles.xml\".\r\n  // There has been one weird case when file path was an absolute path,\r\n  // like \"/xl/worksheets/sheet1.xml\" (specifically for sheets):\r\n  // https://github.com/catamphetamine/read-excel-file/pull/95\r\n  // Other libraries (like `xlsx`) and software (like Google Docs)\r\n  // seem to support such absolute file paths, so this library does too.\r\n  if (path[0] === '/') {\r\n    return path.slice('/'.length)\r\n  }\r\n  // // Seems like a path could also be a URL.\r\n  // // http://officeopenxml.com/anatomyofOOXML-xlsx.php\r\n  // if (/^[a-z]+\\:\\/\\//.test(path)) {\r\n  //   return path\r\n  // }\r\n  return 'xl/' + path\r\n}","import {\r\n  getBaseStyles,\r\n  getCellStyles,\r\n  getNumberFormats\r\n} from '../xml/xlsx.js'\r\n\r\n// http://officeopenxml.com/SSstyles.php\r\n// Returns an array of cell styles.\r\n// A cell style index is its ID.\r\nexport default function parseStyles(content, xml) {\r\n  if (!content) {\r\n    return {}\r\n  }\r\n\r\n  // https://social.msdn.microsoft.com/Forums/sqlserver/en-US/708978af-b598-45c4-a598-d3518a5a09f0/howwhen-is-cellstylexfs-vs-cellxfs-applied-to-a-cell?forum=os_binaryfile\r\n  // https://www.office-forums.com/threads/cellxfs-cellstylexfs.2163519/\r\n  const doc = xml.createDocument(content)\r\n\r\n  const baseStyles = getBaseStyles(doc)\r\n    .map(parseCellStyle)\r\n\r\n  const numberFormats = getNumberFormats(doc)\r\n    .map(parseNumberFormatStyle)\r\n    .reduce((formats, format) => {\r\n      // Format ID is a numeric index.\r\n      // There're some standard \"built-in\" formats (in Excel) up to about `100`.\r\n      formats[format.id] = format\r\n      return formats\r\n    }, [])\r\n\r\n  const getCellStyle = (xf) => {\r\n    if (xf.hasAttribute('xfId')) {\r\n      return {\r\n        ...baseStyles[xf.xfId],\r\n        ...parseCellStyle(xf, numberFormats)\r\n      }\r\n    }\r\n    return parseCellStyle(xf, numberFormats)\r\n  }\r\n\r\n  return getCellStyles(doc).map(getCellStyle)\r\n}\r\n\r\nfunction parseNumberFormatStyle(numFmt) {\r\n  return {\r\n    id: numFmt.getAttribute('numFmtId'),\r\n    template: numFmt.getAttribute('formatCode')\r\n  }\r\n}\r\n\r\n// http://www.datypic.com/sc/ooxml/e-ssml_xf-2.html\r\nfunction parseCellStyle(xf, numFmts) {\r\n  const style = {}\r\n  if (xf.hasAttribute('numFmtId')) {\r\n    const numberFormatId = xf.getAttribute('numFmtId')\r\n    // Built-in number formats don't have a `<numFmt/>` element in `styles.xml`.\r\n    // https://hexdocs.pm/xlsxir/number_styles.html\r\n    if (numFmts[numberFormatId]) {\r\n      style.numberFormat = numFmts[numberFormatId]\r\n    } else {\r\n      style.numberFormat = { id: numberFormatId }\r\n    }\r\n  }\r\n  return style\r\n}","import {\r\n  getSharedStrings\r\n} from '../xml/xlsx.js'\r\n\r\nexport default function parseSharedStrings(content, xml) {\r\n  if (!content) {\r\n    return []\r\n  }\r\n  return getSharedStrings(xml.createDocument(content))\r\n}","// Parses an Excel Date (\"serial\") into a corresponding javascript Date in UTC+0 timezone.\r\n// (with time equal to 00:00)\r\n//\r\n// https://www.pcworld.com/article/3063622/software/mastering-excel-date-time-serial-numbers-networkdays-datevalue-and-more.html\r\n// \"If you need to calculate dates in your spreadsheets,\r\n//  Excel uses its own unique system, which it calls Serial Numbers\".\r\n//\r\nexport default function parseExcelDate(excelSerialDate, options) {\r\n  // https://support.microsoft.com/en-gb/help/214330/differences-between-the-1900-and-the-1904-date-system-in-excel\r\n  if (options && options.epoch1904) {\r\n    excelSerialDate += 1462\r\n  }\r\n\r\n  // \"Excel serial date\" is just\r\n  // the count of days since `01/01/1900`\r\n  // (seems that it may be even fractional).\r\n  //\r\n  // The count of days elapsed\r\n  // since `01/01/1900` (Excel epoch)\r\n  // till `01/01/1970` (Unix epoch).\r\n  // Accounts for leap years\r\n  // (19 of them, yielding 19 extra days).\r\n  const daysBeforeUnixEpoch = 70 * 365 + 19\r\n\r\n  // An hour, approximately, because a minute\r\n  // may be longer than 60 seconds, due to \"leap seconds\".\r\n  //\r\n  // Still, Javascript `Date` (and UNIX time in general) intentionally\r\n  // drops the concept of \"leap seconds\" in order to make things simpler.\r\n  // So it's fine.\r\n  // https://stackoverflow.com/questions/53019726/where-are-the-leap-seconds-in-javascript\r\n  //\r\n  // \"The JavaScript Date object specifically adheres to the concept of Unix Time\r\n  //  (albeit with higher precision). This is part of the POSIX specification,\r\n  //  and thus is sometimes called \"POSIX Time\". It does not count leap seconds,\r\n  //  but rather assumes every day had exactly 86,400 seconds. You can read about\r\n  //  this in section 20.3.1.1 of the current ECMAScript specification, which states:\r\n  //\r\n  //  \"Time is measured in ECMAScript in milliseconds since 01 January, 1970 UTC.\r\n  //   In time values leap seconds are ignored. It is assumed that there are exactly\r\n  //   86,400,000 milliseconds per day.\"\r\n  //\r\n  //  The fact is, that the unpredictable nature of leap seconds makes them very\r\n  //  difficult to work with in APIs. One can't generally pass timestamps around\r\n  //  that need leap seconds tables to be interpreted correctly, and expect that\r\n  //  one system will interpret them the same as another. For example, while your\r\n  //  example timestamp 1483228826 is 2017-01-01T00:00:00Z on your system,\r\n  //  it would be interpreted as 2017-01-01T00:00:26Z on POSIX based systems,\r\n  //  or systems without leap second tables. So they aren't portable.\r\n  //  Even on systems that have full updated tables, there's no telling what those\r\n  //  tables will contain in the future (beyond the 6-month IERS announcement period),\r\n  //  so I can't produce a future timestamp without risk that it may eventually change.\r\n  //\r\n  //  To be clear - to support leap seconds in a programming language, the implementation\r\n  //  must go out of its way to do so, and must make tradeoffs that are not always acceptable.\r\n  //  Though there are exceptions, the general position is to not support them - not because\r\n  //  of any subversion or active countermeasures, but because supporting them properly is much,\r\n  //  much harder.\"\r\n  //\r\n  // https://en.wikipedia.org/wiki/Unix_time#Leap_seconds\r\n  // https://en.wikipedia.org/wiki/Leap_year\r\n  // https://en.wikipedia.org/wiki/Leap_second\r\n  //\r\n  const hour = 60 * 60 * 1000\r\n\r\n  return new Date(Math.round((excelSerialDate - daysBeforeUnixEpoch) * 24 * hour))\r\n}","// XLSX does have \"d\" type for dates, but it's not commonly used.\r\n// Instead, it prefers using \"n\" type for storing dates as timestamps.\r\n//\r\n// Whether a numeric value is a number or a date timestamp, it sometimes could be\r\n// detected by looking at the value \"format\" and seeing if it's a date-specific one.\r\n// https://github.com/catamphetamine/read-excel-file/issues/3#issuecomment-395770777\r\n//\r\n// The list of generic numeric value \"formats\":\r\n// https://xlsxwriter.readthedocs.io/format.html#format-set-num-format\r\n//\r\nexport default function isDateTimestamp(styleId, styles, options) {\r\n  if (styleId) {\r\n    const style = styles[styleId]\r\n    if (!style) {\r\n      throw new Error(`Cell style not found: ${styleId}`)\r\n    }\r\n    if (!style.numberFormat) {\r\n      return false\r\n    }\r\n    if (\r\n      // Whether it's a \"number format\" that's conventionally used for storing date timestamps.\r\n      BUILT_IN_DATE_NUMBER_FORMAT_IDS.indexOf(Number(style.numberFormat.id)) >= 0 ||\r\n      // Whether it's a \"number format\" that uses a \"formatting template\"\r\n      // that the developer is certain is a date formatting template.\r\n      (options.dateFormat && style.numberFormat.template === options.dateFormat) ||\r\n      // Whether the \"smart formatting template\" feature is not disabled\r\n      // and it has detected that it's a date formatting template by looking at it.\r\n      (options.smartDateParser !== false && style.numberFormat.template && isDateTemplate(style.numberFormat.template))\r\n     ) {\r\n      return true\r\n    }\r\n  }\r\n}\r\n\r\n// https://hexdocs.pm/xlsxir/number_styles.html\r\nconst BUILT_IN_DATE_NUMBER_FORMAT_IDS = [14,15,16,17,18,19,20,21,22,27,30,36,45,46,47,50,57]\r\n\r\n// On some date formats, there's an \"[$-414]\" prefix.\r\n// I don't have any idea what that is.\r\n//\r\n// https://stackoverflow.com/questions/4730152/what-indicates-an-office-open-xml-cell-contains-a-date-time-value\r\n//\r\n// Examples:\r\n//\r\n// * 27 (built-in format) \"[$-404]e/m/d\"\r\n// * 164 (custom format) \"[$-414]mmmm\\ yyyy;@\"\r\n//\r\nconst DATE_FORMAT_WEIRD_PREFIX = /^\\[\\$-414\\]/\r\n\r\n// On some date formats, there's an \";@\" postfix.\r\n// I don't have any idea what that is.\r\n// Examples:\r\n//\r\n// * 164 (custom format) \"m/d/yyyy;@\"\r\n// * 164 (custom format) \"[$-414]mmmm\\ yyyy;@\"\r\n//\r\nconst DATE_FORMAT_WEIRD_POSTFIX = /;@$/\r\n\r\nfunction isDateTemplate(template) {\r\n  // Date format tokens could be in upper case or in lower case.\r\n  // There seems to be no single standard.\r\n  // So lowercase the template first.\r\n  template = template.toLowerCase()\r\n\r\n  // On some date formats, there's an \"[$-414]\" prefix.\r\n  // I don't have any idea what that is. Trim it.\r\n  template = template.replace(DATE_FORMAT_WEIRD_PREFIX, '')\r\n\r\n  // On some date formats, there's an \";@\" postfix.\r\n  // I don't have any idea what that is. Trim it.\r\n  template = template.replace(DATE_FORMAT_WEIRD_POSTFIX, '')\r\n\r\n  const tokens = template.split(/\\W+/)\r\n  for (const token of tokens) {\r\n    if (DATE_TEMPLATE_TOKENS.indexOf(token) < 0) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\n// These tokens could be in upper case or in lower case.\r\n// There seems to be no single standard, so using lower case.\r\nconst DATE_TEMPLATE_TOKENS = [\r\n  // Seconds (min two digits). Example: \"05\".\r\n  'ss',\r\n  // Minutes (min two digits). Example: \"05\". Could also be \"Months\". Weird.\r\n  'mm',\r\n  // Hours. Example: \"1\".\r\n  'h',\r\n  // Hours (min two digits). Example: \"01\".\r\n  'hh',\r\n  // \"AM\" part of \"AM/PM\". Lowercased just in case.\r\n  'am',\r\n  // \"PM\" part of \"AM/PM\". Lowercased just in case.\r\n  'pm',\r\n  // Day. Example: \"1\"\r\n  'd',\r\n  // Day (min two digits). Example: \"01\"\r\n  'dd',\r\n  // Month (numeric). Example: \"1\".\r\n  'm',\r\n  // Month (numeric, min two digits). Example: \"01\". Could also be \"Minutes\". Weird.\r\n  'mm',\r\n  // Month (shortened month name). Example: \"Jan\".\r\n  'mmm',\r\n  // Month (full month name). Example: \"January\".\r\n  'mmmm',\r\n  // Two-digit year. Example: \"20\".\r\n  'yy',\r\n  // Full year. Example: \"2020\".\r\n  'yyyy',\r\n\r\n  // I don't have any idea what \"e\" means.\r\n  // It's used in \"built-in\" XLSX formats:\r\n  // * 27 '[$-404]e/m/d';\r\n  // * 36 '[$-404]e/m/d';\r\n  // * 50 '[$-404]e/m/d';\r\n  // * 57 '[$-404]e/m/d';\r\n  'e'\r\n];","import parseDate from './parseDate.js'\r\nimport isDateTimestamp from './isDateTimestamp.js'\r\n\r\n// Parses a string `value` of a cell.\r\nexport default function parseCellValue(value, type, {\r\n  getInlineStringValue,\r\n  getInlineStringXml,\r\n  getStyleId,\r\n  styles,\r\n  values,\r\n  properties,\r\n  options\r\n}) {\r\n  if (!type) {\r\n    // Default cell type is \"n\" (numeric).\r\n    // http://www.datypic.com/sc/ooxml/t-ssml_CT_Cell.html\r\n    type = 'n'\r\n  }\r\n\r\n  // Available Excel cell types:\r\n  // https://github.com/SheetJS/sheetjs/blob/19620da30be2a7d7b9801938a0b9b1fd3c4c4b00/docbits/52_datatype.md\r\n  //\r\n  // Some other document (seems to be old):\r\n  // http://webapp.docx4java.org/OnlineDemo/ecma376/SpreadsheetML/ST_CellType.html\r\n  //\r\n  switch (type) {\r\n    // XLSX tends to store all strings as \"shared\" (indexed) ones\r\n    // using \"s\" cell type (for saving on strage space).\r\n    // \"str\" cell type is then generally only used for storing\r\n    // formula-pre-calculated cell values.\r\n    case 'str':\r\n      value = parseString(value, options)\r\n      break\r\n\r\n    // Sometimes, XLSX stores strings as \"inline\" strings rather than \"shared\" (indexed) ones.\r\n    // Perhaps the specification doesn't force it to use one or another.\r\n    // Example: `<sheetData><row r=\"1\"><c r=\"A1\" s=\"1\" t=\"inlineStr\"><is><t>Test 123</t></is></c></row></sheetData>`.\r\n    case 'inlineStr':\r\n      value = getInlineStringValue()\r\n      if (value === undefined) {\r\n        throw new Error(`Unsupported \"inline string\" cell value structure: ${getInlineStringXml()}`)\r\n      }\r\n      value = parseString(value, options)\r\n      break\r\n\r\n    // XLSX tends to store string values as \"shared\" (indexed) ones.\r\n    // \"Shared\" strings is a way for an Excel editor to reduce\r\n    // the file size by storing \"commonly used\" strings in a dictionary\r\n    // and then referring to such strings by their index in that dictionary.\r\n    // Example: `<sheetData><row r=\"1\"><c r=\"A1\" s=\"1\" t=\"s\"><v>0</v></c></row></sheetData>`.\r\n    case 's':\r\n      // If a cell has no value then there's no `<c/>` element for it.\r\n      // If a `<c/>` element exists then it's not empty.\r\n      // The `<v/>`alue is a key in the \"shared strings\" dictionary of the\r\n      // XLSX file, so look it up in the `values` dictionary by the numeric key.\r\n      const sharedStringIndex = Number(value)\r\n      if (isNaN(sharedStringIndex)) {\r\n        throw new Error(`Invalid \"shared\" string index: ${value}`)\r\n      }\r\n      if (sharedStringIndex >= values.length) {\r\n        throw new Error(`An out-of-bounds \"shared\" string index: ${value}`)\r\n      }\r\n      value = values[sharedStringIndex]\r\n      value = parseString(value, options)\r\n      break\r\n\r\n    // Boolean (TRUE/FALSE) values are stored as either \"1\" or \"0\"\r\n    // in cells of type \"b\".\r\n    case 'b':\r\n      if (value === '1') {\r\n        value = true\r\n      } else if (value === '0') {\r\n        value = false\r\n      } else {\r\n        throw new Error(`Unsupported \"boolean\" cell value: ${value}`)\r\n      }\r\n      break\r\n\r\n    // XLSX specification seems to support cells of type \"z\":\r\n    // blank \"stub\" cells that should be ignored by data processing utilities.\r\n    case 'z':\r\n      value = undefined\r\n      break\r\n\r\n    // XLSX specification also defines cells of type \"e\" containing a numeric \"error\" code.\r\n    // It's not clear what that means though.\r\n    // They also wrote: \"and `w` property stores its common name\".\r\n    // It's unclear what they meant by that.\r\n    case 'e':\r\n      value = decodeError(value)\r\n      break\r\n\r\n    // XLSX supports date cells of type \"d\", though seems like it (almost?) never\r\n    // uses it for storing dates, preferring \"n\" numeric timestamp cells instead.\r\n    // The value of a \"d\" cell is supposedly a string in \"ISO 8601\" format.\r\n    // I haven't seen an XLSX file having such cells.\r\n    // Example: `<sheetData><row r=\"1\"><c r=\"A1\" s=\"1\" t=\"d\"><v>2021-06-10T00:47:45.700Z</v></c></row></sheetData>`.\r\n    case 'd':\r\n      if (value === undefined) {\r\n        break\r\n      }\r\n      const parsedDate = new Date(value)\r\n      if (isNaN(parsedDate.valueOf())) {\r\n        throw new Error(`Unsupported \"date\" cell value: ${value}`)\r\n      }\r\n      value = parsedDate\r\n      break\r\n\r\n    // Numeric cells have type \"n\".\r\n    case 'n':\r\n      if (value === undefined) {\r\n        break\r\n      }\r\n      const isDateTimestampNumber = isDateTimestamp(getStyleId(), styles, options)\r\n      // XLSX does have \"d\" type for dates, but it's not commonly used.\r\n      // Instead, it prefers using \"n\" type for storing dates as timestamps.\r\n      if (isDateTimestampNumber) {\r\n        // Parse the number from string.\r\n        value = parseNumberDefault(value)\r\n        // Parse the number as a date timestamp.\r\n        value = parseDate(value, properties)\r\n      } else {\r\n        // Parse the number from string.\r\n        // Supports custom parsing function to work around javascript number encoding precision issues.\r\n        // https://gitlab.com/catamphetamine/read-excel-file/-/issues/85\r\n        value = (options.parseNumber || parseNumberDefault)(value)\r\n      }\r\n      break\r\n\r\n    default:\r\n      throw new TypeError(`Cell type not supported: ${type}`)\r\n  }\r\n\r\n  // Convert empty values to `null`.\r\n  if (value === undefined) {\r\n    value = null\r\n  }\r\n\r\n  return value\r\n}\r\n\r\n// Decodes numeric error code to a string code.\r\n// https://github.com/SheetJS/sheetjs/blob/19620da30be2a7d7b9801938a0b9b1fd3c4c4b00/docbits/52_datatype.md\r\nfunction decodeError(errorCode) {\r\n  // While the error values are determined by the application,\r\n  // the following are some example error values that could be used:\r\n  switch (errorCode) {\r\n    case 0x00:\r\n      return '#NULL!'\r\n    case 0x07:\r\n      return '#DIV/0!'\r\n    case 0x0F:\r\n      return '#VALUE!'\r\n    case 0x17:\r\n      return '#REF!'\r\n    case 0x1D:\r\n      return '#NAME?'\r\n    case 0x24:\r\n      return '#NUM!'\r\n    case 0x2A:\r\n      return '#N/A'\r\n    case 0x2B:\r\n      return '#GETTING_DATA'\r\n    default:\r\n      // Such error code doesn't exist. I made it up.\r\n      return `#ERROR_${errorCode}`\r\n  }\r\n}\r\n\r\nfunction parseString(value, options) {\r\n  // In some weird cases, a developer might want to disable\r\n  // the automatic trimming of all strings.\r\n  // For example, leading spaces might express a tree-like hierarchy.\r\n  // https://github.com/catamphetamine/read-excel-file/pull/106#issuecomment-1136062917\r\n  if (options.trim !== false) {\r\n    value = value.trim()\r\n  }\r\n  if (value === '') {\r\n    value = undefined\r\n  }\r\n  return value\r\n}\r\n\r\n// Parses a number from string.\r\n// Throws an error if the number couldn't be parsed.\r\n// When parsing floating-point number, is affected by\r\n// the javascript number encoding precision issues:\r\n// https://www.youtube.com/watch?v=2gIxbTn7GSc\r\n// https://www.avioconsulting.com/blog/overcoming-javascript-numeric-precision-issues\r\nfunction parseNumberDefault(stringifiedNumber) {\r\n  const parsedNumber = Number(stringifiedNumber)\r\n  if (isNaN(parsedNumber)) {\r\n    throw new Error(`Invalid \"numeric\" cell value: ${stringifiedNumber}`)\r\n  }\r\n  return parsedNumber\r\n}","// Maps \"A1\"-like coordinates to `{ row, column }` numeric coordinates.\r\nconst LETTERS = [\"\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"]\r\n\r\nexport function calculateDimensions (cells) {\r\n  const comparator = (a, b) => a - b\r\n  const allRows = cells.map(cell => cell.row).sort(comparator)\r\n  const allCols = cells.map(cell => cell.column).sort(comparator)\r\n  const minRow = allRows[0]\r\n  const maxRow = allRows[allRows.length - 1]\r\n  const minCol = allCols[0]\r\n  const maxCol = allCols[allCols.length - 1]\r\n\r\n  return [\r\n    { row: minRow, column: minCol },\r\n    { row: maxRow, column: maxCol }\r\n  ]\r\n}\r\n\r\n// Converts a letter coordinate to a digit coordinate.\r\n// Examples: \"A\" -> 1, \"B\" -> 2, \"Z\" -> 26, \"AA\" -> 27, etc.\r\nfunction columnLettersToNumber(columnLetters) {\r\n  // `for ... of ...` would require Babel polyfill for iterating a string.\r\n  let n = 0\r\n  let i = 0\r\n  while (i < columnLetters.length) {\r\n    n *= 26\r\n    n += LETTERS.indexOf(columnLetters[i])\r\n    i++\r\n  }\r\n  return n\r\n}\r\n\r\nexport function parseCellCoordinates(coords) {\r\n  // Coordinate examples: \"AA2091\", \"R988\", \"B1\".\r\n  coords = coords.split(/(\\d+)/)\r\n  return [\r\n    // Row.\r\n    parseInt(coords[1]),\r\n    // Column.\r\n    columnLettersToNumber(coords[0].trim())\r\n  ]\r\n}","import parseCellValue from './parseCellValue.js'\r\n\r\nimport {\r\n  parseCellCoordinates\r\n} from './coordinates.js'\r\n\r\nimport {\r\n  getCellValue,\r\n  getCellInlineStringValue\r\n} from '../xml/xlsx.js'\r\n\r\nimport {\r\n  getOuterXml\r\n} from '../xml/dom.js'\r\n\r\n// Example of a `<c/>`ell element:\r\n//\r\n// <c>\r\n//    <f>string</f> — formula.\r\n//    <v>string</v> — formula pre-computed value.\r\n//    <is>\r\n//       <t>string</t> — an `inlineStr` string (rather than a \"common string\" from a dictionary).\r\n//       <r>\r\n//          <rPr>\r\n//            ...\r\n//          </rPr>\r\n//          <t>string</t>\r\n//       </r>\r\n//       <rPh sb=\"1\" eb=\"1\">\r\n//          <t>string</t>\r\n//       </rPh>\r\n//       <phoneticPr fontId=\"1\"/>\r\n//    </is>\r\n//    <extLst>\r\n//       <ext>\r\n//          <!--any element-->\r\n//       </ext>\r\n//    </extLst>\r\n// </c>\r\n//\r\nexport default function parseCell(node, sheet, xml, values, styles, properties, options) {\r\n  const coords = parseCellCoordinates(node.getAttribute('r'))\r\n\r\n  const valueElement = getCellValue(sheet, node)\r\n\r\n  // For `xpath`, `value` can be `undefined` while for native `DOMParser` it's `null`.\r\n  // So using `value && ...` instead of `if (value !== undefined) { ... }` here\r\n  // for uniform compatibility with both `xpath` and native `DOMParser`.\r\n  let value = valueElement && valueElement.textContent\r\n\r\n  let type\r\n  if (node.hasAttribute('t')) {\r\n    type = node.getAttribute('t')\r\n  }\r\n\r\n  return {\r\n    row: coords[0],\r\n    column: coords[1],\r\n    value: parseCellValue(value, type, {\r\n      getInlineStringValue: () => getCellInlineStringValue(sheet, node),\r\n      getInlineStringXml: () => getOuterXml(node),\r\n      getStyleId: () => node.getAttribute('s'),\r\n      styles,\r\n      values,\r\n      properties,\r\n      options\r\n    })\r\n  }\r\n}","import parseCell from './parseCell.js'\r\n\r\nimport {\r\n  getCells,\r\n  getMergedCells\r\n} from '../xml/xlsx.js'\r\n\r\nexport default function parseCells(sheet, xml, values, styles, properties, options) {\r\n  const cells = getCells(sheet)\r\n\r\n  if (cells.length === 0) {\r\n    return []\r\n  }\r\n\r\n  // const mergedCells = getMergedCells(sheet)\r\n  // for (const mergedCell of mergedCells) {\r\n  //   const [from, to] = mergedCell.split(':').map(parseCellCoordinates)\r\n  //   console.log('Merged Cell.', 'From:', from, 'To:', to)\r\n  // }\r\n\r\n  return cells.map((node) => {\r\n    return parseCell(node, sheet, xml, values, styles, properties, options)\r\n  })\r\n}","import {\r\n  parseCellCoordinates\r\n} from './coordinates.js'\r\n\r\nimport {\r\n  getDimensions\r\n} from '../xml/xlsx.js'\r\n\r\n// `dimensions` defines the spreadsheet area containing all non-empty cells.\r\n// https://docs.microsoft.com/en-us/dotnet/api/documentformat.openxml.spreadsheet.sheetdimension?view=openxml-2.8.1\r\nexport default function parseDimensions(sheet) {\r\n  let dimensions = getDimensions(sheet)\r\n  if (dimensions) {\r\n    dimensions = dimensions.split(':').map(parseCellCoordinates).map(([row, column]) => ({\r\n      row,\r\n      column\r\n    }))\r\n    // Sometimes there can be just a single cell as a spreadsheet's \"dimensions\".\r\n    // For example, the default \"dimensions\" in Apache POI library is \"A1\",\r\n    // meaning that only the first cell in the spreadsheet is used.\r\n    //\r\n    // A quote from Apache POI library:\r\n    // \"Single cell ranges are formatted like single cell references (e.g. 'A1' instead of 'A1:A1').\"\r\n    //\r\n    if (dimensions.length === 1) {\r\n      dimensions = [dimensions[0], dimensions[0]]\r\n    }\r\n    return dimensions\r\n  }\r\n}\r\n\r\n","import parseCells from './parseCells.js'\r\nimport parseDimensions from './parseDimensions.js'\r\n\r\nimport { calculateDimensions } from './coordinates.js'\r\n\r\nexport default function parseSheet(content, xml, values, styles, properties, options) {\r\n  const sheet = xml.createDocument(content)\r\n\r\n  const cells = parseCells(sheet, xml, values, styles, properties, options)\r\n\r\n  // `dimensions` defines the spreadsheet area containing all non-empty cells.\r\n  // https://docs.microsoft.com/en-us/dotnet/api/documentformat.openxml.spreadsheet.sheetdimension?view=openxml-2.8.1\r\n  const dimensions = parseDimensions(sheet) || calculateDimensions(cells)\r\n\r\n  return { cells, dimensions }\r\n}","export default function dropEmptyRows(data, {\r\n  rowIndexMap,\r\n  accessor = _ => _,\r\n  onlyTrimAtTheEnd\r\n} = {}) {\r\n  // Drop empty rows.\r\n  let i = data.length - 1\r\n  while (i >= 0) {\r\n    // Check if the row is empty.\r\n    let empty = true\r\n    for (const cell of data[i]) {\r\n      if (accessor(cell) !== null) {\r\n        empty = false\r\n        break\r\n      }\r\n    }\r\n    // Remove the empty row.\r\n    if (empty) {\r\n      data.splice(i, 1)\r\n      if (rowIndexMap) {\r\n        rowIndexMap.splice(i, 1)\r\n      }\r\n    } else if (onlyTrimAtTheEnd) {\r\n      break\r\n    }\r\n    i--\r\n  }\r\n  return data\r\n}","export default function dropEmptyColumns(data, {\r\n  accessor = _ => _,\r\n  onlyTrimAtTheEnd\r\n} = {}) {\r\n  let i = data[0].length - 1\r\n  while (i >= 0) {\r\n    let empty = true\r\n    for (const row of data) {\r\n      if (accessor(row[i]) !== null) {\r\n        empty = false\r\n        break\r\n      }\r\n    }\r\n    if (empty) {\r\n      let j = 0;\r\n      while (j < data.length) {\r\n        data[j].splice(i, 1)\r\n        j++\r\n      }\r\n    } else if (onlyTrimAtTheEnd) {\r\n      break\r\n    }\r\n    i--\r\n  }\r\n  return data\r\n}","import dropEmptyRows from './dropEmptyRows.js'\r\nimport dropEmptyColumns from './dropEmptyColumns.js'\r\n\r\nexport default function getData(sheet, options) {\r\n  const { dimensions, cells } = sheet\r\n\r\n  // If the sheet is empty.\r\n  if (cells.length === 0) {\r\n    return []\r\n  }\r\n\r\n  const [leftTop, rightBottom] = dimensions\r\n\r\n  // Don't discard empty rows or columns at the start.\r\n  // https://github.com/catamphetamine/read-excel-file/issues/102\r\n  // const colsCount = (rightBottom.column - leftTop.column) + 1\r\n  // const rowsCount = (rightBottom.row - leftTop.row) + 1\r\n\r\n  const colsCount = rightBottom.column\r\n  const rowsCount = rightBottom.row\r\n\r\n  // Initialize spreadsheet data structure.\r\n  let data = new Array(rowsCount)\r\n  let i = 0\r\n  while (i < rowsCount) {\r\n    data[i] = new Array(colsCount)\r\n    let j = 0\r\n    while (j < colsCount) {\r\n      data[i][j] = null\r\n      j++\r\n    }\r\n    i++\r\n  }\r\n\r\n  // Fill in spreadsheet `data`.\r\n  // (this code implies that `cells` aren't necessarily sorted by row and column:\r\n  //  maybe that's not correct, this piece code was initially copy-pasted\r\n  //  from some other library that used `XPath`)\r\n  for (const cell of cells) {\r\n    // Don't discard empty rows or columns at the start.\r\n    // https://github.com/catamphetamine/read-excel-file/issues/102\r\n    // const rowIndex = cell.row - leftTop.row\r\n    // const columnIndex = cell.column - leftTop.column\r\n    const rowIndex = cell.row - 1\r\n    const columnIndex = cell.column - 1\r\n    // Ignore the data in the cell if it's outside of the spreadsheet's \"dimensions\".\r\n    if (columnIndex < colsCount && rowIndex < rowsCount) {\r\n      data[rowIndex][columnIndex] = cell.value\r\n    }\r\n  }\r\n\r\n  // Fill in the row map.\r\n  const { rowMap: rowIndexMap } = options\r\n  if (rowIndexMap) {\r\n    let i = 0\r\n    while (i < data.length) {\r\n      rowIndexMap[i] = i\r\n      i++\r\n    }\r\n  }\r\n\r\n  // Drop empty columns or rows.\r\n  data = dropEmptyRows(\r\n    dropEmptyColumns(data, { onlyTrimAtTheEnd: true }),\r\n    { onlyTrimAtTheEnd: true, rowIndexMap }\r\n  )\r\n\r\n  // Optionally transform data before applying `schema`.\r\n  if (options.transformData) {\r\n    data = options.transformData(data)\r\n    // data = options.transformData(data, {\r\n    //   dropEmptyRowsAndColumns(data) {\r\n    //     return dropEmptyRows(dropEmptyColumns(data), { rowIndexMap })\r\n    //   }\r\n    // })\r\n  }\r\n\r\n  return data\r\n}","import parseProperties from './parseProperties.js'\r\nimport parseFilePaths from './parseFilePaths.js'\r\nimport parseStyles from './parseStyles.js'\r\nimport parseSharedStrings from './parseSharedStrings.js'\r\nimport parseSheet from './parseSheet.js'\r\nimport getData from './getData.js'\r\n\r\n// For an introduction in reading `*.xlsx` files see \"The minimum viable XLSX reader\":\r\n// https://www.brendanlong.com/the-minimum-viable-xlsx-reader.html\r\n\r\n/**\r\n * Reads an (unzipped) XLSX file structure into a 2D array of cells.\r\n * @param  {object} contents - A list of XML files inside XLSX file (which is a zipped directory).\r\n * @param  {number?} options.sheet - Workbook sheet id (`1` by default).\r\n * @param  {string?} options.dateFormat - Date format, e.g. \"mm/dd/yyyy\". Values having this format template set will be parsed as dates.\r\n * @param  {object} contents - A list of XML files inside XLSX file (which is a zipped directory).\r\n * @return {object} An object of shape `{ data, cells, properties }`. `data: string[][]` is an array of rows, each row being an array of cell values. `cells: string[][]` is an array of rows, each row being an array of cells. `properties: object` is the spreadsheet properties (e.g. whether date epoch is 1904 instead of 1900).\r\n */\r\nexport default function readXlsx(contents, xml, options = {}) {\r\n  if (!options.sheet) {\r\n    options = {\r\n      sheet: 1,\r\n      ...options\r\n    }\r\n  }\r\n\r\n  const getXmlFileContent = (filePath) => {\r\n    if (!contents[filePath]) {\r\n      throw new Error(`\"${filePath}\" file not found inside the *.xlsx file zip archive`)\r\n    }\r\n    return contents[filePath]\r\n  }\r\n\r\n  // Some Excel editors don't want to use standard naming scheme for sheet files.\r\n  // https://github.com/tidyverse/readxl/issues/104\r\n  const filePaths = parseFilePaths(getXmlFileContent('xl/_rels/workbook.xml.rels'), xml)\r\n\r\n  // Default file path for \"shared strings\": \"xl/sharedStrings.xml\".\r\n  const values = filePaths.sharedStrings\r\n    ? parseSharedStrings(getXmlFileContent(filePaths.sharedStrings), xml)\r\n    : []\r\n\r\n  // Default file path for \"styles\": \"xl/styles.xml\".\r\n  const styles = filePaths.styles\r\n    ? parseStyles(getXmlFileContent(filePaths.styles), xml)\r\n    : {}\r\n\r\n  const properties = parseProperties(getXmlFileContent('xl/workbook.xml'), xml)\r\n\r\n  // A feature for getting the list of sheets in an Excel file.\r\n  // https://github.com/catamphetamine/read-excel-file/issues/14\r\n  if (options.getSheets) {\r\n    return properties.sheets.map(({ name }) => ({\r\n      name\r\n    }))\r\n  }\r\n\r\n  // Find the sheet by name, or take the first one.\r\n  const sheetId = getSheetId(options.sheet, properties.sheets)\r\n\r\n  // If the sheet wasn't found then throw an error.\r\n  // Example: \"xl/worksheets/sheet1.xml\".\r\n  if (!sheetId || !filePaths.sheets[sheetId]) {\r\n    throw createSheetNotFoundError(options.sheet, properties.sheets)\r\n  }\r\n\r\n  // Parse sheet data.\r\n  const sheet = parseSheet(\r\n    getXmlFileContent(filePaths.sheets[sheetId]),\r\n    xml,\r\n    values,\r\n    styles,\r\n    properties,\r\n    options\r\n  )\r\n\r\n  options = {\r\n    // Create a `rowIndexMap` for the original dataset, if not passed,\r\n    // because \"empty\" rows will be dropped from the input data.\r\n    rowMap: [],\r\n    ...options\r\n  }\r\n\r\n  // Get spreadsheet data.\r\n  const data = getData(sheet, options)\r\n\r\n  // Can return properties, if required.\r\n  if (options.properties) {\r\n    return {\r\n      data,\r\n      properties\r\n    }\r\n  }\r\n\r\n  // Return spreadsheet data.\r\n  return data\r\n}\r\n\r\nfunction getSheetId(sheet, sheets) {\r\n  if (typeof sheet === 'number') {\r\n    const _sheet = sheets[sheet - 1]\r\n    return _sheet && _sheet.relationId\r\n  }\r\n  for (const _sheet of sheets) {\r\n    if (_sheet.name === sheet) {\r\n      return _sheet.relationId\r\n    }\r\n  }\r\n}\r\n\r\nfunction createSheetNotFoundError(sheet, sheets) {\r\n  const sheetsList = sheets && sheets.map((sheet, i) => `\"${sheet.name}\" (#${i + 1})`).join(', ')\r\n  return new Error(`Sheet ${typeof sheet === 'number' ? '#' + sheet : '\"' + sheet + '\"'} not found in the *.xlsx file.${sheets ? ' Available sheets: ' + sheetsList + '.' : ''}`)\r\n}","export default class InvalidError extends Error {\r\n  constructor(reason) {\r\n    super('invalid')\r\n    this.reason = reason\r\n  }\r\n}","import InvalidError from './InvalidError.js'\r\n\r\nexport default function NumberType(value) {\r\n  // An XLSX file editing software might not always correctly\r\n  // detect numeric values in string-type cells. Users won't bother\r\n  // manually selecting a cell type, so the editing software has to guess\r\n  // based on the user's input. One can assume that such auto-detection\r\n  // might not always work.\r\n  //\r\n  // So, if a cell is supposed to be a numeric one, convert a string value to a number.\r\n  //\r\n  if (typeof value === 'string') {\r\n    const stringifiedValue = value\r\n    value = Number(value)\r\n    if (String(value) !== stringifiedValue) {\r\n      throw new InvalidError('not_a_number')\r\n    }\r\n  }\r\n  if (typeof value !== 'number') {\r\n    throw new InvalidError('not_a_number')\r\n  }\r\n  if (isNaN(value)) {\r\n    throw new InvalidError('invalid_number')\r\n  }\r\n  // At this point, `value` can only be a number.\r\n  //\r\n  // The global `isFinite()` function filters out:\r\n  // * NaN\r\n  // * -Infinity\r\n  // * Infinity\r\n  //\r\n  // All other values pass (including non-numbers).\r\n  //\r\n  if (!isFinite(value)) {\r\n    throw new InvalidError('out_of_bounds')\r\n  }\r\n  return value\r\n}","import InvalidError from './InvalidError.js'\r\n\r\nexport default function StringType(value) {\r\n  if (typeof value === 'string') {\r\n    return value\r\n  }\r\n  // Excel tends to perform a forced automatic convertion of string-type values\r\n  // to number-type ones when the user has input them. Otherwise, users wouldn't\r\n  // be able to perform formula calculations on those cell values because users\r\n  // won't bother manually choosing a \"numeric\" cell type for each cell, and\r\n  // even if they did, choosing a \"numeric\" cell type every time wouldn't be an\r\n  // acceptable \"user experience\".\r\n  //\r\n  // So, if a cell value is supposed to be a string and Excel has automatically\r\n  // converted it to a number, perform a backwards conversion.\r\n  //\r\n  if (typeof value === 'number') {\r\n    if (isNaN(value)) {\r\n      throw new InvalidError('invalid_number')\r\n    }\r\n    // The global `isFinite()` function filters out:\r\n    // * NaN\r\n    // * -Infinity\r\n    // * Infinity\r\n    //\r\n    // All other values pass (including non-numbers).\r\n    //\r\n    if (!isFinite(value)) {\r\n      throw new InvalidError('out_of_bounds')\r\n    }\r\n    return String(value)\r\n  }\r\n  throw new InvalidError('not_a_string')\r\n}","import InvalidError from './InvalidError.js'\r\n\r\nexport default function BooleanType(value) {\r\n\tif (typeof value === 'boolean') {\r\n    return value\r\n  }\r\n  throw new InvalidError('not_a_boolean')\r\n}","import parseDate from '../read/parseDate.js'\r\nimport InvalidError from './InvalidError.js'\r\n\r\nexport default function DateType(value, { properties }) {\r\n\t// XLSX has no specific format for dates.\r\n  // Sometimes a date can be heuristically detected.\r\n  // https://github.com/catamphetamine/read-excel-file/issues/3#issuecomment-395770777\r\n  if (value instanceof Date) {\r\n    if (isNaN(value.valueOf())) {\r\n      throw new InvalidError('out_of_bounds')\r\n    }\r\n    return value\r\n  }\r\n  if (typeof value === 'number') {\r\n    if (isNaN(value)) {\r\n      throw new InvalidError('invalid_number')\r\n    }\r\n    if (!isFinite(value)) {\r\n      throw new InvalidError('out_of_bounds')\r\n    }\r\n    const date = parseDate(value, properties)\r\n    if (isNaN(date.valueOf())) {\r\n      throw new InvalidError('out_of_bounds')\r\n    }\r\n    return date\r\n  }\r\n  throw new InvalidError('not_a_date')\r\n}","import NumberType from '../../types/Number.js'\r\nimport StringType from '../../types/String.js'\r\nimport BooleanType from '../../types/Boolean.js'\r\nimport DateType from '../../types/Date.js'\r\n\r\nconst DEFAULT_OPTIONS = {\r\n  schemaPropertyValueForMissingColumn: undefined,\r\n  schemaPropertyValueForUndefinedCellValue: undefined,\r\n  schemaPropertyValueForNullCellValue: null,\r\n  schemaPropertyShouldSkipRequiredValidationForMissingColumn: () => false,\r\n  // `getEmptyObjectValue(object, { path })` applies to both the top-level object\r\n  // and any of its sub-objects.\r\n  getEmptyObjectValue: () => null,\r\n  getEmptyArrayValue: () => null,\r\n  isColumnOriented: false,\r\n  arrayValueSeparator: ','\r\n}\r\n\r\n/**\r\n * (this function is exported from `read-excel-file/map`)\r\n * Converts spreadsheet-alike data structure into an array of objects.\r\n * The first row should be the list of column headers.\r\n * @param {any[][]} data - An array of rows, each row being an array of cells.\r\n * @param {object} schema\r\n * @param {object} [options]\r\n * @param {null} [options.schemaPropertyValueForMissingColumn] — By default, when some of the `schema` columns are missing in the input `data`, those properties are set to `undefined` in the output objects. Pass `schemaPropertyValueForMissingColumn: null` to set such \"missing column\" properties to `null` in the output objects.\r\n * @param {null} [options.schemaPropertyValueForNullCellValue] — By default, when it encounters a `null` value in a cell in input `data`, it sets it to `undefined` in the output object. Pass `schemaPropertyValueForNullCellValue: null` to make it set such values as `null`s in output objects.\r\n * @param {null} [options.schemaPropertyValueForUndefinedCellValue] — By default, when it encounters an `undefined` value in a cell in input `data`, it it sets it to `undefined` in the output object. Pass `schemaPropertyValueForUndefinedCellValue: null` to make it set such values as `null`s in output objects.\r\n * @param {boolean} [options.schemaPropertyShouldSkipRequiredValidationForMissingColumn(column: string, { object })] — By default, it does apply `required` validation to `schema` properties for which columns are missing in the input `data`. One could pass a custom `schemaPropertyShouldSkipRequiredValidationForMissingColumn(column, { object })` to disable `required` validation for missing columns in some or all cases.\r\n * @param {function} [options.getEmptyObjectValue(object, { path })] — By default, it returns `null` for an \"empty\" resulting object. One could override that value using `getEmptyObjectValue(object, { path })` parameter. The value applies to both top-level object and any nested sub-objects in case of a nested schema, hence the additional `path?: string` parameter.\r\n * @param {function} [getEmptyArrayValue(array, { path })] — By default, it returns `null` for an \"empty\" array value. One could override that value using `getEmptyArrayValue(array, { path })` parameter.\r\n * @param {boolean} [options.isColumnOriented] — By default, the headers are assumed to be the first row in the `data`. Pass `isColumnOriented: true` if the headers are the first column in the `data`. i.e. if `data` is \"transposed\".\r\n * @param {object} [options.rowIndexMap] — Custom row index mapping `data` rows. If present, will overwrite the indexes of `data` rows with the indexes from this `rowIndexMap`.\r\n * @return {object[]}\r\n */\r\nexport default function(data, schema, options) {\r\n  if (options) {\r\n    options = {\r\n      ...DEFAULT_OPTIONS,\r\n      ...options\r\n    }\r\n  } else {\r\n    options = DEFAULT_OPTIONS\r\n  }\r\n\r\n  const {\r\n    isColumnOriented,\r\n    rowIndexMap\r\n  } = options\r\n\r\n  validateSchema(schema)\r\n\r\n  if (isColumnOriented) {\r\n    data = transpose(data)\r\n  }\r\n\r\n  const columns = data[0]\r\n\r\n  const results = []\r\n  const errors = []\r\n\r\n  for (let i = 1; i < data.length; i++) {\r\n    const result = read(schema, data[i], i, undefined, columns, errors, options)\r\n    results.push(result)\r\n  }\r\n\r\n  // Set the correct `row` number in `errors` if a custom `rowIndexMap` is supplied.\r\n  if (rowIndexMap) {\r\n    for (const error of errors) {\r\n      // Convert the `row` index in `data` to the\r\n      // actual `row` index in the spreadsheet.\r\n      // `- 1` converts row number to row index.\r\n      // `+ 1` converts row index to row number.\r\n      error.row = rowIndexMap[error.row - 1] + 1\r\n    }\r\n  }\r\n\r\n  return {\r\n    rows: results,\r\n    errors\r\n  }\r\n}\r\n\r\nfunction read(schema, row, rowIndex, path, columns, errors, options) {\r\n  const object = {}\r\n  let isEmptyObject = true\r\n\r\n  const createError = ({\r\n    column,\r\n    value,\r\n    error: errorMessage,\r\n    reason\r\n  }) => {\r\n    const error = {\r\n      error: errorMessage,\r\n      row: rowIndex + 1,\r\n      column,\r\n      value\r\n    }\r\n    if (reason) {\r\n      error.reason = reason\r\n    }\r\n    if (schema[column].type) {\r\n      error.type = schema[column].type\r\n    }\r\n    return error\r\n  }\r\n\r\n  const pendingRequiredChecks = []\r\n\r\n  // For each schema entry.\r\n  for (const key of Object.keys(schema)) {\r\n    const schemaEntry = schema[key]\r\n    const isNestedSchema = typeof schemaEntry.type === 'object' && !Array.isArray(schemaEntry.type)\r\n\r\n    // The path of this property inside the resulting object.\r\n    const propertyPath = `${path || ''}.${schemaEntry.prop}`\r\n\r\n    // Read the cell value for the schema entry.\r\n    let cellValue\r\n    const columnIndex = columns.indexOf(key)\r\n    const isMissingColumn = columnIndex < 0\r\n    if (!isMissingColumn) {\r\n      cellValue = row[columnIndex]\r\n    }\r\n\r\n    let value\r\n    let error\r\n    let reason\r\n\r\n    // Get property `value` from cell value.\r\n    if (isNestedSchema) {\r\n      value = read(schemaEntry.type, row, rowIndex, propertyPath, columns, errors, options)\r\n    } else {\r\n      if (isMissingColumn) {\r\n        value = options.schemaPropertyValueForMissingColumn\r\n      }\r\n      else if (cellValue === undefined) {\r\n        value = options.schemaPropertyValueForUndefinedCellValue\r\n      }\r\n      else if (cellValue === null) {\r\n        value = options.schemaPropertyValueForNullCellValue\r\n      }\r\n      else if (Array.isArray(schemaEntry.type)) {\r\n        const array = parseArray(cellValue, options.arrayValueSeparator).map((_value) => {\r\n          if (error) {\r\n            return\r\n          }\r\n          const result = parseValue(_value, schemaEntry, options)\r\n          if (result.error) {\r\n            // In case of an error, `value` won't be returned and will just be reported\r\n            // as part of an `error` object, so it's fine assigning just an element of the array.\r\n            value = _value\r\n            error = result.error\r\n            reason = result.reason\r\n          }\r\n          return result.value\r\n        })\r\n        if (!error) {\r\n          const isEmpty = array.every(isEmptyValue)\r\n          value = isEmpty ? options.getEmptyArrayValue(array, { path: propertyPath }) : array\r\n        }\r\n      } else {\r\n        const result = parseValue(cellValue, schemaEntry, options)\r\n        error = result.error\r\n        reason = result.reason\r\n        value = error ? cellValue : result.value\r\n      }\r\n    }\r\n\r\n    // Apply `required` validation if the value is \"empty\".\r\n    if (!error && isEmptyValue(value)) {\r\n      if (schemaEntry.required) {\r\n        // Will perform this `required()` validation in the end,\r\n        // when all properties of the mapped object have been mapped.\r\n        pendingRequiredChecks.push({ column: key, value, isMissingColumn })\r\n      }\r\n    }\r\n\r\n    if (error) {\r\n      // If there was an error then the property value in the `object` will be `undefined`,\r\n      // i.e it won't add the property value to the mapped object.\r\n      errors.push(createError({\r\n        column: key,\r\n        value,\r\n        error,\r\n        reason\r\n      }))\r\n    } else {\r\n      // Possibly unmark the mapped object as \"empty\".\r\n      if (isEmptyObject && !isEmptyValue(value)) {\r\n        isEmptyObject = false\r\n      }\r\n      // Set the value in the mapped object.\r\n      // Skip setting `undefined` values because they're already `undefined`.\r\n      if (value !== undefined) {\r\n        object[schemaEntry.prop] = value\r\n      }\r\n    }\r\n  }\r\n\r\n  // Return `null` for an \"empty\" mapped object.\r\n  if (isEmptyObject) {\r\n    return options.getEmptyObjectValue(object, { path })\r\n  }\r\n\r\n  // Perform any `required` validations.\r\n  for (const { column, value, isMissingColumn } of pendingRequiredChecks) {\r\n    // Can optionally skip `required` validation for missing columns.\r\n    const skipRequiredValidation = isMissingColumn && options.schemaPropertyShouldSkipRequiredValidationForMissingColumn(column, { object })\r\n    if (!skipRequiredValidation) {\r\n      const { required } = schema[column]\r\n      const isRequired = typeof required === 'boolean' ? required : required(object)\r\n      if (isRequired) {\r\n        errors.push(createError({\r\n          column,\r\n          value,\r\n          error: 'required'\r\n        }))\r\n      }\r\n    }\r\n  }\r\n\r\n  // Return the mapped object.\r\n  return object\r\n}\r\n\r\n/**\r\n * Converts textual value to a javascript typed value.\r\n * @param  {any} value\r\n * @param  {object} schemaEntry\r\n * @return {{ value: any, error: string }}\r\n */\r\nexport function parseValue(value, schemaEntry, options) {\r\n  if (value === null) {\r\n    return { value: null }\r\n  }\r\n  let result\r\n  if (schemaEntry.parse) {\r\n    result = parseCustomValue(value, schemaEntry.parse)\r\n  } else if (schemaEntry.type) {\r\n    result = parseValueOfType(\r\n      value,\r\n      // Supports parsing array types.\r\n      // See `parseArray()` function for more details.\r\n      // Example `type`: String[]\r\n      // Input: 'Barack Obama, \"String, with, colons\", Donald Trump'\r\n      // Output: ['Barack Obama', 'String, with, colons', 'Donald Trump']\r\n      Array.isArray(schemaEntry.type) ? schemaEntry.type[0] : schemaEntry.type,\r\n      options\r\n    )\r\n  } else {\r\n    result = { value: value }\r\n    // throw new Error('Invalid schema entry: no .type and no .parse():\\n\\n' + JSON.stringify(schemaEntry, null, 2))\r\n  }\r\n  // If errored then return the error.\r\n  if (result.error) {\r\n    return result\r\n  }\r\n  if (result.value !== null) {\r\n    if (schemaEntry.oneOf && schemaEntry.oneOf.indexOf(result.value) < 0) {\r\n      return { error: 'invalid', reason: 'unknown' }\r\n    }\r\n    if (schemaEntry.validate) {\r\n      try {\r\n        schemaEntry.validate(result.value)\r\n      } catch (error) {\r\n        return { error: error.message }\r\n      }\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\n/**\r\n * Converts textual value to a custom value using supplied `.parse()`.\r\n * @param  {any} value\r\n * @param  {function} parse\r\n * @return {{ value: any, error: string }}\r\n */\r\nfunction parseCustomValue(value, parse) {\r\n  try {\r\n    value = parse(value)\r\n    if (value === undefined) {\r\n      return { value: null }\r\n    }\r\n    return { value }\r\n  } catch (error) {\r\n    const result = { error: error.message }\r\n    if (error.reason) {\r\n      result.reason = error.reason;\r\n    }\r\n    return result\r\n  }\r\n}\r\n\r\n/**\r\n * Converts textual value to a javascript typed value.\r\n * @param  {any} value\r\n * @param  {} type\r\n * @return {{ value: (string|number|Date|boolean), error: string, reason?: string }}\r\n */\r\nfunction parseValueOfType(value, type, options) {\r\n  switch (type) {\r\n    case String:\r\n      return parseCustomValue(value, StringType)\r\n\r\n    case Number:\r\n      return parseCustomValue(value, NumberType)\r\n\r\n    case Date:\r\n      return parseCustomValue(value, (value) => DateType(value, { properties: options.properties }))\r\n\r\n    case Boolean:\r\n      return parseCustomValue(value, BooleanType)\r\n\r\n    default:\r\n      if (typeof type === 'function') {\r\n        return parseCustomValue(value, type)\r\n      }\r\n      throw new Error(`Unsupported schema type: ${type && type.name || type}`)\r\n  }\r\n}\r\n\r\nexport function getBlock(string, endCharacter, startIndex) {\r\n  let i = 0\r\n  let substring = ''\r\n  let character\r\n  while (startIndex + i < string.length) {\r\n    const character = string[startIndex + i]\r\n    if (character === endCharacter) {\r\n      return [substring, i]\r\n    }\r\n    else if (character === '\"') {\r\n      const block = getBlock(string, '\"', startIndex + i + 1)\r\n      substring += block[0]\r\n      i += '\"'.length + block[1] + '\"'.length\r\n    }\r\n    else {\r\n      substring += character\r\n      i++\r\n    }\r\n  }\r\n  return [substring, i]\r\n}\r\n\r\n/**\r\n * Parses a string of comma-separated substrings into an array of substrings.\r\n * (the `export` is just for tests)\r\n * @param  {string} string — A string of comma-separated substrings.\r\n * @return {string[]} An array of substrings.\r\n */\r\nexport function parseArray(string, arrayValueSeparator) {\r\n  const blocks = []\r\n  let index = 0\r\n  while (index < string.length) {\r\n    const [substring, length] = getBlock(string, arrayValueSeparator, index)\r\n    index += length + arrayValueSeparator.length\r\n    blocks.push(substring.trim())\r\n  }\r\n  return blocks\r\n}\r\n\r\n// Transpose a 2D array.\r\n// https://stackoverflow.com/questions/17428587/transposing-a-2d-array-in-javascript\r\nconst transpose = array => array[0].map((_, i) => array.map(row => row[i]))\r\n\r\nfunction validateSchema(schema) {\r\n  for (const key of Object.keys(schema)) {\r\n    const entry = schema[key]\r\n    if (!entry.prop) {\r\n      throw new Error(`\"prop\" not defined for schema entry \"${key}\".`)\r\n    }\r\n  }\r\n}\r\n\r\nfunction isEmptyValue(value) {\r\n  return value === undefined || value === null\r\n}","import convertToJson from './convertToJson.js'\r\n\r\nexport default function convertToJsonLegacyBehavior(data, schema, options = {}) {\r\n\tconst {\r\n\t\tincludeNullValues,\r\n\t\tignoreEmptyRows,\r\n\t\tisColumnOriented,\r\n\t\trowMap\r\n\t} = options\r\n\tconst defaultConversionOptions = {\r\n\t\tschemaPropertyValueForMissingColumn: undefined,\r\n\t\tschemaPropertyValueForUndefinedCellValue: undefined,\r\n\t\tschemaPropertyValueForNullCellValue: undefined,\r\n\t\tschemaPropertyShouldSkipRequiredValidationForMissingColumn: (column, { path }) => false,\r\n\t\tgetEmptyObjectValue: (object, { path }) => path ? undefined : null,\r\n\t\tgetEmptyArrayValue: () => null,\r\n\t\tarrayValueSeparator: ','\r\n\t}\r\n\tif (includeNullValues) {\r\n\t\tdefaultConversionOptions.schemaPropertyValueForMissingColumn = null\r\n\t\tdefaultConversionOptions.schemaPropertyValueForUndefinedCellValue = null\r\n\t\tdefaultConversionOptions.schemaPropertyValueForNullCellValue = null\r\n\t\tdefaultConversionOptions.getEmptyObjectValue = (object, { path }) => null\r\n\t}\r\n\tconst result = convertToJson(data, schema, {\r\n\t\t...defaultConversionOptions,\r\n\t\trowIndexMap: rowMap,\r\n\t\tisColumnOriented\r\n\t})\r\n\tif (ignoreEmptyRows !== false) {\r\n\t\tresult.rows = result.rows.filter(_ => _ !== defaultConversionOptions.getEmptyObjectValue(_, { path: undefined }))\r\n\t}\r\n\treturn result\r\n}","// Renames some of the `react-excel-file` options to `convertToJson()` options.\r\nexport default function convertToJsonSpreadsheetBehavior(convertToJson, data, schema, options = {}) {\r\n\tconst {\r\n\t\tschemaPropertyValueForEmptyCell,\r\n\t\t...restOptions\r\n\t} = options\r\n\treturn convertToJson(data, schema, {\r\n\t\t...restOptions,\r\n\t\tschemaPropertyValueForNullCellValue: schemaPropertyValueForEmptyCell\r\n\t})\r\n}","export default function convertMapToSchema(map) {\r\n\tconst schema = {}\r\n\tfor (const key of Object.keys(map)) {\r\n\t\tlet prop = map[key]\r\n\t\tlet type\r\n\t\tif (typeof prop === 'object') {\r\n\t\t\tprop = Object.keys(map[key])[0]\r\n\t\t\ttype = convertMapToSchema(map[key][prop])\r\n\t\t}\r\n\t\tschema[key] = {\r\n\t\t\tprop\r\n\t\t}\r\n\t\tif (type) {\r\n\t\t\tschema[key].type = type\r\n\t\t}\r\n\t}\r\n\treturn schema\r\n}","import readXlsx from './readXlsx.js'\r\n\r\nimport convertToJsonLegacyBehavior from './schema/convertToJson.legacy.js'\r\nimport convertToJsonSpreadsheetBehavior from './schema/convertToJson.spreadsheet.js'\r\n\r\nimport convertMapToSchema from './schema/convertMapToSchema.js'\r\n\r\nexport default function readXlsxFileContents(entries, xml, { schema, map, ...options}) {\r\n\tif (!schema && map) {\r\n\t\tschema = convertMapToSchema(map)\r\n\t}\r\n\t// `readXlsx()` adds `options.rowMap`, if not passed.\r\n\tconst result = readXlsx(entries, xml, { ...options, properties: schema || options.properties })\r\n\tif (schema) {\r\n\t\treturn convertToJsonSpreadsheetBehavior(convertToJsonLegacyBehavior, result.data, schema, {\r\n\t\t\t...options,\r\n\t\t\tproperties: result.properties\r\n\t\t})\r\n\t}\r\n\treturn result\r\n}","import xml from '../xml/xmlBrowser.js'\r\n\r\nimport unpackXlsxFile from './unpackXlsxFileBrowser.js'\r\nimport readXlsxFileContents from './readXlsxFileContents.js'\r\n\r\n/**\r\n * Reads XLSX file into a 2D array of cells in a browser.\r\n * @param  {file} file - A file being uploaded in the browser.\r\n * @param  {object?} options\r\n * @param  {(number|string)?} options.sheet - Excel document sheet to read. Defaults to `1`. Will only read this sheet and skip others.\r\n * @return {Promise} Resolves to a 2D array of cells: an array of rows, each row being an array of cells.\r\n */\r\nexport default function readXlsxFile(file, options = {}) {\r\n\treturn unpackXlsxFile(file)\r\n\t\t.then((entries) => readXlsxFileContents(entries, xml, options))\r\n}","import readXlsxFile from './readXlsxFileBrowser.js'\r\n\r\n/**\r\n * Reads the list of sheet names in an XLSX file in a web browser.\r\n * @param  {file} file - A file being uploaded in the browser.\r\n * @return {Promise} Resolves to an array of objects of shape `{ name: string }`.\r\n */\r\nexport default function readSheetNames(file) {\r\n\treturn readXlsxFile(file, { getSheets: true })\r\n\t\t.then(sheets => sheets.map(sheet => sheet.name))\r\n}","import { render } from \"./xlparse.vue?vue&type=template&id=2d5c91ab\"\nimport script from \"./xlparse.vue?vue&type=script&lang=js\"\nexport * from \"./xlparse.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","ref","width","height","style","autoplay","muted","_createElementVNode","src","type","_hoisted_3","_createElementBlock","_hoisted_1","onChange","_cache","args","$options","onFileChange","_hoisted_2","_hoisted_4","onClick","navExcManage","_normalizeStyle","$data","buttonStyle1","_hoisted_5","_createTextVNode","navExcManage2","buttonStyle2","_hoisted_6","navExcManage3","buttonStyle3","_hoisted_7","navExcManage4","buttonStyle4","_hoisted_8","navExcManage5","buttonStyle5","_hoisted_9","navExcManage6","buttonStyle6","_hoisted_10","navExcManage7","buttonStyle7","_hoisted_11","navExcManage8","buttonStyle81","_hoisted_12","navExcManage9","buttonStyle82","_hoisted_13","navExcManage10","buttonStyle9","_hoisted_14","navExcManage11","buttonStyle10","_hoisted_15","createDocument","content","DOMParser","parseFromString","trim","u8","Uint8Array","u16","Uint16Array","u32","Uint32Array","fleb","fdeb","clim","freb","eb","start","b","i","r","j","_a","fl","revfl","_b","fd","rev","x","hMap","cd","mb","s","length","l","co","le","rvb","sv","r_1","v","m","flt","fdt","flrm","fdrm","max","a","bits","d","p","o","bits16","shft","slc","e","n","BYTES_PER_ELEMENT","set","subarray","ec","err","ind","msg","nt","Error","code","captureStackTrace","inflt","dat","buf","st","sl","f","noBuf","noSt","cbuf","bl","nbuf","Math","final","pos","bt","lm","dm","lbt","dbt","tbts","t","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","c","lt","dt","lms","dms","lpos","sym","add","dsym","end","et","b2","b4","b8","inflateSync","data","out","td","TextDecoder","decode","stream","dutf8","String","fromCharCode","strFromU8","latin1","apply","ext","slzh","zh","z","fnl","fn","es","bs","z64e","sc","su","off","queueMicrotask","setTimeout","unzipSync","opts","files","ze","fltr","filter","c_2","no","name","size","originalSize","compression","unpackXlsxFile","input","File","Blob","arrayBuffer","then","unpackXlsxArrayBuffer","archive","contents","Promise","resolve","getContents","unzippedFiles","_i","_Object$keys","Object","keys","key","findChild","node","tagName","childNodes","childNode","nodeType","getTagName","findChildren","results","push","forEach","func","map","NAMESPACE_REG_EXP","element","replace","getOuterXml","textContent","xml","attributes","value","getCells","document","worksheet","documentElement","sheetData","cells","row","cell","getCellValue","getCellInlineStringValue","firstChild","getDimensions","dimensions","getAttribute","getBaseStyles","styleSheet","cellStyleXfs","getCellStyles","cellXfs","getNumberFormats","numFmts","getSharedStrings","sst","string","getWorkbookProperties","workbook","getRelationships","relationships","getSheets","sheets","parseProperties","book","properties","workbookProperties","epoch1904","addSheetInfo","sheet","id","relationId","parseFilePaths","filePaths","sharedStrings","undefined","styles","addFilePathInfo","relationship","filePath","fileType","getFilePath","path","slice","parseStyles","doc","baseStyles","parseCellStyle","numberFormats","parseNumberFormatStyle","reduce","formats","format","getCellStyle","xf","hasAttribute","_objectSpread","xfId","numFmt","template","numberFormatId","numberFormat","parseSharedStrings","parseExcelDate","excelSerialDate","options","daysBeforeUnixEpoch","hour","Date","round","isDateTimestamp","styleId","concat","BUILT_IN_DATE_NUMBER_FORMAT_IDS","indexOf","Number","dateFormat","smartDateParser","isDateTemplate","DATE_FORMAT_WEIRD_PREFIX","DATE_FORMAT_WEIRD_POSTFIX","toLowerCase","_step","tokens","split","_iterator","_createForOfIteratorHelperLoose","done","token","DATE_TEMPLATE_TOKENS","parseCellValue","_ref","getInlineStringValue","getInlineStringXml","getStyleId","values","parseString","sharedStringIndex","isNaN","decodeError","parsedDate","valueOf","isDateTimestampNumber","parseNumberDefault","parseDate","parseNumber","TypeError","errorCode","stringifiedNumber","parsedNumber","LETTERS","calculateDimensions","comparator","allRows","sort","allCols","column","minRow","maxRow","minCol","maxCol","columnLettersToNumber","columnLetters","parseCellCoordinates","coords","parseInt","parseCell","valueElement","parseCells","parseDimensions","_ref2","_slicedToArray","parseSheet","dropEmptyRows","arguments","rowIndexMap","_ref$accessor","accessor","_","onlyTrimAtTheEnd","empty","splice","dropEmptyColumns","getData","_dimensions","rightBottom","colsCount","rowsCount","Array","rowIndex","columnIndex","rowMap","transformData","readXlsx","getXmlFileContent","sheetId","getSheetId","createSheetNotFoundError","_sheet","_sheet2","sheetsList","join","InvalidError","_Error","_inherits","_super","_createSuper","reason","_this","_classCallCheck","call","_createClass","_wrapNativeSuper","NumberType","stringifiedValue","isFinite","StringType","BooleanType","DateType","date","DEFAULT_OPTIONS","schemaPropertyValueForMissingColumn","schemaPropertyValueForUndefinedCellValue","schemaPropertyValueForNullCellValue","schemaPropertyShouldSkipRequiredValidationForMissingColumn","getEmptyObjectValue","getEmptyArrayValue","isColumnOriented","arrayValueSeparator","schema","_options","validateSchema","transpose","columns","errors","result","read","error","rows","object","isEmptyObject","createError","errorMessage","pendingRequiredChecks","_loop","cellValue","schemaEntry","isNestedSchema","_typeof","isArray","propertyPath","prop","isMissingColumn","array","parseArray","_value","parseValue","isEmpty","every","isEmptyValue","required","_i2","_pendingRequiredCheck","_pendingRequiredCheck2","skipRequiredValidation","isRequired","parse","parseCustomValue","parseValueOfType","oneOf","validate","message","Boolean","getBlock","endCharacter","startIndex","substring","_character","block","blocks","index","_getBlock","_getBlock2","_i3","_Object$keys2","entry","convertToJsonLegacyBehavior","includeNullValues","ignoreEmptyRows","defaultConversionOptions","_ref3","convertToJson","convertToJsonSpreadsheetBehavior","schemaPropertyValueForEmptyCell","restOptions","_objectWithoutProperties","_excluded","convertMapToSchema","readXlsxFileContents","entries","readXlsxFile","file","readSheetNames","kaf_global","fac_global","backgroundColor","buttonStyle11","buttonStyle12","buttonStyle13","buttonStyle14","computed","currentUser","this","$store","state","auth","user","mounted","updateButtonColor1","updateButtonColor2","updateButtonColor3","updateButtonColor4","updateButtonColor5","updateButtonColor6","updateButtonColor7","updateButtonColor81","updateButtonColor82","updateButtonColor9","updateButtonColor10","updateButtonColor11","updateButtonColor12","updateButtonColor13","updateButtonColor14","$router","methods","event","video","$refs","load","display","play","async","pause","pauseError","console","playError","last_hope","str_gruz","flag2","flag21","flag3","flag4","flag5","flag4n","flag6","flag5n","flag6n","flag7","flag8","flag9","UserService","insertTempTeachNagr","log","for_dis","sheet_names","sheet_name","xlsxfile","rowsS","alert","target","flagSostav","flagRaspr","flagFac","flagDep","flagVO","flagPractice","flagShed","flagOfoVO","flagKursVKR","flagTitul","sheetNames","rowsG","arr_kaf","arr_fac","dolj_id","deg_id","status_id","insFlag1","insFlag2","insFlag3","name1","name2","name3","dolj","deg","status","temp","k","mainStr","startStr","clearTempSostav","clearTempTeachGruz","rows1","p1","resolve1","p2","resolve2","p3","resolve3","pf","resolveF","insertTempSostav","rows3","clearTempFac","facStr","pfl1","resolvefl1","insertTempFac","rows2","insertQueries","fio","sem1","sem2","lec","sem","lab","practice","VKR","GEK","query","userService","insertTempRaspr","clearTempItogVO","rowsVO","itogVO_str","VOyears","toFixed","insertTempItogVO","toString","includes","dis_name","code_napr","kurs","kont_budg","kont_dog","number_of_streams","number_of_groups","number_of_subgroups","lek_budj","lek_dogovor","p_budg","p_dogovor","lab_budj","lab_dogovor","cons_ex","zachet_h","ex_speak","ex_wr","insertTempOfoVO","currentYears","match","currentType","currentCourse","currentForm","currentTeachFio","currentNapr","words","isEmptyRow","napr","stFio","insertQuery","insertTempKursVKR","fac","dep","profile","kval","srok","proffesions","profession","insertTempProffesions","rowsP","ParsePractice","rowsShed","ParseShedLec","ParseShedPrac","rowsl1","clearTempDep","depStr","pd","resolveD","insertTempDep","navExcManage12","navExcManage13","navExcManage14","navExcManage15","response","getTempTeachGruzCount","count","getTempSostavCount","getTempFacCount","getTempDepCount","getTempItogVOcount","getTempRasprСount","getTempOFOVOcount","getForShedLecOcount","getForShedPraccount","getTempKurscount","getTempPlanSvodcount","getTempKompetcount","getTempGruzKurscount","getTempKursDiagcount","getPracticecount","detRowP","prof","Pyears","pstr","falgParseP","parts","parsePDog","insertTempPractice","shedLecStr","resolveShed","insertForShedLec","shedPracStr","insertForShedPrac","__exports__","render"],"sourceRoot":""}