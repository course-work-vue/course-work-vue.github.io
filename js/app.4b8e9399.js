(function(){"use strict";var e={2248:function(e,n,t){var r=t(5130),s=t(6768);const a={id:"app"},o={class:"mycontainer"};function d(e,n,t,r,d,u){const i=(0,s.g2)("Menu"),c=(0,s.g2)("router-view");return(0,s.uX)(),(0,s.CE)("div",a,[(0,s.bF)(i),(0,s.Lk)("div",o,[(0,s.bF)(c)])])}t(4114);var u=t(4232);function i(e,n,t,a,o,d){const i=(0,s.g2)("MenuItem");return(0,s.uX)(),(0,s.CE)("div",{class:(0,u.C4)(["menu",{"small-menu":e.smallMenu}])},[((0,s.uX)(!0),(0,s.CE)(s.FK,null,(0,s.pI)(e.menuTree,((n,t)=>((0,s.uX)(),(0,s.Wv)(i,{key:t,data:n.children,label:n.label,link:n.link,icon:n.icon,depth:0,smallMenu:e.smallMenu,onClick:(0,r.D$)((n=>t===e.menuTree.length-1?d.logOut():null),["prevent"]),class:(0,u.C4)({"bottom-fixed":t===e.menuTree.length-1})},null,8,["data","label","link","icon","smallMenu","onClick","class"])))),128))],2)}const c={class:"left"},p={key:0,class:"material-icons-outlined"},l={key:0,class:"right"};function m(e,n,t,a,o,d){const i=(0,s.g2)("router-link"),m=(0,s.g2)("menu-item",!0);return(0,s.uX)(),(0,s.CE)("div",{class:(0,u.C4)(["menu-item",{opened:e.expanded}])},[(0,s.Lk)("div",{class:"label",onClick:n[0]||(n[0]=e=>d.toggleMenu()),style:(0,u.Tr)({paddingLeft:20*t.depth+20+"px"})},[(0,s.Lk)("div",c,[(0,s.bF)(i,{to:t.link,class:"nav-link"},{default:(0,s.k6)((()=>[(0,s.Lk)("span",null,[t.icon?((0,s.uX)(),(0,s.CE)("i",p,(0,u.v_)(t.icon),1)):(0,s.Q3)("",!0)]),d.showLabel?((0,s.uX)(),(0,s.CE)("span",{key:0,class:(0,u.C4)({test:!t.smallMenu})},(0,u.v_)(t.label),3)):(0,s.Q3)("",!0)])),_:1},8,["to"])]),t.data?((0,s.uX)(),(0,s.CE)("div",l,[(0,s.Lk)("i",{class:(0,u.C4)(["expand material-icons-outlined",{opened:e.expanded}])},"expand_more",2)])):(0,s.Q3)("",!0)],4),(0,s.bo)((0,s.Lk)("div",{class:(0,u.C4)([{"small-menu":t.smallMenu},"items-container"]),style:(0,u.Tr)({height:e.containerHeight}),ref:"container"},[((0,s.uX)(!0),(0,s.CE)(s.FK,null,(0,s.pI)(t.data,((n,r)=>((0,s.uX)(),(0,s.Wv)(m,{class:(0,u.C4)({opened:e.showChildren}),key:r,data:n.children,label:n.label,link:n.link,icon:n.icon,depth:t.depth+1,smallMenu:t.smallMenu},null,8,["class","data","label","link","icon","depth","smallMenu"])))),128))],6),[[r.aG,e.showChildren]])],2)}var h={name:"menu-item",data:()=>({showChildren:!1,expanded:!1,containerHeight:0}),props:{data:{type:Array},label:{type:String},link:{type:String},icon:{type:String},depth:{type:Number},smallMenu:{type:Boolean}},computed:{showLabel(){return!this.smallMenu||this.depth>0}},methods:{toggleMenu(){this.expanded=!this.expanded,this.showChildren?(this.containerHeight=this.$refs["container"].scrollHeight+"px",this.$refs["container"].style.overflow="hidden",setTimeout((()=>{this.containerHeight="0px"}),10),setTimeout((()=>{this.showChildren=!1}),300)):(this.showChildren=!0,this.$nextTick((()=>{this.containerHeight=this.$refs["container"].scrollHeight+"px",setTimeout((()=>{this.containerHeight="fit-content",-1!=navigator.userAgent.indexOf("Firefox")&&(this.containerHeight="-moz-max-content"),this.$refs["container"].style.overflow="visible"}),300)})))}}},_=t(1241);const g=(0,_.A)(h,[["render",m],["__scopeId","data-v-3e60ff69"]]);var A=g,f={name:"recursive-menu",data:()=>({smallMenu:!1,menuTree:[{label:"Домой",link:"/home",icon:"home"},{label:"Студенты",link:"",icon:"school",children:[{label:"Список студентов",link:"/students"},{label:"Направления",link:"/directions"},{label:"Профили",link:"/profiles"},{label:"Группы",link:"/groups"},{label:"Курсы",link:"/courses"},{label:"Курсовые",link:"/courseworks"}]},{label:"Слушатели",link:"",icon:"contact_page",children:[{label:"Список слушателей",link:"/listeners"},{label:"Список законных представителей",link:"/payers"},{label:"Договора",link:"/contracts"},{label:"Программы",link:"/programs"},{label:"График платежей",link:"/payments"}]},{label:"Расписание",link:"",icon:"calendar_month",children:[{label:"Аудитории",link:"/audits"},{label:"Нагрузка",link:"/ScheduleLoads"}]},{label:"Журнал",link:"/teachers",icon:"school"},{label:"Настройки",link:"/profile",icon:"settings"},{label:"Выйти",link:"",icon:"logout"}]}),components:{MenuItem:A},methods:{logOut(){this.$store.dispatch("auth/logout"),this.$router.push("/login")}}};const b=(0,_.A)(f,[["render",i],["__scopeId","data-v-7276f3f0"]]);var E=b,y={created(){this.$store.dispatch("auth/checkTokenExpiration")},components:{Menu:E},computed:{currentUser(){return this.$store.state.auth.user}},methods:{logOut(){this.$store.dispatch("auth/logout"),this.$router.push("/login")}}};const T=(0,_.A)(y,[["render",d]]);var S=T,O=t(1387);const I={class:"container"},C={class:"jumbotron"};function N(e,n,t,r,a,o){return(0,s.uX)(),(0,s.CE)("div",I,[(0,s.Lk)("header",C,[(0,s.Lk)("h3",null,(0,u.v_)(a.content),1)])])}var $=t(619),R={name:"Home",data(){return{content:""}},mounted(){$.A.getPublicContent().then((e=>{this.content=e.data}),(e=>{this.content=e.response&&e.response.data&&e.response.data.message||e.message||e.toString()}))}};const k=(0,_.A)(R,[["render",N]]);var L=k;const M=e=>((0,s.Qi)("data-v-7e43d1f8"),e=e(),(0,s.jt)(),e),w={class:"col-md-12 list"},v={class:"col-8 mx-auto"},q=M((()=>(0,s.Lk)("img",{id:"profile-img",src:"//ssl.gstatic.com/accounts/ui/avatar_2x.png",class:"profile-img-card"},null,-1))),D={class:"form-group"},F=M((()=>(0,s.Lk)("label",{for:"username"},"Логин:",-1))),x={class:"form-group mb-3"},Y=M((()=>(0,s.Lk)("label",{for:"password"},"Пароль:",-1))),j={class:"form-group"},P=["disabled"],B={class:"spinner-border spinner-border-sm"},U=M((()=>(0,s.Lk)("span",null,"Войти",-1))),W={class:"form-group"},V={key:0,class:"alert alert-danger",role:"alert"};function H(e,n,t,a,o,d){const i=(0,s.g2)("Field"),c=(0,s.g2)("ErrorMessage"),p=(0,s.g2)("Form");return(0,s.uX)(),(0,s.CE)("div",w,[(0,s.Lk)("div",v,[q,(0,s.bF)(p,{onSubmit:d.handleLogin,"validation-schema":o.schema},{default:(0,s.k6)((()=>[(0,s.Lk)("div",D,[F,(0,s.bF)(i,{name:"username",type:"text",class:"form-control"}),(0,s.bF)(c,{name:"username",class:"error-feedback"})]),(0,s.Lk)("div",x,[Y,(0,s.bF)(i,{name:"password",type:"password",class:"form-control"}),(0,s.bF)(c,{name:"password",class:"error-feedback"})]),(0,s.Lk)("div",j,[(0,s.Lk)("button",{class:"btn btn-primary btn-block",disabled:o.loading},[(0,s.bo)((0,s.Lk)("span",B,null,512),[[r.aG,o.loading]]),U],8,P)]),(0,s.Lk)("div",W,[o.message?((0,s.uX)(),(0,s.CE)("div",V,(0,u.v_)(o.message),1)):(0,s.Q3)("",!0)])])),_:1},8,["onSubmit","validation-schema"])])])}var K=t(482),J=t(9041),G={name:"Login",components:{Form:K.lV,Field:K.D0,ErrorMessage:K.Kw},data(){const e=J.Ik().shape({username:J.Yj().required("Требуется логин!"),password:J.Yj().required("Требуется пароль!")});return{loading:!1,message:"",schema:e}},computed:{loggedIn(){return this.$store.state.auth.status.loggedIn}},created(){this.loggedIn&&this.$router.push("/profile")},methods:{handleLogin(e){this.loading=!0,this.$store.dispatch("auth/login",e).then((()=>{this.$router.push("/home")}),(e=>{this.loading=!1,this.message=e.response&&e.response.data&&e.response.data.message||e.message||e.toString()}))}}};const z=(0,_.A)(G,[["render",H],["__scopeId","data-v-7e43d1f8"]]);var X=z;const Q={class:"col-md-12"},Z={class:"card card-container"},ee=(0,s.Lk)("img",{id:"profile-img",src:"//ssl.gstatic.com/accounts/ui/avatar_2x.png",class:"profile-img-card"},null,-1),ne={key:0},te={class:"form-group"},re=(0,s.Lk)("label",{for:"username"},"Username",-1),se={class:"form-group"},ae=(0,s.Lk)("label",{for:"email"},"Email",-1),oe={class:"form-group"},de=(0,s.Lk)("label",{for:"password"},"Password",-1),ue={class:"form-group"},ie=["disabled"],ce={class:"spinner-border spinner-border-sm"};function pe(e,n,t,a,o,d){const i=(0,s.g2)("Field"),c=(0,s.g2)("ErrorMessage"),p=(0,s.g2)("Form");return(0,s.uX)(),(0,s.CE)("div",Q,[(0,s.Lk)("div",Z,[ee,(0,s.bF)(p,{onSubmit:d.handleRegister,"validation-schema":o.schema},{default:(0,s.k6)((()=>[o.successful?(0,s.Q3)("",!0):((0,s.uX)(),(0,s.CE)("div",ne,[(0,s.Lk)("div",te,[re,(0,s.bF)(i,{name:"username",type:"text",class:"form-control"}),(0,s.bF)(c,{name:"username",class:"error-feedback"})]),(0,s.Lk)("div",se,[ae,(0,s.bF)(i,{name:"email",type:"email",class:"form-control"}),(0,s.bF)(c,{name:"email",class:"error-feedback"})]),(0,s.Lk)("div",oe,[de,(0,s.bF)(i,{name:"password",type:"password",class:"form-control"}),(0,s.bF)(c,{name:"password",class:"error-feedback"})]),(0,s.Lk)("div",ue,[(0,s.Lk)("button",{class:"btn btn-primary btn-block",disabled:o.loading},[(0,s.bo)((0,s.Lk)("span",ce,null,512),[[r.aG,o.loading]]),(0,s.eW)(" Sign Up ")],8,ie)])]))])),_:1},8,["onSubmit","validation-schema"]),o.message?((0,s.uX)(),(0,s.CE)("div",{key:0,class:(0,u.C4)(["alert",o.successful?"alert-success":"alert-danger"])},(0,u.v_)(o.message),3)):(0,s.Q3)("",!0)])])}var le={name:"Register",components:{Form:K.lV,Field:K.D0,ErrorMessage:K.Kw},data(){const e=J.Ik().shape({username:J.Yj().required("Username is required!").min(3,"Must be at least 3 characters!").max(20,"Must be maximum 20 characters!"),email:J.Yj().required("Email is required!").email("Email is invalid!").max(50,"Must be maximum 50 characters!"),password:J.Yj().required("Password is required!").min(6,"Must be at least 6 characters!").max(40,"Must be maximum 40 characters!")});return{successful:!1,loading:!1,message:"",schema:e}},computed:{loggedIn(){return this.$store.state.auth.status.loggedIn}},mounted(){this.loggedIn&&this.$router.push("/home")},methods:{handleRegister(e){this.message="",this.successful=!1,this.loading=!0,this.$store.dispatch("auth/register",e).then((e=>{this.message=e.message,this.successful=!0,this.loading=!1}),(e=>{this.message=e.response&&e.response.data&&e.response.data.message||e.message||e.toString(),this.successful=!1,this.loading=!1}))}}};const me=(0,_.A)(le,[["render",pe]]);var he=me,_e=t(4304),ge=t(8355);const Ae="http://195.93.252.168:5050/api/Auth/";class fe{login(e){return ge.A.post(Ae+"login",{username:e.username,password:e.password}).then((e=>(e.data.accessToken&&localStorage.setItem("user",JSON.stringify(e.data)),e.data)))}logout(){localStorage.removeItem("user")}register(e){return ge.A.post(Ae+"register",{username:e.username,password:e.password})}}var be=new fe;const Ee=()=>t.e(4730).then(t.bind(t,4730)),ye=()=>t.e(4954).then(t.bind(t,4954)),Te=()=>Promise.all([t.e(4112),t.e(4906)]).then(t.bind(t,4906)),Se=()=>t.e(674).then(t.bind(t,674)),Oe=()=>t.e(2672).then(t.bind(t,2672)),Ie=()=>t.e(9538).then(t.bind(t,9538)),Ce=()=>Promise.all([t.e(4112),t.e(3399)]).then(t.bind(t,3399)),Ne=()=>t.e(5484).then(t.bind(t,5484)),$e=()=>t.e(6475).then(t.bind(t,6475)),Re=()=>Promise.all([t.e(4112),t.e(3763)]).then(t.bind(t,3763)),ke=()=>t.e(7301).then(t.bind(t,7301)),Le=()=>t.e(8121).then(t.bind(t,8121)),Me=()=>Promise.all([t.e(4112),t.e(8863)]).then(t.bind(t,8863)),we=()=>t.e(6951).then(t.bind(t,6951)),ve=()=>t.e(9650).then(t.bind(t,9650)),qe=()=>Promise.all([t.e(4112),t.e(5026)]).then(t.bind(t,5026)),De=()=>t.e(457).then(t.bind(t,457)),Fe=()=>t.e(7126).then(t.bind(t,7126)),xe=()=>Promise.all([t.e(4112),t.e(839)]).then(t.bind(t,839)),Ye=()=>t.e(385).then(t.bind(t,385)),je=()=>t.e(3605).then(t.bind(t,3605)),Pe=()=>Promise.all([t.e(4112),t.e(898)]).then(t.bind(t,898)),Be=()=>t.e(8943).then(t.bind(t,8943)),Ue=()=>t.e(842).then(t.bind(t,842)),We=()=>t.e(219).then(t.bind(t,219)),Ve=()=>t.e(4072).then(t.bind(t,4072)),He=()=>Promise.all([t.e(4112),t.e(3902)]).then(t.bind(t,3902)),Ke=()=>t.e(3700).then(t.bind(t,3700)),Je=()=>Promise.all([t.e(4112),t.e(9286)]).then(t.bind(t,6905)),Ge=()=>t.e(7471).then(t.bind(t,7471)),ze=()=>t.e(1503).then(t.bind(t,1503)),Xe=()=>t.e(2656).then(t.bind(t,2656)),Qe=()=>Promise.all([t.e(4112),t.e(5635)]).then(t.bind(t,5635)),Ze=()=>t.e(6015).then(t.bind(t,6015)),en=()=>t.e(2590).then(t.bind(t,2590)),nn=()=>Promise.all([t.e(4112),t.e(8616)]).then(t.bind(t,8616)),tn=()=>t.e(4121).then(t.bind(t,4121)),rn=()=>Promise.all([t.e(4112),t.e(5265)]).then(t.bind(t,5265)),sn=()=>t.e(6974).then(t.bind(t,6974)),an=()=>t.e(2858).then(t.bind(t,2858)),on=()=>t.e(6798).then(t.bind(t,6798)),dn=()=>Promise.all([t.e(4112),t.e(6097)]).then(t.bind(t,6097)),un=()=>Promise.all([t.e(4112),t.e(6374)]).then(t.bind(t,6374)),cn=()=>Promise.all([t.e(4112),t.e(4745)]).then(t.bind(t,4745)),pn=()=>t.e(8938).then(t.bind(t,8938)),ln=()=>t.e(7589).then(t.bind(t,7589)),mn=()=>Promise.all([t.e(4112),t.e(1228)]).then(t.bind(t,1228)),hn=()=>t.e(7196).then(t.bind(t,7196)),_n=()=>t.e(6206).then(t.bind(t,6206)),gn=()=>Promise.all([t.e(4112),t.e(7508)]).then(t.bind(t,7508)),An=()=>t.e(306).then(t.bind(t,306)),fn=()=>Promise.all([t.e(4112),t.e(2967)]).then(t.bind(t,5348)),bn=()=>Promise.all([t.e(4112),t.e(7884)]).then(t.bind(t,7884)),En=()=>Promise.all([t.e(4112),t.e(3477)]).then(t.bind(t,3477)),yn=()=>Promise.all([t.e(4112),t.e(8046)]).then(t.bind(t,8046)),Tn=()=>Promise.all([t.e(4112),t.e(2448)]).then(t.bind(t,2448)),Sn=()=>Promise.all([t.e(4112),t.e(949)]).then(t.bind(t,949)),On=()=>Promise.all([t.e(4112),t.e(1174)]).then(t.bind(t,1174)),In=()=>Promise.all([t.e(4112),t.e(4331)]).then(t.bind(t,4331)),Cn=()=>Promise.all([t.e(4112),t.e(911)]).then(t.bind(t,911)),Nn=()=>Promise.all([t.e(4112),t.e(6818)]).then(t.bind(t,6818)),$n=()=>Promise.all([t.e(4112),t.e(5213)]).then(t.bind(t,5213)),Rn=()=>Promise.all([t.e(4112),t.e(9203)]).then(t.bind(t,9203)),kn=()=>Promise.all([t.e(4112),t.e(7842)]).then(t.bind(t,7842)),Ln=[{path:"/",name:"home",component:L},{path:"/home",component:L},{path:"/login",component:X},{path:"/register",component:he},{path:"/profile",name:"profile",component:Ee},{path:"/xlparse",name:"xlparse",component:An},{path:"/ManageExcel",name:"ManageExcel",component:fn},{path:"/ManageExcel2",name:"ManageExcel2",component:bn},{path:"/ManageExcel3",name:"ManageExcel3",component:En},{path:"/ManageExcel4",name:"ManageExcel4",component:yn},{path:"/ManageExcel5",name:"ManageExcel5",component:Tn},{path:"/ManageExcel6",name:"ManageExcel6",component:Sn},{path:"/ManageExcel7",name:"ManageExcel7",component:On},{path:"/ManageExcel8",name:"ManageExcel8",component:In},{path:"/ManageExcel9",name:"ManageExcel9",component:Cn},{path:"/ManageExcel10",name:"ManageExcel10",component:Nn},{path:"/ManageExcel11",name:"ManageExcel11",component:$n},{path:"/ManageExcel12",name:"ManageExcel12",component:Rn},{path:"/ManageExcel13",name:"ManageExcel13",component:kn},{path:"/students",component:Te},{path:"/students/:studentId",component:Se},{path:"/rights/:table",component:Ie},{path:"/directions",component:Ce},{path:"/directions/:directionId",component:$e},{path:"/AddDirection",component:Ne},{path:"/profiles",component:Re},{path:"/profiles/:profileId",component:Le},{path:"/AddProfile",component:ke},{path:"/groups",component:Me},{path:"/groups/:groupId",component:ve},{path:"/AddGroup",component:we},{path:"/courses",component:nn},{path:"/courses/:courseID",component:tn},{path:"/AddCourse",component:en},{path:"/listeners",component:qe},{path:"/listeners/:listenerId",component:De},{path:"/AddListener",component:Fe},{path:"/payers",component:xe},{path:"/payers/:payerId",component:Ye},{path:"/Addpayer",component:je},{path:"/contracts",component:Pe},{path:"/contracts/:contractId",component:Be},{path:"/AddContract",component:Ue},{path:"/ScheduleLoads",component:We},{path:"/addcw",component:Ve},{path:"/courseworks",component:He},{path:"/courseworks/:CwId",component:Ke},{path:"/programs",component:Je},{path:"/programs/:programId",component:ze},{path:"/AddProgram",component:Ge},{path:"/payments",component:Qe},{path:"/payments/:paymentID",component:Ze},{path:"/AddPayment",component:Xe},{path:"/audits",component:rn},{path:"/audits/:scheduleId",component:sn},{path:"/AddAudit",component:an},{path:"/teachers",component:cn},{path:"/teachers/:teacherId",component:ln},{path:"/AddTeacher",component:pn},{path:"/tegrsus",component:mn},{path:"/tegrsus/:tegrsuId",component:_n},{path:"/AddTegrsu",component:hn},{path:"/journals",component:gn},{path:"/lgroups",component:dn},{path:"/addlgroup",component:on},{path:"/lgroups/:groupId",component:un},{path:"/user",name:"user",component:ye},{path:"/AddStudent",component:Oe},{path:"/AddStudent/:groupName",component:Oe}],Mn=(0,O.aE)({history:(0,O.Bt)(),routes:Ln});Mn.beforeEach(((e,n,t)=>{const r=["/login","/register","/home"],s=!r.includes(e.path),a=localStorage.getItem("user");if(s&&!a)t("/login");else if(a){const e=JSON.parse(a).accessToken;try{const n=(0,_e.A)(e),r=Date.now()/1e3;n.exp<r?(be.logout(),t("/login")):t()}catch(o){t()}}else t()}));var wn=Mn,vn=t(782);const qn=JSON.parse(localStorage.getItem("user")),Dn=qn?{status:{loggedIn:!0},user:qn}:{status:{loggedIn:!1},user:null},Fn={namespaced:!0,state:Dn,actions:{login({commit:e},n){return be.login(n).then((n=>(e("loginSuccess",n),Promise.resolve(n))),(n=>(e("loginFailure"),Promise.reject(n))))},logout({commit:e}){be.logout(),e("logout")},register({commit:e},n){return be.register(n).then((n=>(e("registerSuccess"),Promise.resolve(n.data))),(n=>(e("registerFailure"),Promise.reject(n))))},checkTokenExpiration({commit:e,state:n}){const t=n.user?n.user.accessToken:null;if(t)try{const n=(0,_e.A)(t),r=Date.now()/1e3;n.exp<r&&(be.logout(),e("logout"))}catch(r){}}},mutations:{loginSuccess(e,n){e.status.loggedIn=!0,e.user=n},loginFailure(e){e.status.loggedIn=!1,e.user=null},logout(e){e.status.loggedIn=!1,e.user=null},registerSuccess(e){e.status.loggedIn=!1},registerFailure(e){e.status.loggedIn=!1}}},xn=(0,vn.y$)({modules:{auth:Fn}});var Yn=xn,jn=(t(8077),t(8950)),Pn=t(292),Bn=t(2353);jn.Yv.add(Bn.v02,Bn.X46,Bn.nWR,Bn.rhE,Bn.GxD);var Un=t(8704),Wn=t(7411);t(7917);const Vn={};(0,r.Ef)(S).use(wn).use(Yn).use(Wn.Ay,Vn).component("font-awesome-icon",Pn.gc).component("Select2",Un.A).mount("#app")},619:function(e,n,t){t.d(n,{A:function(){return u}});var r=t(8355);function s(){let e=JSON.parse(localStorage.getItem("user"));return e&&e.accessToken?{accept:"*/*","Content-Type":"application/json;charset=UTF-8",Authorization:"Bearer "+e.accessToken}:{}}const a="http://195.93.252.168:5050/api/Query/",o="http://195.93.252.168:5050/api";class d{getPublicContent(){return r.A.get(a+'"SuperHeroes"',{headers:s()})}getAllStudents(){return r.A.get(a+"students",{headers:s()})}deleteStudentById(e){const n=`${o}/Students/${e}`;return r.A.delete(n,{headers:s()})}getAllFormattedStudents(){const e=`${o}/Students`,n=s();return r.A.get(e,{headers:n}).then((e=>{if(0===e.data.length)return[];console.log(e.data);const n=e.data.map((e=>({student_id:e.studentId,full_name:`${e.lastName} ${e.firstName} ${e.patronymic}`,group_name:`${e.group_number}/${e.subgroup||""}`,group_number:e.group.groupNumber,subgroup:e.subgroup,formatted_enrolled_date:new Date(e.enrolled_date).toLocaleDateString("en-CA"),enrollment_order:e.enrollment_order,formatted_date_of_birth:new Date(e.date_of_birth).toLocaleDateString("en-CA"),course:e.course,group_id:e.group_id})));return console.log(n),{data:n}})).catch((e=>{throw console.error("Error fetching formatted students:",e),e}))}getStudentById(e){const n=`${o}/Students/${e}`,t=s();return r.A.get(n,{headers:t}).then((e=>{if(!e.data)return null;const n={student_id:e.data.studentId,first_name:e.data.firstName,last_name:e.data.lastName,patronymic:e.data.patronymic,gender:e.data.gender,passport_series_and_number:e.data.passportSeriesAndNumber,INN:e.data.inn,SNILS:e.data.snils,place_of_birth:e.data.placeOfBirth,email:e.data.email,student_login:e.data.studentLogin,enrollment_order:e.data.enrollmentOrder,group_id:e.data.groupId,subgroup:e.data.subgroup,zachetka_number:e.data.zachetkaNumber,phone_number:e.data.phoneNumber,phone_number_rod:e.data.phoneNumberRod,date_of_birth:new Date(e.data.dateOfBirth).toLocaleDateString("en-CA"),enrolled_date:new Date(e.data.enrolledDate).toLocaleDateString("en-CA"),isBudget:e.data.isBudget};return console.log(n),{data:n}})).catch((e=>{throw console.error("Error fetching student by ID:",e),e}))}updateStudentById(e,n,t,a,d,u,i,c,p,l,m,h,_,g,A,f,b,E,y,T){const S=`${o}/Students/${e}`,O={studentId:e,firstName:n,lastName:t,patronymic:a,gender:d,dateOfBirth:u,passportSeriesAndNumber:i,INN:c,SNILS:p,placeOfBirth:l,email:m,studentLogin:h,enrollmentOrder:_,enrolledDate:g,groupId:A,subgroup:f,zachetkaNumber:b,phoneNumber:E,phoneNumberRod:y,isBudget:Boolean(T)};return r.A.put(S,O,{headers:s()})}addStudent(e,n,t,a,d,u,i,c,p,l,m,h,_,g,A,f,b,E){const y=`${o}/Students`,T={lastName:e,firstName:n,patronymic:t,gender:a,dateOfBirth:d,passportSeriesAndNumber:u,INN:i,SNILS:c,placeOfBirth:p,email:l,studentLogin:m,enrollmentOrder:h,enrolledDate:_,groupId:g,subgroup:A,zachetkaNumber:E,phoneNumber:f,phoneNumberRod:b};return r.A.post(y,T,{headers:s()})}getStudentsAsIdText(){const e={query:"SELECT student_id AS id, \n      CONCAT_WS(' ',last_name, first_name,patronymic) AS text\n      FROM \"students\" ORDER BY \n      text ASC;;"};return r.A.post(a,e,{headers:s()})}getDepartamentsAsIdText(){const e={query:'SELECT dep_id AS id, \n      dep_name AS text\n      FROM "departaments" ORDER BY \n      text ASC;;'};return r.A.post(a,e,{headers:s()})}getGroupsAsIdText(){const e={query:'SELECT group_id AS id, group_number AS text\n      FROM "groups" ORDER BY \n      text ASC;'};return r.A.post(a,e,{headers:s()})}getGroupsAsKOSTIL(){const e=`${o}/Group`,n=s();return r.A.get(e,{headers:n}).then((e=>{if(0===e.data.length)return[];console.log(e.data);const n=e.data.map((e=>({id:e.groupNumber,text:e.groupNumber})));return console.log(n),{data:n}})).catch((e=>{throw console.error("Error fetching formatted groups:",e),e}))}getProgramsAsIdText(){const e={query:'SELECT id, program_name AS text\n      FROM "programs" ORDER BY \n      text ASC;'};return r.A.post(a,e,{headers:s()})}getPermissionByTable(e){const n={query:`SELECT p.*, r."RoleName"\n      FROM "Permissions" AS p\n      INNER JOIN "Roles" AS r ON p."RoleId" = r."RoleId"\n      WHERE p."TableName" = '${e}';`};return r.A.post(a,n,{headers:s()})}deleteDirectionById(e){const n=`${o}/Direction/${e}`;return r.A.delete(n,{headers:s()})}getAllDirections(){let e=r.A.get(o+"/Direction",{headers:s()});return e}getDirectionById(e){const n=`${o}/Direction/${e}`;return r.A.get(n,{headers:s()})}addDirection(e,n,t=!0){const a={dirName:e,dirCode:n,magister:t};return r.A.post(`${o}/Direction`,a,{headers:s()}).then((e=>e.data)).catch((e=>{throw console.error("Error adding direction:",e),e}))}updateDirectionById(e,n,t){const o={query:`"dir_name" = '${n}',\n      "dir_code" = '${t}'\n  WHERE\n      "dir_id" = '${e}';`};return r.A.put(a+"directions",o,{headers:s()})}getAllTeachGruz(){let e=r.A.get(o+"/TeachGruz",{headers:s()});return e}getAllSubjects(){return r.A.get(o+"/Subject",{headers:s()})}getSubjectById(e){const n={query:`SELECT * from subjects where \n      subject_id='${e}';`};return r.A.post(a,n,{headers:s()})}addSubject(e,n){const t={query:`INSERT INTO "subjects" (\n        "subject_id",\n        "subject_name"\n    ) VALUES (\n        '${e}',\n        '${n}'\n    );`};return r.A.post(a,t,{headers:s()})}updateSubjectById(e,n){const t={query:`"subject_name" = '${n}',\n  WHERE\n      "subject_id" = '${e}';`};return r.A.put(a+"subjects",t,{headers:s()})}getAllTeachers(){return r.A.get(o+"/Teacher",{headers:s()})}getTeachersForSubject(e){const n={query:`SELECT \n      t.teacher_id, \n      t.first_name, \n      t.last_name, \n      t.patronymic \n    FROM \n      "teachers" t \n    JOIN \n      "employment" e \n    ON \n      t.teacher_id = e.teacher_id \n    WHERE \n      e.subject_id = '${e}';`};return r.A.post(a,n,{headers:s()})}getSubjectsForTeacher(e){const n={query:`SELECT \n        g.group_number, \n        s.subject_name, \n        t.last_name \n      FROM \n        workload as w \n      JOIN \n        groups as g \n      ON \n        w.group_id = g.group_id \n      JOIN \n        subjects as s \n      ON \n        w.subject_id = s.subject_id \n      JOIN \n        teachers as t \n      ON \n        t.teacher_id = w.teacher_id \n      WHERE \n        w.teacher_id = '${e}';`};return r.A.post(a,n,{headers:s()})}getTeacherById(e){const n={query:`SELECT * from teachers where \n      teacher_id='${e}';`};return r.A.post(a,n,{headers:s()})}addTeacher(e,n,t,o){const d={query:`INSERT INTO "teachers" (\n        "teacher_id",\n        "first_name"\n        "last_name"\n        "patronymic"\n    ) VALUES (\n        '${e}',\n        '${n}',\n        '${t}',\n        '${o}'\n    );`};return r.A.post(a,d,{headers:s()})}updateTeacherById(e,n,t,o){const d={query:`"first_name" = '${n}',\n      "last_name" = '${t}',\n      "patronymic" = '${o}'\n  WHERE\n      "teacher_id" = '${e}';`};return r.A.put(a+"teachers",d,{headers:s()})}getAllEmployments(){const e={query:'SELECT\n    e.emp_id,\n    e.teacher_id,\n    t.first_name,\n    t.last_name,\n    t.patronymic,\n    e.subject_id,\n    s.subject_name   \n  FROM \n    "employment" e\n  JOIN\n    "teachers" t\n  ON\n    t.teacher_id = e.teacher_id\n  JOIN\n    "subjects" s\n  ON\n    s.subject_id = e.subject_id  \n    ;'};return r.A.post(a,e,{headers:s()})}getEmploymentById(e){const n={query:`SELECT * from employment where \n    emp_id='${e}';`};return r.A.post(a,n,{headers:s()})}addEmployment(e,n,t){const o={query:`INSERT INTO "employment" (\n      "emp_id",\n      "teacher_id"\n      "subject_id"\n  ) VALUES (\n      '${e}',\n      '${n}',\n      '${t}'\n  );`};return r.A.post(a,o,{headers:s()})}updateEmploymentById(e,n,t){const o={query:`"teacher_id" = '${n}',\n    "subject_id" = '${t}'\nWHERE\n    "emp_id" = '${e}';`};return r.A.put(a+"teachers",o,{headers:s()})}getAllWorkloads(){return r.A.get(o+"/Workload",{headers:s()})}getWorkload(e){const n={query:`SELECT * FROM workload\n    WHERE\n     "group_id" = '${e}'\n    `};return r.A.post(a,n,{headers:s()})}editWorkload(e,n){const t={query:`UPDATE "workload"\n    SET\n      "teacher_id" = '${n}'\n    WHERE\n      "wl_id" = '${e}'\n    ;`};return r.A.post(a,t,{headers:s()})}addWorkload(e,n,t){const o={query:`INSERT INTO "workload" (\n      "group_id",\n      "subject_id",\n      "teacher_id"\n  ) VALUES (\n      '${e}',\n      '${n}',\n      '${t}'\n  );`};return r.A.post(a,o,{headers:s()})}deleteProfileById(e){const n=`${o}/Profile/${e}`;return r.A.delete(n,{headers:s()})}getAllProfiles(){const e={query:'SELECT\n      p.prof_id,\n      p.prof_name,\n      d.dir_id,\n      d.dir_name,\n      d.dir_code\n  FROM\n      "profiles" p\n  JOIN\n      "directions" d ON p.prof_dir_id = d.dir_id\n      ORDER BY \n      p.prof_name ASC;\n  '};return r.A.post(a,e,{headers:s()})}getProfileById(e){const n={query:`SELECT * from profiles where \n      prof_id='${e}';`};return r.A.post(a,n,{headers:s()})}addProfile(e,n){const t={profDirId:e,profName:n};return r.A.post(`${o}/Profile`,t,{headers:s()}).then((e=>e.data)).catch((e=>{throw console.error("Error adding profile:",e),e}))}updateProfileById(e,n,t){const a={profId:e,profDirId:n,profName:t};return r.A.put(`${o}/Profile/${e}`,a,{headers:s()}).then((e=>e.data)).catch((e=>{throw console.error("Error updating profile:",e),e}))}getDirectionsAsIdText(){const e={query:'SELECT dir_id AS id, dir_code AS text\n      FROM "directions" ORDER BY \n      text ASC;'};return r.A.post(a,e,{headers:s()})}getProfilesAsIdText(){const e={query:'SELECT prof_id AS id, prof_name AS text\n      FROM "profiles" ORDER BY \n      text ASC;'};return r.A.post(a,e,{headers:s()})}deleteGroupById(e){const n=`${o}/Group/${e}`;return r.A.delete(n,{headers:s()})}getAllGroups(){const e={query:'SELECT\n      g.group_id,\n      g.group_number,\n      g.course,\n      g.magister,\n      p.prof_name,\n      d.dir_name,\n      d.dir_code\n  FROM\n      "groups" AS g\n  JOIN\n      "profiles" AS p\n  ON\n      g.group_prof_id = p.prof_id\n  JOIN\n      "directions" AS d\n  ON\n      g.group_dir_id = d.dir_id  ORDER BY \n      g.group_number ASC;\n  '};return r.A.post(a,e,{headers:s()})}getGroupByDir(e){const n={query:`SELECT\n      g.group_id,\n      g.group_number,\n      p.prof_name,\n      d.dir_name,\n      d.dir_code\n  FROM\n      "groups" AS g\n  JOIN\n      "profiles" AS p\n  ON\n      g.group_prof_id = p.prof_id\n  JOIN\n      "directions" AS d\n  ON\n      g.group_dir_id = d.dir_id \n  WHERE\n      g.group_dir_id = '${e}'    \n      ;\n  `};return r.A.post(a,n,{headers:s()})}getGroupById(e){const n={query:`SELECT * from groups where \n      group_id='${e}';`};return r.A.post(a,n,{headers:s()})}addGroup(e,n,t,a,d){const u={groupDirId:e,groupProfId:n,groupNumber:t,course:a,magister:Boolean(d)};return r.A.post(`${o}/Group`,u,{headers:s()}).then((e=>e.data)).catch((e=>{throw console.error("Error adding group:",e),e}))}updateGroupById(e,n,t,a,d,u){const i={groupId:e,groupDirId:n,groupProfId:t,groupNumber:a,course:d,magister:Boolean(u)};return r.A.put(`${o}/Group/${e}`,i,{headers:s()}).then((e=>e.data)).catch((e=>{throw console.error("Error updating group:",e),e}))}deleteLgroupById(e){const n=`${o}/LGroup/${e}`;return r.A.delete(n,{headers:s()})}getAllLgroups(){const e={query:'SELECT\n      *, g.id as lg_id\n  FROM\n      "l_groups" AS g\n      join programs p ON g.group_program_id=p.id;\n  '};return r.A.post(a,e,{headers:s()})}addLgroup(e,n,t,o,d,u,i){let c=`\n    INSERT INTO "l_groups" (\n      "group_number",\n      "group_program_id",\n      "hours",\n      "start_date",\n      "end_date",\n      "people_count"\n  ) VALUES (\n      '${e}',\n      '${n}',\n      '${t}',\n      '${o}',\n      '${d}',\n      '${u}'\n  );\n  `;i.forEach((e=>{c+=`\n      INSERT INTO "l_groups_day" (\n          "day_id",\n          "starttime",\n          "endtime",\n          "l_groups"\n      ) VALUES (\n          '${e.day_id}',\n          '${e.starttime}',\n          '${e.endtime}',\n          currval('l_groups_id_seq')\n      );\n      `}));const p={query:c};return r.A.post(a,p,{headers:s()})}updateLgroupById(e,n,t,o,d,u,i,c,p){let l=`UPDATE l_groups SET\n    "group_number" = '${n}',\n      "group_program_id" = '${t}',\n      "hours" = '${o}',\n      "start_date" = '${d}',\n      "end_date" = '${u}',\n      "people_count" = '${i}'\n  WHERE\n      "id" = '${e}';\n    `;p?(l+=`DELETE FROM l_groups_day WHERE l_groups='${e}';`,c.forEach((n=>{l+=`\n        INSERT INTO "l_groups_day" (\n            "day_id",\n            "starttime",\n            "endtime",\n            "l_groups"\n        ) VALUES (\n            '${n.day_id}',\n            '${n.starttime}',\n            '${n.endtime}',\n            '${e}'\n        );\n        `}))):c.forEach((e=>{l+=`\n      UPDATE "l_groups_day" SET\n          "day_id" ='${e.day_id}',\n          "starttime"='${e.starttime}',\n          "endtime"='${e.endtime}'\n    WHERE\n          "l_groups_days_id"='${e.l_groups_days_id}';\n      `}));const m={query:l};return r.A.post(a,m,{headers:s()})}getLgroupById(e){const n={query:`SELECT *,TO_CHAR(end_date, 'YYYY-MM-DD') AS end_date,TO_CHAR(start_date, 'YYYY-MM-DD') AS start_date from l_groups where \n      id='${e}';`};return r.A.post(a,n,{headers:s()})}getGDaysById(e){const n={query:`SELECT * from \n      l_groups_day where l_groups='${e}'; `};return r.A.post(a,n,{headers:s()})}deleteListenerById(e){const n=`${o}/Listener/${e}`;return r.A.delete(n,{headers:s()})}getAllListeners(){const e={query:"SELECT\n      *,\n      CONCAT(l.lastname, ' ', l.name, ' ', l.surname) AS full_name,\n      l.phone_number,\n      l.email,\n      l.id as list_id\n     \n  FROM\n      \"listeners\" as l\n      LEFT JOIN l_groups as lg ON l.group_id=lg.id;\n\n      ;\n  "};return r.A.post(a,e,{headers:s()})}getAllListenersWithoutGroup(){const e={query:"SELECT\n      *,\n      CONCAT(l.lastname, ' ', l.name, ' ', l.surname) AS full_name, TO_CHAR(start_date , 'DD/MM/YYYY') AS start_date, TO_CHAR(end_date , 'DD/MM/YYYY') AS end_date,\n      l.phone_number,\n      l.email,\n      l.id as list_id\n     \n  FROM\n      \"listeners\" as l\n      JOIN listener_wishes as lw ON l.id=lw.listener_id\n      WHERE l.group_id IS NULL;\n\n      ;\n  "};return r.A.post(a,e,{headers:s()})}getListenerById(e){const n={query:`SELECT *, TO_CHAR(issue_date , 'YYYY-MM-DD') AS issue_date,TO_CHAR(start_date , 'YYYY-MM-DD') AS start_date,TO_CHAR(end_date, 'YYYY-MM-DD') AS end_date from \n      listeners join listener_wishes on listeners.id=listener_wishes.listener_id where \n      id='${e}'; `};return r.A.post(a,n,{headers:s()})}getWishDaysById(e){const n={query:`SELECT * from \n      l_wish_days where listener_id='${e}'; `};return r.A.post(a,n,{headers:s()})}addListener(e,n,t,o,d,u,i,c,p,l,m,h,_,g,A,f,b,E,y){let T=`\n    INSERT INTO "listeners" (\n      "name",\n      "surname",\n      "lastname",\n      group_id,\n      "snils",\n      "passport",\n      "issued_by",\n      "issue_date",\n      "department_code",\n      "registration_address",\n      "phone_number",\n      "email"\n    ) VALUES (\n      '${e}',\n      '${n}',\n      '${t}',\n      ${o},\n      '${d}',\n      '${u}',\n      '${i}',\n      '${c}',\n      '${p}',\n      '${l}',\n      '${m}',\n      '${h}'\n    ) RETURNING id;\n\n    INSERT INTO "listener_wishes" (\n      "people_count",\n      "hours",\n      start_date,\n      "end_date",\n      "listener_id",\n      "wish_description"\n    ) VALUES (\n      '${_}',\n      '${g}',\n      '${A}',\n      '${f}',\n      currval('listeners_id_seq'),\n      '${E}'\n    );\n  `;console.log(y),y.forEach((e=>{T+=`\n    INSERT INTO "l_wish_days" (\n        "day_id",\n        "starttime",\n        "endtime",\n        "listener_id"\n    ) VALUES (\n        '${e.day_id}',\n        '${e.starttime}',\n        '${e.endtime}',\n        currval('listeners_id_seq')\n    );\n    `}));const S={query:T};return r.A.post(a,S,{headers:s()})}addListenerWishes(e,n,t,o,d,u,i){const c={query:`INSERT INTO "listener_wishes" (\n        "people_count",\n        "hours",\n        "lastname",\n        start_date,\n        "end_date",\n        "listener_id",\n        "wish_description",\n        "suitable_days"\n    ) VALUES (\n        '${e}',\n        '${n}',\n        '${t}',\n        '${o}',\n        '${d}',\n        '${u}',\n        ARRAY['${i}']\n    );`};return r.A.post(a,c,{headers:s()})}updateListenerById(e,n,t,o,d,u,i,c,p,l,m,h,_,g,A,f,b,E,y,T){let S=`UPDATE listeners SET\n "name" ='${n}',\n"surname" ='${t}',\n"lastname"=  '${o}',\n"group_id"=  ${d},\n"snils"= '${u}',\n"passport"= '${i}',\n"issued_by"= '${c}',\n"issue_date"='${p}',\n"department_code"='${l}',\n"registration_address"='${m}',\n"phone_number"='${h}',\n"email"='${_}'\nWHERE\n"id" = '${e}';\n\nUPDATE listener_wishes SET\n "people_count" ='${g}',\n"hours" ='${A}',\n"start_date"=  '${f}',\n"end_date"=  '${b}',\n"wish_description"= '${E}'\nWHERE\n"listener_id" = '${e}';\n\n\n`;T?(S+=`DELETE FROM l_wish_days WHERE listener_id='${e}';`,y.forEach((n=>{S+=`\n    INSERT INTO "l_wish_days" (\n        "day_id",\n        "starttime",\n        "endtime",\n        "listener_id"\n    ) VALUES (\n        '${n.day_id}',\n        '${n.starttime}',\n        '${n.endtime}',\n        '${e}'\n    );\n    `}))):y.forEach((e=>{S+=`\n  UPDATE "l_wish_days" SET\n      "day_id" ='${e.day_id}',\n      "starttime"='${e.starttime}',\n      "endtime"='${e.endtime}'\nWHERE\n      "l_wish_day_id"='${e.l_wish_day_id}';\n  `}));const O={query:S};return r.A.post(a,O,{headers:s()})}deleteContractById(e){const n=`${o}/Contract/${e}`;return r.A.delete(n,{headers:s()})}getAllContracts(){const e={query:"SELECT \n      *,\n      contracts.id AS contract_id,\n      listeners.id AS listener_id,\n      CONCAT(listeners.lastname, ' ', listeners.name, ' ', listeners.surname) AS listener_full_name,\n      listeners.snils AS listener_snils,\n      listeners.passport AS listener_passport,\n      listeners.issued_by AS listener_issued_by,\n      listeners.issue_date AS listener_issue_date,\n      listeners.department_code AS listener_department_code,\n      listeners.registration_address AS listener_registration_address,\n      listeners.phone_number AS listener_phone_number,\n      listeners.email AS listener_email,\n      payers.id AS payer_id,\n      CONCAT(payers.lastname, ' ', payers.name, ' ', payers.surname) AS payer_full_name,\n      payers.snils AS payer_snils,\n      payers.passport AS payer_passport,\n      payers.issued_by AS payer_issued_by,\n      payers.issue_date AS payer_issue_date,\n      payers.department_code AS payer_department_code,\n      payers.registration_address AS payer_registration_address,\n      payers.phone_number AS payer_phone_number,\n      payers.email AS payer_email,\n      programs.program_name,\n      contracts.contr_number,\n      contracts.id,TO_CHAR(listeners.issue_date, 'DD/MM/YYYY') AS listener_issue_date,\n      TO_CHAR(start_date, 'DD/MM/YYYY') AS start_date,\n      TO_CHAR(end_date, 'DD/MM/YYYY') AS end_date,\n      TO_CHAR(date_enroll, 'DD/MM/YYYY') AS date_enroll,\n      TO_CHAR(date_kick, 'DD/MM/YYYY') AS date_kick\n  FROM \n      contracts\n  JOIN\n      listeners ON contracts.listener_id = listeners.id\n  JOIN\n      payers ON contracts.payer_id = payers.id\n  JOIN\n      programs ON contracts.program_id = programs.id;\n  "};return r.A.post(a,e,{headers:s()})}getContractById(e){const n={query:`SELECT * from contracts where \n      id='${e}';`};return r.A.post(a,n,{headers:s()})}addContract(e,n,t,a,d,u,i,c,p){const l={listenerId:e,payerId:n,contrNumber:t,programId:a,certDate:d,listenedHours:u,dateEnroll:i,dateKick:c,groupToMove:p};return r.A.post(`${o}/Contract`,l,{headers:s()}).then((e=>e.data)).catch((e=>{throw console.error("Error adding contract:",e),e}))}updateContractById(e,n,t,a,d){const u={id:e,listenerId:n,payerId:t,contrNumber:a,programId:d};return r.A.put(`${o}/Contract/${e}`,u,{headers:s()}).then((e=>e.data)).catch((e=>{throw console.error("Error updating contract:",e),e}))}getPayersAsIdText(){const e={query:"SELECT id AS id, CONCAT(lastname, ' ', name, ' ', surname) AS text\n      FROM \"payers\" ORDER BY \n      text ASC;"};return r.A.post(a,e,{headers:s()})}getLgroupsAsIdText(){const e={query:'SELECT id AS id, group_number AS text\n      FROM "l_groups" ORDER BY \n      text ASC;'};return r.A.post(a,e,{headers:s()})}getListenersAsIdText(){const e={query:"SELECT id AS id, CONCAT(lastname, ' ', name, ' ', surname) AS text\n      FROM \"listeners\" ORDER BY \n      text ASC;"};return r.A.post(a,e,{headers:s()})}deleteCwById(e){const n=`${o}/CourseWork/${e}`;return r.A.delete(n,{headers:s()})}getAllCws(){const e={query:"SELECT\n      cw.course_work_id,\n      cw.course_work_teacher_id,\n      cw.course_work_theme,\n      cw.course_work_student_id,\n      cw.course_work_kafedra,\n      CONCAT(s.last_name, ' ', s.first_name, ' ', s.patronymic) AS full_name,\n      s.gender AS student_gender,\n      s.date_of_birth AS student_date_of_birth,\n      s.passport_series_and_number AS student_passport,\n      s.\"INN\" AS student_INN,\n      s.\"SNILS\" AS student_SNILS,\n      s.place_of_birth AS student_place_of_birth,\n      s.email AS student_email,\n      s.student_login AS student_login,\n      s.enrollment_order AS student_enrollment_order,\n      s.enrolled_date AS student_enrolled_date,\n      s.course AS student_course,\n      s.group_id AS student_group_id,\n      s.subgroup AS student_subgroup,\n      d.dep_name,\n      CONCAT(t.last_name, ' ', t.first_name, ' ', t.patronymic) AS full_name_t\n  FROM\n      course_work cw\n  JOIN\n      students s ON cw.course_work_student_id = s.student_id\n  JOIN\n      departaments d ON cw.course_work_kafedra=d.dep_id\n  JOIN\n      teachers t ON cw.course_work_teacher_id=t.teacher_id;\n  \n  "};return r.A.post(a,e,{headers:s()})}getCwById(e){const n={query:`SELECT * from course_work where \n      course_work_id='${e}';`};return r.A.post(a,n,{headers:s()})}addCw(e,n,t,a,d,u,i){const c={courseWorkTheme:e,courseWorkTeacherId:n,courseWorkStudentId:t,courseWorkKafedra:a,courseWorkVipysk:Boolean(d),courseWorkYear:u,courseWorkOcenka:i};return r.A.post(`${o}/CourseWork`,c,{headers:s()}).then((e=>e.data)).catch((e=>{throw console.error("Error adding course work:",e),e}))}updateCwById(e,n,t,a,d,u,i,c){const p={courseWorkId:e,courseWorkTheme:n,courseWorkTeacherId:t,courseWorkStudentId:a,courseWorkKafedra:d,courseWorkVipysk:Boolean(u),courseWorkYear:i,courseWorkOcenka:c};return r.A.put(`${o}/CourseWork/${e}`,p,{headers:s()}).then((e=>e.data)).catch((e=>{throw console.error("Error updating course work:",e),e}))}getAllPayers(){const e={query:"SELECT\n      CONCAT(lastname, ' ', name, ' ', surname) AS full_name,\n      phone_number,\n      email,\n      id\n  FROM\n      payers;\n  "};return r.A.post(a,e,{headers:s()})}getPayerById(e){const n={query:`SELECT *, TO_CHAR(issue_date , 'YYYY-MM-DD') AS issue_date from payers where \n      id='${e}';`};return r.A.post(a,n,{headers:s()})}deletePayerById(e){const n=`${o}/Payer/${e}`;return r.A.delete(n,{headers:s()})}addPayer(e,n,t,a,d,u,i,c,p,l,m){const h={name:e,surname:n,lastname:t,snils:a,passport:d,issuedBy:u,issueDate:i,departmentCode:c,registrationAddress:p,phoneNumber:l,email:m};return r.A.post(`${o}/Payer`,h,{headers:s()}).then((e=>e.data)).catch((e=>{throw console.error("Error adding payer:",e),e}))}updatePayerById(e,n,t,a,d,u,i,c,p,l,m,h){const _={id:e,name:n,surname:t,lastname:a,snils:d,passport:u,issueDate:c,departmentCode:p,registrationAddress:l,phoneNumber:m,email:h};return r.A.put(`${o}/Payer/${e}`,_,{headers:s()}).then((e=>e.data)).catch((e=>{throw console.error("Error updating payer:",e),e}))}getAllCourses(){const e={query:'SELECT\n      c.course_id,\n      c.course,\n      c.group_id,\n      g.group_number\n  FROM\n      "courses" c\n  JOIN\n      "groups" g ON c.group_id = g.group_id\n      ORDER BY \n      c.course ASC;\n  '};return r.A.post(a,e,{headers:s()})}getCourseById(e){const n={query:`SELECT * from courses where \n      course_id='${e}';`};return r.A.post(a,n,{headers:s()})}addCourse(e,n){const t={query:`INSERT INTO "courses" (\n        "course",\n        "group_id"\n    ) VALUES (\n        '${e}',\n        '${n}'\n    );`};return r.A.post(a,t,{headers:s()})}updateCourseById(e,n,t){const o={query:`"course" = '${n}',\n      "group_id" = '${t}'\n  WHERE\n      "course_id" = '${e}';`};return r.A.put(a+"courses",o,{headers:s()})}deleteProgramById(e){const n=`${o}/Program_u/${e}`;return r.A.delete(n,{headers:s()})}getAllPrograms(){const e={query:"SELECT\n      id,\n      required_amount,\n      program_name,\n      hours,\n      TO_CHAR(start_date , 'YYYY-MM-DD') AS start_date,\n      TO_CHAR(end_date , 'YYYY-MM-DD') AS end_date\n  FROM\n    programs;\n  "};return r.A.post(a,e,{headers:s()})}getProgramById(e){const n={query:`SELECT *, TO_CHAR(start_date , 'YYYY-MM-DD') AS start_date, TO_CHAR(end_date , 'YYYY-MM-DD') AS end_date from programs where \n      id='${e}';`};return r.A.post(a,n,{headers:s()})}addProgram(e,n,t,a,d){const u={requiredAmount:e,programName:n,hours:t,startDate:a,endDate:d};return r.A.post(`${o}/Program_u`,u,{headers:s()}).then((e=>e.data)).catch((e=>{throw console.error("Error adding program:",e),e}))}updateProgramById(e,n,t,a,d,u){const i={id:e,requiredAmount:n,programName:t,hours:a,startDate:d,endDate:u};return r.A.put(`${o}/Program_u/${e}`,i,{headers:s()}).then((e=>e.data)).catch((e=>{throw console.error("Error updating program:",e),e}))}deletePaymentById(e){const n=`${o}/PayGraph/${e}`;return r.A.delete(n,{headers:s()})}getPaymentById(e){const n={query:`SELECT *, TO_CHAR(date_40 , 'YYYY-MM-DD') AS date_40, TO_CHAR(expiration_date , 'YYYY-MM-DD') AS expiration_date from pay_graph where \n      id='${e}';`};return r.A.post(a,n,{headers:s()})}getAllPayments(){const e={query:"SELECT\n      p.id, c.contr_number, TO_CHAR(expiration_date, 'DD/MM/YYYY') AS expiration_date, TO_CHAR(date_40, 'DD/MM/YYYY') AS date_40 from pay_graph p\n      JOIN contracts c ON p.contract_id=c.id;\n  "};return r.A.post(a,e,{headers:s()})}getAuditAsIdText(){const e={query:'SELECT aud_id AS id, number AS text\n      FROM "auditorium";'};return r.A.post(a,e,{headers:s()})}getSubjectAsIdText(){const e={query:'SELECT subject_id AS id, subject_name AS text\n      FROM "subjects";'};return r.A.post(a,e,{headers:s()})}getContractsAsIdText(){const e={query:'SELECT id AS id, contr_number AS text\n      FROM "contracts";'};return r.A.post(a,e,{headers:s()})}getTeachersAsIdText(){const e={query:"SELECT teacher_id AS id, \n      CONCAT_WS(' ',last_name, first_name,patronymic) AS text\n      FROM \"teachers\" ORDER BY \n      text ASC;;"};return r.A.post(a,e,{headers:s()})}updatePaymentById(e,n,t,a,d,u,i,c){const p={id:e,contractId:n,expirationDate:t,date40:a,allSum:d,depositedAmount:u,leftToPay:i,bank:c};return r.A.put(`${o}/PayGraph/${e}`,p,{headers:s()}).then((e=>e.data)).catch((e=>{throw console.error("Error updating payment:",e),e}))}addPayment(e,n,t,a,d,u,i){const c={contractId:e,expirationDate:n,date40:t,allSum:a,depositedAmount:d,leftToPay:u,bank:i};return r.A.post(`${o}/PayGraph`,c,{headers:s()}).then((e=>e.data)).catch((e=>{throw console.error("Error adding payment:",e),e}))}getPaymentsAsIdText(){const e={query:'SELECT id, contr_number AS text\n      FROM "contracts" ORDER BY \n      text ASC;'};return r.A.post(a,e,{headers:s()})}clearTempTeachGruz(){const e={query:'TRUNCATE "temp_teach_gruz" RESTART IDENTITY;'};return r.A.post(a,e,{headers:s()})}clearTempSostav(){const e={query:'TRUNCATE "temp_sostav" RESTART IDENTITY;'};return r.A.post(a,e,{headers:s()})}clearTempFac(){const e={query:'TRUNCATE "temp_fac_names" RESTART IDENTITY;'};return r.A.post(a,e,{headers:s()})}clearTempItogVO(){const e={query:'TRUNCATE "temp_itogVO" RESTART IDENTITY;'};return r.A.post(a,e,{headers:s()})}clearTempDep(){const e={query:'TRUNCATE "temp_departaments" RESTART IDENTITY;'};return r.A.post(a,e,{headers:s()})}cleartempRaspr(){const e={query:'TRUNCATE "temp_distrib_KIT" RESTART IDENTITY;'};return r.A.post(a,e,{headers:s()})}cleartempOfoVO(){const e={query:'TRUNCATE "temp_OFO_VO" RESTART IDENTITY;'};return r.A.post(a,e,{headers:s()})}clearForShedLec(){const e={query:'TRUNCATE "for_sched_lec" RESTART IDENTITY;'};return r.A.post(a,e,{headers:s()})}clearForShedPrac(){const e={query:'TRUNCATE "for_sched_prac" RESTART IDENTITY;'};return r.A.post(a,e,{headers:s()})}clearTempKurs(){const e={query:'TRUNCATE "kurs_VKR" RESTART IDENTITY;'};return r.A.post(a,e,{headers:s()})}insertTempSostav(e){const n={query:`INSERT INTO "temp_sostav" (\n        "name1",\n        "name2",\n        "name3",\n        "fac",\n        "dep",\n        "dolj",\n        "deg",\n        "status") \n        VALUES \n        ${e}\n    ;`};return r.A.post(a,n,{headers:s()})}insertTempTeachNagr(e){const n={query:`INSERT INTO "temp_teach_gruz" (\n        "fam",\n        "fac",\n        "dep",\n        "dis_name",\n        "code_napr",\n        "kurs",\n        "semestr",\n        "kont_budg",\n        "kont_dog",\n        "number_of_streams",\n        "number_of_groups",\n        "number_of_subgroups",\n        "lec_h",\n        "seminar_h",\n        "lab_h",\n        "consult_h",\n        "exam_h",\n        "zachet_h",\n        "kursach_h",\n        "control_h",\n        "VKR_h",\n        "magistr_h",\n        "GEK_h",\n        "practice_h",\n        "manage_h",\n        "other_h")\n      VALUES\n        ${e}\n    ;`};return r.A.post(a,n,{headers:s()})}insertTempFac(e){const n={query:`INSERT INTO "temp_fac_names" (\n        "full_name",\n        "short_name") \n        VALUES\n        ${e}\n    ;`};return r.A.post(a,n,{headers:s()})}insertTempDep(e){const n={query:`INSERT INTO "temp_departaments" (\n        "dep_name",\n        "dep_abb") \n        VALUES\n        ${e}\n    ;`};return r.A.post(a,n,{headers:s()})}insertTempItogVO(e){const n={query:`INSERT INTO "temp_itogVO" (\n        "fac",\n        "dep",\n        "years",\n        "lek_budj",\n        "lek_dogovor",\n        "p_budg",\n        "p_dogovor" ,\n        "lab_budj",\n        "lab_dogovor",\n        "cons_ex",\n        "cons_zfo",\n        "control_work",\n        "zachet_h",\n        "ex_speak",\n        "ex_wr",\n        "practice",\n        "manageVKR",\n        "recVKR",\n        "normContVKR",\n        "checkPlagVKR",\n        "GOSexam",\n        "defVKR",\n        "manag")\n        VALUES\n        ${e}\n    ;`};return r.A.post(a,n,{headers:s()})}insertTempPractice(e){const n={query:`INSERT INTO "temp_practice" (\n        "fac",\n        "dep",\n        "years",\n        "napr",\n        "profile",\n        "practice_name",\n        "srok",\n        "kurs",\n        "semestr",\n        "number_of_weeks",\n        "number_of_work_days",\n        "students_budg",\n        "students_dog",\n        "number_of_groups",\n        "number_of_subgroups",\n        "budg_h",\n        "dog_h")\n        VALUES\n        ${e}\n    ;`};return r.A.post(a,n,{headers:s()})}insertForShedLec(e){const n={query:`INSERT INTO "for_sched_lec" (\n        "fac",\n        "dep",\n        "napr",\n        "kurs",\n        "disc",\n        "number_of_streams",\n        "number_of_groups",\n        "number_of_subgroups",\n        "lec_h",\n        "fio")\n        VALUES\n        ${e}\n    ;`};return r.A.post(a,n,{headers:s()})}insertForShedPrac(e){const n={query:`INSERT INTO "for_sched_prac" (\n        "fac",\n        "dep",\n        "napr",\n        "kurs",\n        "disc",\n        "number_of_subgroups",\n        "fio",\n        "display_audit")\n        VALUES\n        ${e}\n    ;`};return r.A.post(a,n,{headers:s()})}insertTempRaspr(e){const n={query:`INSERT INTO "temp_distrib_KIT" (\n        "fac",\n        "kaf",\n        "fio",\n        "sem1",\n        "sem2",\n        "lec",\n        "sem",\n        "lab",\n        "practice",\n        "VKR",\n        "GEK")\n        VALUES\n        ${e}\n      ;`};return r.A.post(a,n,{headers:s()})}insertTempOfoVO(e){const n={query:`INSERT INTO "temp_OFO_VO" (\n        "fac",\n        "dep",\n        "dis_name",\n        "code_napr",\n        "kurs",\n        "kont_budg",\n        "kont_dog",\n        "number_of_streams",\n        "number_of_groups",\n        "number_of_subgroups",\n        "lek_budj",\n        "lek_dogovor",\n        "p_budg",\n        "p_dogovor",\n        "lab_budj",\n        "lab_dogovor",\n        "cons_ex",\n        "zachet_h",\n        "ex_speak",\n        "ex_wr",\n        "practice")\n        VALUES\n        ${e}\n      ;`};return r.A.post(a,n,{headers:s()})}insertTempKursVKR(e){const n={query:`INSERT INTO "kurs_VKR" (\n        "fac",\n        "dep",\n        "years",\n        "type",\n        "kurs",\n        "form",\n        "teach_fio",\n        "napr",\n        "st_fio"\n      ) VALUES ${e};`};return r.A.post(a,n,{headers:s()})}insertTempProffesions(e){const n={query:`INSERT INTO "temp_proffesions" (\n        "fac",\n        "dep",\n        "napr",\n        "profile",\n        "kval",\n        "srok",\n        "proffesions"\n      ) VALUES ${e};`};return r.A.post(a,n,{headers:s()})}getTempTeachGruzCount(){const e={query:'SELECT COUNT(*) FROM "temp_teach_gruz";'};return r.A.post(a,e,{headers:s()})}getTempSostavCount(){const e={query:'SELECT COUNT(*) FROM "temp_sostav";'};return r.A.post(a,e,{headers:s()})}getTempFacCount(){const e={query:'SELECT COUNT(*) FROM "temp_fac_names";'};return r.A.post(a,e,{headers:s()})}getTempDepCount(){const e={query:'SELECT COUNT(*) FROM "temp_departaments";'};return r.A.post(a,e,{headers:s()})}getTempItogVOcount(){const e={query:'SELECT COUNT(*) FROM "temp_itogVO";'};return r.A.post(a,e,{headers:s()})}"getTempRasprСount"(){const e={query:'SELECT COUNT(*) FROM "temp_distrib_KIT";'};return r.A.post(a,e,{headers:s()})}getTempOFOVOcount(){const e={query:'SELECT COUNT(*) FROM "temp_OFO_VO";'};return r.A.post(a,e,{headers:s()})}getForShedLecOcount(){const e={query:'SELECT COUNT(*) FROM "for_sched_lec";'};return r.A.post(a,e,{headers:s()})}getForShedPraccount(){const e={query:'SELECT COUNT(*) FROM "for_sched_prac";'};return r.A.post(a,e,{headers:s()})}getTempKurscount(){const e={query:'SELECT COUNT(*) FROM "kurs_VKR";'};return r.A.post(a,e,{headers:s()})}getTempPlanSvodcount(){const e={query:'SELECT COUNT(*) FROM "empty_table";'};return r.A.post(a,e,{headers:s()})}getTempKompetcount(){const e={query:'SELECT COUNT(*) FROM "empty_table";'};return r.A.post(a,e,{headers:s()})}getTempGruzKurscount(){const e={query:'SELECT COUNT(*) FROM "empty_table";'};return r.A.post(a,e,{headers:s()})}getTempKursDiagcount(){const e={query:'SELECT COUNT(*) FROM "empty_table";'};return r.A.post(a,e,{headers:s()})}getPracticecount(){const e={query:'SELECT COUNT(*) FROM "temp_practice";'};return r.A.post(a,e,{headers:s()})}getTempSostav(){const e={query:'SELECT * FROM "temp_sostav" INNER JOIN "temp_fac_names" ON (temp_sostav.fac = temp_fac_names.full_name);'};return r.A.post(a,e,{headers:s()})}getTempTeachGruz(){const e={query:'SELECT * FROM "temp_teach_gruz" INNER JOIN "temp_fac_names" ON (temp_teach_gruz.fac = temp_fac_names.full_name);'};return r.A.post(a,e,{headers:s()})}getTempFac(){const e={query:'SELECT * FROM "temp_fac_names";'};return r.A.post(a,e,{headers:s()})}getTempDep(){const e={query:'SELECT * FROM "temp_departaments";'};return r.A.post(a,e,{headers:s()})}getTempVO(){const e={query:'SELECT * FROM "temp_itogVO" ;'};return r.A.post(a,e,{headers:s()})}getTempRaspr(){const e={query:'SELECT * \n      FROM "temp_distrib_KIT"\n      INNER JOIN "temp_fac_names" \n      ON ("temp_distrib_KIT"."fac" = "temp_fac_names"."full_name");\n      '};return r.A.post(a,e,{headers:s()})}getTempOFO(){const e={query:'SELECT * FROM "temp_OFO_VO";'};return r.A.post(a,e,{headers:s()})}getTempKurs(){const e={query:'SELECT * FROM "kurs_VKR";'};return r.A.post(a,e,{headers:s()})}getForShedLec(){const e={query:'SELECT * FROM "for_sched_lec" INNER JOIN "temp_fac_names" ON (for_sched_lec.fac = temp_fac_names.full_name);'};return r.A.post(a,e,{headers:s()})}getForShedPrac(){const e={query:'SELECT * FROM "for_sched_prac" INNER JOIN "temp_fac_names" ON (for_sched_prac.fac = temp_fac_names.full_name);'};return r.A.post(a,e,{headers:s()})}getKurs(){const e={query:'SELECT * FROM "temp_distrib_KIT";'};return r.A.post(a,e,{headers:s()})}updateTempNagrFam(e,n){const t={query:`UPDATE "temp_teach_gruz"\n      SET "fam" = '${n}'\n      WHERE "id" = '${e}';`};return r.A.post(a,t,{headers:s()})}saveTeachers(e){const n={query:`INSERT INTO "teachers" (\n        "first_name",\n        "last_name",\n        "patronymic"\n        ) \n        VALUES\n        ${e}\n    ;`};return r.A.post(a,n,{headers:s()})}savesSchedule(e,n,t,o){const d={query:`INSERT INTO "schedule" (\n          "aud_id",\n          "day_id",\n          "subject_id",\n          "teacher_id"\n      ) VALUES (\n          '${e}',\n          '${n}',\n          '${t}',\n          '${o}'\n      );`};return r.A.post(a,d,{headers:s()})}getAllAudit(){const e={query:"SELECT\n       ts.t_id,\n       a.number,\n       a.type,\n       a.count,\n       s.subject_name,\n       d.dayofweek,\n       CONCAT_WS(' ', t.last_name, t.first_name, t.patronymic) AS full_name\n       \n    FROM\n      tsch ts\n      join\n      auditorium a on ts.aud_id=a.aud_id\n      join\n      subjects s on ts.subject_id=s.subject_id\n      join\n      days d on ts.day_id=d.day_id\n      join \n      teachers t on ts.teacher_id=t.teacher_id;\n    "};return r.A.post(a,e,{headers:s()})}getAuditById(e){const n={query:`SELECT * from tsch where \n        t_id='${e}';`};return r.A.post(a,n,{headers:s()})}updateScheduleById(e,n,t,o,d,u){const i={query:`"aud_id" = '${n}',\n        "day_id" = '${t}',\n        "subject_id" = '${o}',\n        "teacher_id" = '${d}',\n        \n        "group_id" ='${u}'\n    WHERE\n        "t_id" = '${e}';`};return r.A.put(a+"tsch",i,{headers:s()})}deleteScheduleById(e){const n={query:`DELETE FROM tsch where "t_id" = '${e}';`};return r.A.post(a,n,{headers:s()})}getAllTeacherSchedule(e){const n={query:`SELECT d.dayofweek, ts.time, s.subject_name, g.group_number\n         FROM tsch ts\n         join\n         days d on ts.day_id=d.day_id\n         join\n         subjects s on ts.subject_id=s.subject_id\n         join \n         groups g on ts.group_id=g.group_id\n         WHERE teacher_id = '${e}';`};return r.A.post(a,n,{headers:s()})}getTeacherDisciplines(e){const n={query:`SELECT dis_name\n        FROM teach_gruz\n        WHERE fam = '${e}';`};return r.A.post(a,n,{headers:s()})}getAuditoriumsByDiscipline(){const e={query:"SELECT number\n        FROM auditorium;"};return r.A.post(a,e,{headers:s()})}getAllJournals(){const e={query:"select \nj.date,\nj.grade,\nj.status,\nj.teacher_id,\nj.subject_id,\ns.student_id,\ng.group_id,\nCONCAT_WS(' ', j.date) AS date,\nCONCAT_WS(' ', s.last_name, s.first_name, s.patronymic) AS full_name,\nCONCAT_WS('/', g.group_number, NULLIF(s.subgroup, '')) AS group_name,\ng.group_number\nfrom \n  journal as j \njoin \n  students as s\non \n  j.student_id=s.student_id\njoin\n    groups as g\non\n  j.group_id=g.group_id\njoin\n  teachers as t\non\nj.teacher_id=t.teacher_id\njoin\n    subjects as su\non\n  j.subject_id=su.subject_id\n"};return r.A.post(a,e,{headers:s()})}deleteTeacherById(e){const n={query:`DELETE FROM teachers where "teacher_id" = '${e}'`};return r.A.post(a,n,{headers:s()})}getAllTeacherss(){const e={query:"SELECT\n      \n      CONCAT_WS(' ',t.last_name,t.first_name, t.patronymic) AS full_name,\n      t.teacher_id\n      FROM teachers AS t;\n      \n  "};return r.A.post(a,e,{headers:s()})}deleteTegrsuById(e){const n={query:`DELETE FROM tegrsus where "tegrsu_id" = '${e}'`};return r.A.post(a,n,{headers:s()})}getTegrsusAsIdText(){const e={query:'SELECT tegrsu_id AS id, tegrsu_group_id AS text\n    FROM "tegrsus";'};return r.A.post(a,e,{headers:s()})}getAllTegrsus(){const e={query:'SELECT\n    te.tegrsu_id,\n    t.teacher_id,\n    gr.group_id,\n    gr.group_number,\n    s.subject_id,\n    s.subject_name\nFROM\n    "tegrsus" AS te\nJOIN\n    "teachers" AS t\nON\n    te.tegrsu_teacher_id = t.teacher_id\nJOIN\n    "groups" AS gr\nON\n    te.tegrsu_group_id = gr.group_id\n\nJOIN\n    "subjects" AS s\nON\n    te.tegrsu_subject_id = s.subject_id;\n'};return r.A.post(a,e,{headers:s()})}updateTegrsuById(e,n,t,o){const d={query:`"tegrsu_teacher_id" = '${n}',\n    "tegrsu_group_id" = '${t}',\n    "tegrsu_subject_id" = '${o}'\n    \nWHERE\n    "tegrsu_id" = '${e}';`};return r.A.put(a+"tegrsus",d,{headers:s()})}addTegrsu(e,n,t){const o={query:`INSERT INTO "tegrsus" (\n      "tegrsu_teacher_id",\n      "tegrsu_group_id",\n      "tegrsu_subject_id"\n  ) VALUES (\n      '${e}',\n      '${n}',\n      '${t}'\n  );`};return r.A.post(a,o,{headers:s()})}getTegrsuById(e){const n={query:`SELECT * from tegrsus where \n    tegrsu_id='${e}';`};return r.A.post(a,n,{headers:s()})}}var u=new d}},n={};function t(r){var s=n[r];if(void 0!==s)return s.exports;var a=n[r]={exports:{}};return e[r].call(a.exports,a,a.exports,t),a.exports}t.m=e,function(){var e=[];t.O=function(n,r,s,a){if(!r){var o=1/0;for(c=0;c<e.length;c++){r=e[c][0],s=e[c][1],a=e[c][2];for(var d=!0,u=0;u<r.length;u++)(!1&a||o>=a)&&Object.keys(t.O).every((function(e){return t.O[e](r[u])}))?r.splice(u--,1):(d=!1,a<o&&(o=a));if(d){e.splice(c--,1);var i=s();void 0!==i&&(n=i)}}return n}a=a||0;for(var c=e.length;c>0&&e[c-1][2]>a;c--)e[c]=e[c-1];e[c]=[r,s,a]}}(),function(){t.n=function(e){var n=e&&e.__esModule?function(){return e["default"]}:function(){return e};return t.d(n,{a:n}),n}}(),function(){var e,n=Object.getPrototypeOf?function(e){return Object.getPrototypeOf(e)}:function(e){return e.__proto__};t.t=function(r,s){if(1&s&&(r=this(r)),8&s)return r;if("object"===typeof r&&r){if(4&s&&r.__esModule)return r;if(16&s&&"function"===typeof r.then)return r}var a=Object.create(null);t.r(a);var o={};e=e||[null,n({}),n([]),n(n)];for(var d=2&s&&r;"object"==typeof d&&!~e.indexOf(d);d=n(d))Object.getOwnPropertyNames(d).forEach((function(e){o[e]=function(){return r[e]}}));return o["default"]=function(){return r},t.d(a,o),a}}(),function(){t.d=function(e,n){for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})}}(),function(){t.f={},t.e=function(e){return Promise.all(Object.keys(t.f).reduce((function(n,r){return t.f[r](e,n),n}),[]))}}(),function(){t.u=function(e){return"js/"+e+"."+{219:"6edd0b97",306:"748a65a0",385:"4f7f0673",457:"43072b53",674:"44cd7488",839:"279ff7a1",842:"65169c1d",898:"b3c4b9f8",911:"b11115d7",949:"369f2784",1174:"731b3e2d",1228:"38f0032b",1503:"b6a5aef5",2448:"82906087",2590:"e90ddcc1",2656:"f04e072e",2672:"984a7476",2858:"bb67b1cb",2967:"9d2e5831",3399:"77197cb0",3477:"b9d3bc89",3605:"6c92b63e",3700:"35ab4c90",3763:"031019bf",3902:"7d0e8b5f",4072:"b6ef05c6",4112:"abbbc8d9",4121:"d3e830e5",4331:"a4b73b9c",4730:"0f5d9e23",4745:"531672c9",4906:"e5174a8f",4954:"001ce5ed",5026:"b9475850",5213:"588f4771",5265:"93cdf071",5484:"4b775770",5635:"f60518f4",6015:"b25968db",6097:"d325cb69",6206:"3c12c2d3",6374:"ea1e2a05",6475:"06682dd8",6798:"dfe94091",6818:"30a438d7",6951:"dbd72823",6974:"b6cbc6ac",7126:"849d9e2c",7196:"22bc1a46",7301:"f4fcd5ac",7471:"d1fae576",7508:"e00e8369",7589:"ab3f6d53",7842:"7888bf93",7884:"f9079b33",8046:"67dab100",8121:"9268faf9",8616:"4533d048",8863:"80e14aa9",8938:"2077f6af",8943:"c779c016",9203:"f15c9a8b",9286:"dce52aa9",9305:"46758f3a",9538:"82a7bacc",9650:"e0fa10ae"}[e]+".js"}}(),function(){t.miniCssF=function(e){return"css/"+e+"."+{219:"faebebe0",385:"eef7809e",457:"14698f87",674:"593e3cbe",839:"8209e66a",842:"aa7fb0bd",898:"6a9a8e5c",911:"5310c104",949:"d996a659",1174:"10fff1d0",1228:"4fd6296b",1503:"e26070c0",2448:"ee7dfeb3",2590:"b2275eb6",2656:"a196333d",2672:"587ba431",2858:"869d38d6",2967:"2bc46d5c",3399:"fb6427b3",3477:"6862af65",3605:"fe852c27",3700:"982c8d88",3763:"e87443c8",3902:"ed6df4d3",4072:"67260d5d",4112:"dbee8548",4121:"57951295",4331:"b9793e2b",4745:"65422510",4906:"444705e9",5026:"453d65f0",5213:"f250d7a6",5265:"e8341daf",5484:"60c9000c",5635:"4b605bd2",6015:"cf6e9af0",6097:"bd148acb",6206:"0166d665",6374:"581f2052",6475:"88ed424d",6798:"e5e9f4ca",6818:"1589be84",6951:"86bfcd4d",6974:"deab1aee",7126:"1a1920cd",7196:"94e78b86",7301:"33604b5d",7471:"5a308c9a",7508:"55f4ad75",7589:"6e0edb3b",7842:"49f14941",7884:"2cd52d18",8046:"a9db3bf5",8121:"ba259b9d",8616:"0f33988a",8863:"917e1929",8938:"5352aaad",8943:"19e545b9",9203:"811c0f77",9286:"988b52a1",9538:"523d2a97",9650:"0b12c47d"}[e]+".css"}}(),function(){t.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)}}(),function(){var e={},n="vue-3-authentication-jwt:";t.l=function(r,s,a,o){if(e[r])e[r].push(s);else{var d,u;if(void 0!==a)for(var i=document.getElementsByTagName("script"),c=0;c<i.length;c++){var p=i[c];if(p.getAttribute("src")==r||p.getAttribute("data-webpack")==n+a){d=p;break}}d||(u=!0,d=document.createElement("script"),d.charset="utf-8",d.timeout=120,t.nc&&d.setAttribute("nonce",t.nc),d.setAttribute("data-webpack",n+a),d.src=r),e[r]=[s];var l=function(n,t){d.onerror=d.onload=null,clearTimeout(m);var s=e[r];if(delete e[r],d.parentNode&&d.parentNode.removeChild(d),s&&s.forEach((function(e){return e(t)})),n)return n(t)},m=setTimeout(l.bind(null,void 0,{type:"timeout",target:d}),12e4);d.onerror=l.bind(null,d.onerror),d.onload=l.bind(null,d.onload),u&&document.head.appendChild(d)}}}(),function(){t.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){t.p="/"}(),function(){if("undefined"!==typeof document){var e=function(e,n,r,s,a){var o=document.createElement("link");o.rel="stylesheet",o.type="text/css",t.nc&&(o.nonce=t.nc);var d=function(t){if(o.onerror=o.onload=null,"load"===t.type)s();else{var r=t&&t.type,d=t&&t.target&&t.target.href||n,u=new Error("Loading CSS chunk "+e+" failed.\n("+r+": "+d+")");u.name="ChunkLoadError",u.code="CSS_CHUNK_LOAD_FAILED",u.type=r,u.request=d,o.parentNode&&o.parentNode.removeChild(o),a(u)}};return o.onerror=o.onload=d,o.href=n,r?r.parentNode.insertBefore(o,r.nextSibling):document.head.appendChild(o),o},n=function(e,n){for(var t=document.getElementsByTagName("link"),r=0;r<t.length;r++){var s=t[r],a=s.getAttribute("data-href")||s.getAttribute("href");if("stylesheet"===s.rel&&(a===e||a===n))return s}var o=document.getElementsByTagName("style");for(r=0;r<o.length;r++){s=o[r],a=s.getAttribute("data-href");if(a===e||a===n)return s}},r=function(r){return new Promise((function(s,a){var o=t.miniCssF(r),d=t.p+o;if(n(o,d))return s();e(r,d,null,s,a)}))},s={3524:0};t.f.miniCss=function(e,n){var t={219:1,385:1,457:1,674:1,839:1,842:1,898:1,911:1,949:1,1174:1,1228:1,1503:1,2448:1,2590:1,2656:1,2672:1,2858:1,2967:1,3399:1,3477:1,3605:1,3700:1,3763:1,3902:1,4072:1,4112:1,4121:1,4331:1,4745:1,4906:1,5026:1,5213:1,5265:1,5484:1,5635:1,6015:1,6097:1,6206:1,6374:1,6475:1,6798:1,6818:1,6951:1,6974:1,7126:1,7196:1,7301:1,7471:1,7508:1,7589:1,7842:1,7884:1,8046:1,8121:1,8616:1,8863:1,8938:1,8943:1,9203:1,9286:1,9538:1,9650:1};s[e]?n.push(s[e]):0!==s[e]&&t[e]&&n.push(s[e]=r(e).then((function(){s[e]=0}),(function(n){throw delete s[e],n})))}}}(),function(){var e={3524:0};t.f.j=function(n,r){var s=t.o(e,n)?e[n]:void 0;if(0!==s)if(s)r.push(s[2]);else{var a=new Promise((function(t,r){s=e[n]=[t,r]}));r.push(s[2]=a);var o=t.p+t.u(n),d=new Error,u=function(r){if(t.o(e,n)&&(s=e[n],0!==s&&(e[n]=void 0),s)){var a=r&&("load"===r.type?"missing":r.type),o=r&&r.target&&r.target.src;d.message="Loading chunk "+n+" failed.\n("+a+": "+o+")",d.name="ChunkLoadError",d.type=a,d.request=o,s[1](d)}};t.l(o,u,"chunk-"+n,n)}},t.O.j=function(n){return 0===e[n]};var n=function(n,r){var s,a,o=r[0],d=r[1],u=r[2],i=0;if(o.some((function(n){return 0!==e[n]}))){for(s in d)t.o(d,s)&&(t.m[s]=d[s]);if(u)var c=u(t)}for(n&&n(r);i<o.length;i++)a=o[i],t.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return t.O(c)},r=self["webpackChunkvue_3_authentication_jwt"]=self["webpackChunkvue_3_authentication_jwt"]||[];r.forEach(n.bind(null,0)),r.push=n.bind(null,r.push.bind(r))}();var r=t.O(void 0,[504],(function(){return t(2248)}));r=t.O(r)})();
//# sourceMappingURL=app.4b8e9399.js.map